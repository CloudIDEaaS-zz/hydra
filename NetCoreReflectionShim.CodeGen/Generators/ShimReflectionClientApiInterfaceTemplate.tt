<#@ template language="C#" inherits="NetCoreReflectionShim.CodeGen.TemplateBase"  #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Utils" #>
<#@ output extension=".cs" #>
<#@ parameter type="System.EventHandler" name="DebugCallback" #>
<#@ parameter type="NetCoreReflectionShim.CodeGen.ReflectMemberEventHandler" name="ReflectMemberCallback" #>
<#@ parameter type="System.Collections.Generic.List<ApiMember>" name="ApiMembers" #>
using CoreShim.Reflection;
using System;
using System.Collections.Generic;
using System.Reflection;

namespace NetCoreReflectionShim.Agent
{
    public interface INetCoreReflectionAgent : IDisposable
    {
        bool TestMode { get; set; }
        Dictionary<string, string> RedirectedNamespaces { get; }
        Dictionary<string, Type> CachedTypes { get; }
        Assembly LoadCoreAssembly(Assembly assembly, Dictionary<string, string> redirectedNamespaces);
<#
    foreach (var member in this.ApiMembers.Where(m => !m.CacheResult))
    {
#>
        <#= member.ClientReturnType #> <#= member.ClientSignature #>;
<#
    }
#>
    }
}
