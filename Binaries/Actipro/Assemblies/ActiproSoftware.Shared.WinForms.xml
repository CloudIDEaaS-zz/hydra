<?xml version="1.0"?><doc><assembly><name>ActiproSoftware.Shared.WinForms</name></assembly><members><member name="T:ActiproSoftware.Win32.HookBase"><summary>
            Provides a base class for a Win32 hook.
            </summary></member><member name="M:ActiproSoftware.Win32.HookBase.Dispose"><summary>
            Disposes any resources used by the object.
            </summary></member><member name="M:ActiproSoftware.Win32.HookBase.OnHookCallback(System.Int32,System.IntPtr,System.IntPtr)"><summary>
            Called when the hook receives a callback.
            </summary><param name="code">The hook code.</param><param name="wParam">The first parameter.</param><param name="lParam">The second parameter.</param><returns>Whether the hook has been handled.</returns></member><member name="T:ActiproSoftware.Win32.IMouseHookCallback"><summary>
            Provides the requirements for an object that may receive mouse hook callbacks.
            </summary></member><member name="M:ActiproSoftware.Win32.IMouseHookCallback.OnMouseHookEvent(ActiproSoftware.Win32.MouseHookEventArgs)"><summary>
            Called when a mouse hook receives a mouse message.
            </summary><param name="e">A <c>MouseHookEventArgs</c> that contains the event data.</param></member><member name="T:ActiproSoftware.Win32.MouseHook"><summary>
            Provides an implementation of a mouse hook.
            </summary></member><member name="M:ActiproSoftware.Win32.MouseHook.#ctor(ActiproSoftware.Win32.IMouseHookCallback)"><summary>
            Initializes a new instance of the <c>MouseHook</c> class. 
            </summary><param name="hookOwner">The owner of the hook.</param></member><member name="M:ActiproSoftware.Win32.MouseHook.OnHookCallback(System.Int32,System.IntPtr,System.IntPtr)"><summary>
            Called when the hook receives a callback.
            </summary><param name="code">The hook code.</param><param name="wParam">The first parameter.</param><param name="lParam">The second parameter.</param><returns>Whether the hook has been handled.</returns></member><member name="T:ActiproSoftware.Win32.MouseHookEventArgs"><summary>
            Provides data for a mouse hook callback.
            </summary></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.Handle"><summary>
            Gets the handle of the window that will receive the message.
            </summary><value>The handle of the window that will receive the message.</value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.Handled"><summary>
            Gets or sets whether the event has been handled.
            </summary><value><c>true</c> if the event has been handled; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.HitTestCodeHiWord"><summary>
            Gets the type of area that the mouse is over.
            </summary><value>The type of area that the mouse is over.</value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.HitTestCodeLoWord"><summary>
            Gets the type of area that the mouse is over.
            </summary><value>The type of area that the mouse is over.</value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.Message"><summary>
            Gets the mouse message that is being sent.
            </summary><value>The mouse message that is being sent.</value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.MouseDataHiWord"><summary>
            Gets extra mouse data that was sent with the message.
            </summary><value>Extra mouse data that was sent with the message.</value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.MouseDataLoWord"><summary>
            Gets extra mouse data that was sent with the message.
            </summary><value>Extra mouse data that was sent with the message.</value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.Position"><summary>
            Gets the position of the mouse.
            </summary><value>A <c>Point</c> containing the position of the mouse.</value></member><member name="T:ActiproSoftware.Win32.MouseHookEventHandler"><summary>
            Represents the method that will handle a mouse hook callback.
            </summary><param name="sender">Sender of the event.</param><param name="e">A <see cref="T:ActiproSoftware.Win32.MouseHookEventArgs" /> containing event data.</param><remarks>
            When you create a <c>MouseHookEventHandler</c> delegate, you identify the method that will handle the event. 
            To associate the event with your event handler, add an instance of the delegate to the event. 
            The event handler is called whenever the event occurs, unless you remove the delegate.
            </remarks></member><member name="T:ActiproSoftware.UI.WinForms.DefaultableBoolean"><summary>
            Specifies that boolean value that can also be set to use a default.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.DefaultableBoolean.Default"><summary>
            Represents the default value.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.DefaultableBoolean.True"><summary>
            Represents a true value.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.DefaultableBoolean.False"><summary>
            Represents a false value.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.DefaultableInt32"><summary>
            Provides a representation for an <see cref="T:System.Int32" /> that can be defaulted.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.DefaultableInt32.#ctor(System.Int32)"><summary>
            Initializes a new instance of the <c>DefaultableInt32</c> structure.
            </summary><param name="value">The integer value of the structure.</param></member><member name="M:ActiproSoftware.UI.WinForms.DefaultableInt32.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.DefaultableInt32.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="P:ActiproSoftware.UI.WinForms.DefaultableInt32.Default"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.DefaultableInt32" /> that represents a default value.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.DefaultableInt32" /> that represents a default value.</value></member><member name="P:ActiproSoftware.UI.WinForms.DefaultableInt32.IsDefault"><summary>
            Gets whether the value of the structure is flagged as a default.
            </summary><value><c>true</c> if the value of the structure is flagged as a default; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.DefaultableInt32.Value"><summary>
            Gets the value of the structure.
            </summary><value>The value of the structure.</value></member><member name="T:ActiproSoftware.UI.WinForms.DisposableObject"><summary>
            Provides a base class that implements the IDisposable interface.
            This class functions in accordance with the Disposable design pattern.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.DisposableObject.#ctor"><summary>
            Initializes a new instance of the <c>DisposableObject</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.DisposableObject.Finalize"><summary>
            Allows an object to attempt to free resources and perform other cleanup operations before the 
            object is reclaimed by garbage collection.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.DisposableObject.Dispose"><summary>
            Releases all resources used by the object.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.DisposableObject.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.DisposableObject.VerifyNotDisposed"><summary>
            Throws an <c>ObjectDisposedException</c> if the object has already been disposed.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.DisposableObject.IsDisposed"><summary>
            Gets whether the object has been disposed.
            </summary><value><c>true</c> if the object has been disposed; otherwise, <c>false</c>.
            </value></member><member name="E:ActiproSoftware.UI.WinForms.DisposableObject.Disposed"><summary>
            Occurs when the object is disposed.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.ExceptionBase"><summary>
            A base class for exceptions thrown from Actipro products.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.ExceptionBase.#ctor"><summary>
            Initializes a new instance of the <c>ExceptionBase</c> class.
            </summary><remarks>
            This constructor initializes the <c>Message</c> property of the new instance to a system-supplied message that describes the error, 
            such as "An application error has occurred."  This message takes into account the current system culture.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.ExceptionBase.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>ExceptionBase</c> class with a specified error message.
            </summary><param name="message">A message that describes the error.</param><remarks>
            The content of the <paramref name="message" /> parameter is intended to be understood by humans. 
            The caller of this constructor is required to ensure that this string has been localized for the current system culture.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.ExceptionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"><summary>
            Initializes a new instance of the <c>ExceptionBase</c> class with serialized data.
            </summary><param name="info">The object that holds the serialized object data.</param><param name="context">The contextual information about the source or destination.</param><remarks>
            This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.ExceptionBase.#ctor(System.String,System.Exception)"><summary>
            Initializes a new instance of the <c>ExceptionBase</c> class with a specified error message and a reference 
            to the inner exception that is the cause of this exception..
            </summary><param name="message">The error message that explains the reason for the exception.</param><param name="innerException">
            The exception that is the cause of the current exception. 
            If the innerException parameter is not a null reference, the current exception is raised in a 
            <c>catch</c> block that handles the inner exception.
            </param><remarks><para>
            The content of the <paramref name="message" /> parameter is intended to be understood by humans. 
            The caller of this constructor is required to ensure that this string has been localized for the current system culture.
            </para><para>
            An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception 
            in the <c>InnerException</c> property. 
            The <c>InnerException</c> property returns the same value that is passed into the constructor, 
            or <see langword="null" /> if the <c>InnerException</c> property does not supply the inner exception value to the constructor.
            </para></remarks></member><member name="T:ActiproSoftware.UI.WinForms.ExpandableNullableObjectConverter"><summary>
            Provides a <c>TypeConverter</c> to convert objects to and from other representations.
            </summary><remarks>This class places the text <c>(none)</c> in a property grid when an object reference is <see langword="null" />.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.ExpandableNullableObjectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)"><summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that provides a format context.</param><param name="destType">A <c>Type</c> that represents the type you want to convert to.</param><returns><c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns></member><member name="M:ActiproSoftware.UI.WinForms.ExpandableNullableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"><summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that provides a format context.</param><param name="culture">A <c>CultureInfo</c> object. If <see langword="null" /> is passed, the current culture is assumed. </param><param name="value">The <c>Object</c> to convert.</param><param name="destType">The <c>Type</c> to convert the value parameter to.</param><returns>An <c>Object</c> that represents the converted value.</returns></member><member name="T:ActiproSoftware.UI.WinForms.FallbackControlDesignerProvider"><summary>
            Allows for a fallback <c>ControlDesigner</c> to be used when a specified designer is unavailable.
            </summary><remarks>
            This prevents <c>ComponentDesigner</c> from taking effect when a specified designer is not found.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.FallbackControlDesignerProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)"><summary>
            Initializes a new instance of the <c>FallbackControlDesignerProvider</c> class. 
            </summary><param name="parent">The parent <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</param></member><member name="M:ActiproSoftware.UI.WinForms.FallbackControlDesignerProvider.GetTypeDescriptor(System.Type,System.Object)"><summary>
            Gets a custom type descriptor for the given type and object.
            </summary><param name="objectType">The type of object for which to retrieve the type descriptor.</param><param name="instance">An instance of the type.</param><returns>An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</returns></member><member name="M:ActiproSoftware.UI.WinForms.FallbackControlDesignerProvider.Register(System.Type)"><summary>
            Registers the provider.
            </summary><param name="type">The component <see cref="T:System.Type" />.</param><remarks>
            This method should only be called once per type.
            </remarks></member><member name="T:ActiproSoftware.UI.WinForms.FallbackParentControlDesignerProvider"><summary>
            Allows for a fallback <c>ParentControlDesigner</c> to be used when a specified designer is unavailable.
            </summary><remarks>
            This prevents <c>ComponentDesigner</c> from taking effect when a specified designer is not found.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.FallbackParentControlDesignerProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)"><summary>
            Initializes a new instance of the <c>FallbackParentControlDesignerProvider</c> class. 
            </summary><param name="parent">The parent <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</param></member><member name="M:ActiproSoftware.UI.WinForms.FallbackParentControlDesignerProvider.GetTypeDescriptor(System.Type,System.Object)"><summary>
            Gets a custom type descriptor for the given type and object.
            </summary><param name="objectType">The type of object for which to retrieve the type descriptor.</param><param name="instance">An instance of the type.</param><returns>An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</returns></member><member name="M:ActiproSoftware.UI.WinForms.FallbackParentControlDesignerProvider.Register(System.Type)"><summary>
            Registers the provider.
            </summary><param name="type">The component <see cref="T:System.Type" />.</param><remarks>
            This method should only be called once per type.
            </remarks></member><member name="T:ActiproSoftware.UI.WinForms.FocusState"><summary>
            Describes how an element obtained focus.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.FocusState.Pointer"><summary>
            Element obtained focus through a pointer action.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.FocusState.Keyboard"><summary>
            Element obtained focus through a keyboard action, such as tab sequence traversal.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.FocusState.Programmatic"><summary>
            Element obtained focus through a deliberate call to Focus or a related API.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.GenericExpandableNullableObjectConverter"><summary>
            Provides a <c>TypeConverter</c> to convert objects to and from other representations.
            </summary><remarks>This class places the text <c>(none)</c> in a property grid when an object reference is <see langword="null" />.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.GenericExpandableNullableObjectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)"><summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that provides a format context.</param><param name="destType">A <c>Type</c> that represents the type you want to convert to.</param><returns><c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns></member><member name="M:ActiproSoftware.UI.WinForms.GenericExpandableNullableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"><summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that provides a format context.</param><param name="culture">A <c>CultureInfo</c> object. If <see langword="null" /> is passed, the current culture is assumed. </param><param name="value">The <c>Object</c> to convert.</param><param name="destType">The <c>Type</c> to convert the value parameter to.</param><returns>An <c>Object</c> that represents the converted value.</returns></member><member name="T:ActiproSoftware.UI.WinForms.IKeyedLogicalTreeNode"><summary>
            Provides the base requirements for a node that has a string key and needs to be part of a logical tree.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.IKeyedLogicalTreeNode.Key"><summary>
            Gets a string-based key that identifies the object.
            </summary><value>A string-based key that identifies the object.</value></member><member name="T:ActiproSoftware.UI.WinForms.ILogicalTreeNode"><summary>
            Provides the base requirements for a node that needs to be part of a logical tree.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.ILogicalTreeNode.FindAncestor(System.Type)"><summary>
            Loops up the parent chain to locate an ancestor of the specified <c>Type</c>.
            </summary><param name="type">The <c>Type</c> of ancestor to locate.</param><returns>The <see cref="T:System.Object" /> ancestor that matches the <c>Type</c>.</returns></member><member name="M:ActiproSoftware.UI.WinForms.ILogicalTreeNode.GetCommonAncestor(ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Gets the common ancestor of the two object.
            </summary><param name="value">The <see cref="T:ActiproSoftware.UI.WinForms.ILogicalTreeNode" /> to compare.</param><returns>
            The <see cref="T:ActiproSoftware.UI.WinForms.ILogicalTreeNode" /> that is a common ancestor of both objects; otherwise <see langword="null" />.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.ILogicalTreeNode.IsAncestorOf(ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Gets whether the object is an ancestor to the specified object.
            </summary><param name="value">The <see cref="T:ActiproSoftware.UI.WinForms.ILogicalTreeNode" /> to compare.</param><returns><c>true</c> if the object is an ancestor of the specified object; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.ILogicalTreeNode.IsDescendantOf(ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Gets whether the object is a descendant of the specified object.
            </summary><param name="value">The <see cref="T:ActiproSoftware.UI.WinForms.ILogicalTreeNode" /> to compare.</param><returns><c>true</c> if the object is a descendant of the specified object; otherwise, <c>false</c>.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.ILogicalTreeNode.Children"><summary>
            Gets the collection of child objects.
            </summary><value>The collection of child objects.</value></member><member name="P:ActiproSoftware.UI.WinForms.ILogicalTreeNode.Parent"><summary>
            Gets or sets the object that is parent to this object.
            </summary><value>The object that is parent to this object.</value><remarks>
            The setter of this property is reserved for internal use only.
            </remarks></member><member name="T:ActiproSoftware.UI.WinForms.IWeakEventListener"><summary>
            Provides the base requirements for an object that can receive weak events.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)"><summary>
            Handles a weak event.
            </summary><param name="managerType">The type of weak event manager.</param><param name="sender">The sender of the event.</param><param name="e">The event arguments.</param><returns><c>true</c> if the listener handled the event; otherwise, <c>false</c>.
            </returns></member><member name="T:ActiproSoftware.UI.WinForms.KeyedLogicalTreeNodeCollection"><summary>
            Provides a base collection class for objects that implement <see cref="T:ActiproSoftware.UI.WinForms.IKeyedLogicalTreeNode" />.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.KeyedLogicalTreeNodeCollection.#ctor(ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Initializes a new instance of the <c>KeyedLogicalTreeNodeCollection</c> class. 
            </summary><param name="owner">The owner of the collection.</param></member><member name="M:ActiproSoftware.UI.WinForms.KeyedLogicalTreeNodeCollection.Contains(System.String)"><summary>
            Determines whether a key is in the collection.
            </summary><param name="key">The key to locate in the collection.</param><returns><c>true</c> if the key is found in the collection; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.KeyedLogicalTreeNodeCollection.IndexOf(System.String)"><summary>
            Searches for the specified key and returns the zero-based index of the first occurrence within the entire collection.
            </summary><param name="key">The key to locate in the collection.</param><returns>
            The zero-based index of the first occurrence of the key within the entire collection, if found; otherwise, <c>-1</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.KeyedLogicalTreeNodeCollection.OnValidate(ActiproSoftware.UI.WinForms.ILogicalTreeNode,System.Int32)"><summary>
            Performs additional custom processes when validating a value.
            </summary><param name="value">The object to validate.</param><param name="existingIndex">The index within the collection of the object that would be replaced by the value.</param><remarks>
            The default implementation of this method determines whether value is <see langword="null" />, and if so, 
            throws <see cref="T:System.ArgumentNullException" />.  
            It also implements rules defined by <see cref="P:ActiproSoftware.UI.WinForms.KeyedLogicalTreeNodeCollection.AllowEmptyKeys" /> and <see cref="P:ActiproSoftware.UI.WinForms.KeyedLogicalTreeNodeCollection.AllowDuplicateKeys" />.
            It is intended to be overridden by a derived class to perform additional action when the specified element is validated.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.KeyedLogicalTreeNodeCollection.AllowDuplicateKeys"><summary>
            Gets whether duplicate keys are permitted within the collection.
            </summary><value><c>true</c> if duplicate keys are permitted; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.KeyedLogicalTreeNodeCollection.AllowEmptyKeys"><summary>
            Gets whether empty keys are permitted within the collection.
            </summary><value><c>true</c> if empty keys are permitted; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.UI.WinForms.LogicalTreeNodeBase"><summary>
            Represents a base disposable <see cref="T:System.Object" /> that implements <see cref="T:ActiproSoftware.UI.WinForms.ILogicalTreeNode" />.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeBase.#ctor"><summary>
            Initializes a new instance of the <c>LogicalTreeNodeBase</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeBase.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.UI.WinForms.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeBase.OnParentChanged"><summary>
            Invoked when logical parent is changed. 
            This is invoked after the parent has changed, and the purpose is to allow elements to perform actions based on the changed parent.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection"><summary>
            Provides a base collection class for objects that implement <see cref="T:ActiproSoftware.UI.WinForms.ILogicalTreeNode" />.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.#ctor(ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Initializes a new instance of the <c>LogicalTreeNodeCollection</c> class. 
            </summary><param name="owner">The owner of the collection.</param></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.AddCore(ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Adds an object to the end of the collection.
            </summary><param name="value">The object to be added to the end of the collection. </param><returns>The collection index at which the object has been added.</returns></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.ClearCore"><summary>
            Removes all objects from the collection.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.Contains(ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Returns whether the specified object is in the collection.
            </summary><param name="value">The object to locate in the collection.</param><returns><c>true</c> if the object is found in the collection; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.CopyTo(System.Array,System.Int32)"><summary>
            Copies the entire collection to a compatible one-dimensional <c>Array</c>, 
            starting at the specified index of the target array.
            </summary><param name="array">
            The one-dimensional <c>Array</c> that is the destination of the elements copied from the collection. 
            The <c>Array</c> must have zero-based indexing. 
            </param><param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.DisposeAllChildObjects"><summary>
            Disposes each child object in the collection that implements <see cref="T:System.IDisposable" />.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.GetEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object for the entire collection.
            </summary><returns>An <c>IEnumerator</c> object for the entire collection</returns><remarks>
            Enumerators are intended to be used only to read data in the collection. 
            Enumerators cannot be used to modify the underlying collection.
            <para>
            The enumerator does not have exclusive access to the collection.
            </para><para>
            When an enumerator is instantiated, it takes a snapshot of the current state of the collection. 
            If changes are made to the collection, such as adding, modifying or deleting elements, the 
            snapshot gets out of sync and the enumerator throws an <c>InvalidOperationException</c>. 
            Two enumerators instantiated from the same collection at the same time can have 
            different snapshots of the collection.
            </para></remarks></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.IndexOf(ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire collection.
            </summary><param name="value">The object to locate in the collection.</param><returns>
            The zero-based index of the first occurrence of the object within the entire collection, if found; otherwise, <c>-1</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.InsertCore(System.Int32,ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Inserts an object into the collection at the specified index.
            </summary><param name="index">The zero-based index at which the object should be inserted.</param><param name="value">The object to insert.</param></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.OnObjectAdding(System.Int32,ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Performs additional custom processes before an object is added to the collection.
            </summary><param name="index">The zero-based index at which the object was inserted.</param><param name="value">The object that was inserted.</param><remarks>
            The default implementation of this method is intended to be overridden by a derived class to 
            perform some action after the specified object is added.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.OnObjectAdded(System.Int32,ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Performs additional custom processes after an object is added to the collection.
            </summary><param name="index">The zero-based index at which the object was inserted.</param><param name="value">The object that was inserted.</param><remarks>
            The default implementation of this method is intended to be overridden by a derived class to 
            perform some action after the specified object is added.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.OnObjectRemoving(System.Int32,ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Performs additional custom processes before an object is removed from the collection.
            </summary><param name="index">The zero-based index from which the object was removed.</param><param name="value">The object that was removed.</param><remarks>
            The default implementation of this method is intended to be overridden by a derived class to 
            perform some action before the specified object is removed.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.OnObjectRemoved(System.Int32,ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Performs additional custom processes after an object is removed from the collection.
            </summary><param name="index">The zero-based index from which the object was removed.</param><param name="value">The object that was removed.</param><remarks>
            The default implementation of this method is intended to be overridden by a derived class to 
            perform some action after the specified object is removed.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.OnValidate(ActiproSoftware.UI.WinForms.ILogicalTreeNode,System.Int32)"><summary>
            Performs additional custom processes when validating a value.
            </summary><param name="value">The object to validate.</param><param name="existingIndex">The index within the collection of the object that would be replaced by the value.</param><remarks>
            The default implementation of this method determines whether value is <see langword="null" />, and if so, 
            throws <see cref="T:System.ArgumentNullException" />.  It is intended to be overridden by a derived class to 
            perform additional action when the specified element is validated.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.RemoveCore(ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Removes the first occurrence of a specific object from the collection.
            </summary><param name="value">The object to remove from the collection.</param><remarks>
            The elements that follow the removed element move up to occupy the vacated spot. 
            The indexes of the elements that are moved are also updated.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.RemoveAllOfTypeCore(System.Type)"><summary>
            Removes all objects of the specified type from the collection.
            </summary><param name="type">A <see cref="T:System.Type" /> specifying the type of objects to remove.</param></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.RemoveAtCore(System.Int32)"><summary>
            Removes the element at the specified index of the collection.
            </summary><param name="index">The zero-based index of the object to remove.</param><remarks>
            The elements that follow the removed element move up to occupy the vacated spot. 
            The indexes of the elements that are moved are also updated.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.SetCore(System.Int32,ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Sets a value at the specified index in the collection.
            </summary><param name="index">The zero-based index of the object to set.</param><param name="value">The object to add to the collection.</param></member><member name="P:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.AutoAssignParent"><summary>
            Gets or sets whether to automatically assign the parent of child objects to be the owner of the collection.
            </summary><value><c>true</c> if the parent of child objects should be assigned; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.Count"><summary>
            Gets the number of elements contained in the <see cref="T:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection" /> instance.
            </summary><value>The number of elements contained in the <see cref="T:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection" /> instance.</value></member><member name="P:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.InnerList"><summary>
            Gets the list of items contained in the collection instance.
            </summary><value>
            An <see cref="T:System.Collections.ArrayList" /> representing the collection instance itself.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.IsFixedSize"><summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary><value><c>true</c> if the collection has a fixed size; otherwise, <c>false</c>.
            </value><remarks>
            A collection with a fixed size does not allow the addition or removal of elements, 
            but it allows the modification of existing elements.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.IsReadOnly"><summary>
            Gets a value indicating whether the collection is read-only.
            </summary><value><c>true</c> if the collection is read-only; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.IsSynchronized"><summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary><value><c>true</c> if the collection is synchronized (thread-safe); otherwise, <c>false</c>.
            </value><remarks>
            To guarantee the thread safety of the collection, all operations must be done through 
            the wrapper returned by the <see cref="P:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.SyncRoot" /> property.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.OwnerCore"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.UI.WinForms.ILogicalTreeNode" /> that is the owner of the collection.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.ILogicalTreeNode" /> that is the owner of the collection.</value></member><member name="P:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.SyncRoot"><summary>
            Gets an <c>Object</c> that can be used to synchronize access to the collection.
            </summary><value>
            An <c>Object</c> that can be used to synchronize access to the collection.
            </value></member><member name="E:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.ObjectAdding"><summary>
            Occurs before an object is added to the collection.
            </summary><eventdata>
            The event handler receives an argument of type <c>LogicalTreeNodeCollectionEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.ObjectAdded"><summary>
            Occurs after an object is added to the collection.
            </summary><eventdata>
            The event handler receives an argument of type <c>LogicalTreeNodeCollectionEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.ObjectRemoving"><summary>
            Occurs before an object is removed from the collection.
            </summary><eventdata>
            The event handler receives an argument of type <c>LogicalTreeNodeCollectionEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection.ObjectRemoved"><summary>
            Occurs after an object is removed from the collection.
            </summary><eventdata>
            The event handler receives an argument of type <c>LogicalTreeNodeCollectionEventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollectionEventArgs"><summary>
            Provides data for <see cref="T:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection" /> events.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollectionEventArgs.#ctor(System.Int32,ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Initializes a new instance of the <c>LogicalTreeNodeCollectionEventArgs</c> class.
            </summary><param name="index">The index at which the component is/was located.</param><param name="logicalTreeNode">The <see cref="T:ActiproSoftware.UI.WinForms.ILogicalTreeNode" /> that is affected by this event.</param></member><member name="P:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollectionEventArgs.Index"><summary>
            Gets the index at which the component is/was located.
            </summary><value>The index at which the component is/was located.</value></member><member name="P:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollectionEventArgs.LogicalTreeNode"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.ILogicalTreeNode" /> that is affected by this event.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.ILogicalTreeNode" /> that is affected by this event.</value></member><member name="T:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollectionEventHandler"><summary>
            Represents the method that will handle <see cref="T:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollection" /> events.
            </summary><param name="sender">Sender of the event.</param><param name="e">A <see cref="T:ActiproSoftware.UI.WinForms.LogicalTreeNodeCollectionEventArgs" /> containing event data.</param><remarks>
            When you create a <c>LogicalTreeNodeCollectionEventHandler</c> delegate, you identify the method that will handle the event. 
            To associate the event with your event handler, add an instance of the delegate to the event. 
            The event handler is called whenever the event occurs, unless you remove the delegate.
            </remarks></member><member name="T:ActiproSoftware.UI.WinForms.ObservableObjectBase"><summary>
            A simple object that implements <see cref="T:System.ComponentModel.INotifyPropertyChanged" />.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.ObservableObjectBase.NotifyPropertyChanged(System.String)"><summary>
            Notifies that a property has changed.
            </summary><param name="propertyName">The name of the property that was changed.</param></member><member name="M:ActiproSoftware.UI.WinForms.ObservableObjectBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.ObservableObjectBase.PropertyChanged" /> event.
            </summary><param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</param></member><member name="E:ActiproSoftware.UI.WinForms.ObservableObjectBase.PropertyChanged"><summary>
            Occurs when a property has been changed.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.PropertyChangedEventArgs`1"><summary>
            Provides event arguments for a property change event, indicating the old and new values.
            </summary><typeparam name="T">The return type of the property.</typeparam></member><member name="M:ActiproSoftware.UI.WinForms.PropertyChangedEventArgs`1.#ctor(`0,`0)"><summary>
            Initializes a new instance of the <c>PropertyChangedEventArgs</c> class.
            </summary><param name="oldValue">The previous value of the property being tracked as reported by an event.</param><param name="newValue">The new value of the property being tracked as reported by an event.</param></member><member name="P:ActiproSoftware.UI.WinForms.PropertyChangedEventArgs`1.NewValue"><summary>
            Gets the new value of the property being tracked as reported by an event.
            </summary><value>The new value of the property being tracked as reported by an event.</value></member><member name="P:ActiproSoftware.UI.WinForms.PropertyChangedEventArgs`1.OldValue"><summary>
            Gets the previous value of the property being tracked as reported by an event.
            </summary><value>The previous value of the property being tracked as reported by an event.</value></member><member name="T:ActiproSoftware.UI.WinForms.Services.IDesignerSafeOpenFilePromptBuilder"><summary>
            Defines a builder which can be used to define options to <see cref="T:System.Windows.Forms.OpenFileDialog" />
            that can be safely used in all designer-related contexts.
            </summary><seealso cref="T:ActiproSoftware.UI.WinForms.Services.IDesignerSafeSaveFilePromptBuilder" /><seealso cref="T:ActiproSoftware.UI.WinForms.Services.IOpenFilePromptBuilder" /><remarks>For internal use only.</remarks></member><member name="T:ActiproSoftware.UI.WinForms.Services.IDesignerSafeSaveFilePromptBuilder"><summary>
            Defines a builder which can be used to define options to <see cref="T:System.Windows.Forms.SaveFileDialog" />
            that can be safely used in all designer-related contexts.
            </summary><seealso cref="T:ActiproSoftware.UI.WinForms.Services.IDesignerSafeOpenFilePromptBuilder" /><seealso cref="T:ActiproSoftware.UI.WinForms.Services.ISaveFilePromptBuilder" /><remarks>For internal use only.</remarks></member><member name="T:ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder`2"><summary>
            Defines a builder which can be used to define options and show common file dialogs that
            can be safely used in all designer-related scenarios.
            </summary><typeparam name="TOptions">The type of <see cref="T:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions" /> defined by the builder.</typeparam><typeparam name="TResult">The type of <see cref="T:ActiproSoftware.UI.WinForms.Services.ISelectFileResult" /> defined by the builder.</typeparam><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder`2.ShowAsync"><summary>
            Displays a dialog prompting the user to select a file using the currently configured options.
            </summary><returns>A task which completes when the prompt is closed and whose result will be one of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder`2.ShowAsync(System.Action{`1})"><summary>
            Displays a dialog prompting the user to select a file using the currently configured options.
            </summary><param name="resultHandler">The action that will be called to handle the response.</param></member><member name="P:ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder`2.Options"><summary>
            The currently configured options for the file prompt.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService"><summary>
            Enables the display of prompts intended for user interaction and/or notification that
            can be safely used in all designer-related contexts.
            </summary><seealso cref="T:ActiproSoftware.UI.WinForms.Services.IUserPromptService" /><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.AddOwnerProvider(ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider)"><summary>
            Adds a <see cref="T:ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider" /> to the service.
            </summary><param name="ownerProvider">The instance of <see cref="T:ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider" /> to be added to the service.</param></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.BuildOpenFilePrompt"><summary>
            Creates a new model which can be used to prompt the user to open a file.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.BuildSaveFilePrompt"><summary>
            Creates a new model which can be used to prompt the user to save a file.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.RemoveOwnerProvider(ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider)"><summary>
            Removes a <see cref="T:ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider" /> from the service.
            </summary><param name="ownerProvider">The instance of <see cref="T:ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider" /> to be removed from the service.</param></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowError(System.String)"><summary>
            Displays the specified error message, typically in a message box.
            </summary><param name="message">The error message to display.</param></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowError(System.Exception)"><summary>
            Displays the specified exception and information about the exception, typically in a message box.
            </summary><param name="ex">The <see cref="T:System.Exception" /> to display.</param></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowError(System.Exception,System.String)"><summary>
            Displays the specified exception and information about the exception, typically in a message box.
            </summary><param name="ex">The <see cref="T:System.Exception" /> to display.</param><param name="message">A message to display that provides information about the exception.</param></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowFileOpenAsync(ActiproSoftware.UI.WinForms.Services.IOpenFileOptions)"><summary>
            Displays a dialog prompting the user to open a file.
            </summary><param name="options">The options defining the characteristics of the file prompt.</param><returns>A task which completes when the prompt is closed and whose result will be one of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowFileOpenAsync(ActiproSoftware.UI.WinForms.Services.IOpenFileOptions,System.Action{ActiproSoftware.UI.WinForms.Services.IOpenFileResult})"><summary>
            Displays a dialog prompting the user to open a file.
            </summary><param name="options">The options defining the characteristics of the file prompt.</param><param name="handler">The action that will be called to handle the response.</param></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowFileSaveAsync(ActiproSoftware.UI.WinForms.Services.ISaveFileOptions)"><summary>
            Displays a dialog prompting the user to save a file.
            </summary><param name="options">The options defining the characteristics of the file prompt.</param><returns>A task which completes when the prompt is closed and whose result will be one of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowFileSaveAsync(ActiproSoftware.UI.WinForms.Services.ISaveFileOptions,System.Action{ActiproSoftware.UI.WinForms.Services.ISaveFileResult})"><summary>
            Displays a dialog prompting the user to save a file.
            </summary><param name="options">The options defining the characteristics of the file prompt.</param><param name="handler">The action that will be called to handle the response.</param></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowMessage(System.String)"><summary>
            Displays the specified message, typically in a message box.
            </summary><param name="message">The message to display.</param></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowMessage(System.String,System.String)"><summary>
            Displays the specified message, typically in a message box.
            </summary><param name="message">The message to display.</param><param name="caption">The caption, typically for a message box.</param></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowMessageBoxAsync(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Action{System.Windows.Forms.DialogResult})"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><param name="handler">The action that will be called to handle the response.</param></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowMessageBoxAsync(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Action{System.Windows.Forms.DialogResult})"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><param name="icon">The icon to be displayed.</param><param name="handler">The action that will be called to handle the response.</param></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowMessageBoxAsync(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Action{System.Windows.Forms.DialogResult})"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><param name="icon">The icon to be displayed.</param><param name="defaultButton">The default button for the message box.</param><param name="handler">The action that will be called to handle the response.</param></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowMessageBoxAsync(System.String,System.String,System.Windows.Forms.MessageBoxButtons)"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><returns>A task which completes when the message is closed and whose result will be one of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowMessageBoxAsync(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><param name="icon">The icon to be displayed.</param><returns>A task which completes when the message is closed and whose result will be one of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowMessageBoxAsync(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><param name="icon">The icon to be displayed.</param><param name="defaultButton">The default button for the message box.</param><returns>A task which completes when the message is closed and whose result will be one of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowWarning(System.String)"><summary>
            Displays the specified message as a warning, typically in a message box.
            </summary><param name="message">The message to display.</param></member><member name="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowWarning(System.String,System.String)"><summary>
            Displays the specified message as a warning, typically in a message box.
            </summary><param name="message">The message to display.</param><param name="caption">The caption, typically for a message box.</param></member><member name="T:ActiproSoftware.UI.WinForms.Services.IOpenFileOptions"><summary>
            Defines options for interacting with <see cref="T:System.Windows.Forms.OpenFileDialog" />.
            </summary><remarks>For internal use only.</remarks></member><member name="P:ActiproSoftware.UI.WinForms.Services.IOpenFileOptions.FileNames"><summary>
            Gets or sets the file names of all selected files in the dialog box after prompting
            the user.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Services.IOpenFileOptions.Multiselect"><summary>
            Gets or sets a value indicating whether the dialog box allows multiple files
            to be selected. The default value is <c>false</c>.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Services.IOpenFilePromptBuilder"><summary>
            Defines a builder which can be used to define options to <see cref="T:System.Windows.Forms.OpenFileDialog" />.
            </summary><seealso cref="T:ActiproSoftware.UI.WinForms.Services.ISaveFilePromptBuilder" /><remarks>For internal use only.</remarks></member><member name="T:ActiproSoftware.UI.WinForms.Services.IOpenFileResult"><summary>
            Defines the result of interacting with an <see cref="T:System.Windows.Forms.OpenFileDialog" />.
            </summary><remarks>For internal use only.</remarks></member><member name="T:ActiproSoftware.UI.WinForms.Services.ISaveFileOptions"><summary>
            Defines options for interacting with <see cref="T:System.Windows.Forms.SaveFileDialog" />.
            </summary><remarks>For internal use only.</remarks></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISaveFileOptions.CreatePrompt"><summary>
            Gets or sets a value indicating whether the dialog box prompts the user for permission
            to create a file if the user specifies a file that does not exist. The default value is <c>false</c>.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISaveFileOptions.OverwritePrompt"><summary>
            Gets or sets a value indicating whether the Save As dialog box displays a warning
            if the user specifies a file name that already exists. The default value is <c>true</c>.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Services.ISaveFilePromptBuilder"><summary>
            Defines a builder which can be used to define options to <see cref="T:System.Windows.Forms.SaveFileDialog" />.
            </summary><seealso cref="T:ActiproSoftware.UI.WinForms.Services.IOpenFilePromptBuilder" /><remarks>For internal use only.</remarks></member><member name="T:ActiproSoftware.UI.WinForms.Services.ISaveFileResult"><summary>
            Defines the result of interacting with a <see cref="T:System.Windows.Forms.SaveFileDialog" />.
            </summary><remarks>For internal use only.</remarks></member><member name="T:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions"><summary>
            Defines options for interacting with <see cref="T:System.Windows.Forms.FileDialog" />.
            </summary><remarks>For internal use only.</remarks></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.AddExtension"><summary>
            Gets or sets a value indicating whether the dialog box automatically adds an
            extension to a file name if the user omits the extension. The default value is <c>true</c>.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.CheckFileExists"><summary>
            Gets or sets a value indicating whether the dialog box displays a warning if
            the user specifies a file name that does not exist. The default value is <c>false</c>.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.CheckPathExists"><summary>
            Gets or sets a value indicating whether the dialog box displays a warning if
            the user specifies a path that does not exist. The default value is <c>true</c>.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.DefaultExt"><summary>
            Gets or sets the default file name extension.
            </summary><value>The default file name extension without the period.</value></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.FileName"><summary>
            Gets or sets a string containing the file name selected in the file dialog box.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.Filter"><summary>
            Gets or sets the current file name filter string, which determines the choices
            that appear in the "Save as file type" or "Files of type" box in the dialog box.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.FilterIndex"><summary>
            Gets or sets the 1-based index of the filter currently selected in the file dialog box. The default value is <c>1</c>.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.InitialDirectory"><summary>
            Gets or sets the initial directory displayed by the file dialog box.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.RestoreDirectory"><summary>
            Gets or sets a value indicating whether the dialog box restores the directory
            to the previously selected directory before closing. The default value is <c>false</c>.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.Title"><summary>
            Gets or sets the file dialog box title.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Services.ISelectFilePromptBuilder`2"><summary>
            Defines a builder which can be used to define options and show common file dialogs.
            </summary><typeparam name="TOptions">The type of <see cref="T:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions" /> defined by the builder.</typeparam><typeparam name="TResult">The type of <see cref="T:ActiproSoftware.UI.WinForms.Services.ISelectFileResult" /> defined by the builder.</typeparam><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.ISelectFilePromptBuilder`2.Show"><summary>
            Displays a dialog prompting the user to select a file using the currently configured options.
            </summary><returns>The result of the user interaction.</returns><seealso cref="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder`2.ShowAsync" /></member><member name="T:ActiproSoftware.UI.WinForms.Services.ISelectFileResult"><summary>
            Defines the result of interacting with a <see cref="T:System.Windows.Forms.FileDialog" />.
            </summary><remarks>For internal use only.</remarks></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISelectFileResult.DialogResult"><summary>
            One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Services.ISelectFileResult`1"><summary>
            Defines the result of interacting with a <see cref="T:System.Windows.Forms.FileDialog" />.
            </summary><typeparam name="TOptions">The type of <see cref="T:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions" />.</typeparam><remarks>For internal use only.</remarks></member><member name="P:ActiproSoftware.UI.WinForms.Services.ISelectFileResult`1.Options"><summary>
            The options representing the state of the dialog after the user's interaction including any selected file(s).
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider"><summary>
            Provides an <see cref="T:System.Windows.Forms.IWin32Window" /> that indicates the window to own any child dialog boxes used by <see cref="T:ActiproSoftware.UI.WinForms.Services.IUserPromptService" />.
            </summary><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider.GetDialogOwnerWindow"><summary>
            Gets an <see cref="T:System.Windows.Forms.IWin32Window" /> that indicates the window to own any child dialog boxes.
            </summary><returns>An <see cref="T:System.Windows.Forms.IWin32Window" />, or <c>null</c> if an owner is not available.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider.Priority"><summary>
            Gets the priority of this provider compared to other providers, where the smallest value is given the highest priority.
            </summary><remarks>Priority values may be negative. (Default = <c>0</c>)</remarks><value>The priority of this provider.</value></member><member name="T:ActiproSoftware.UI.WinForms.Services.IUserPromptService"><summary>
            Enables the display of prompts intended for user interaction and/or notification.
            </summary><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.IUserPromptService.BuildOpenFilePrompt"><inheritdoc cref="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.BuildOpenFilePrompt" /></member><member name="M:ActiproSoftware.UI.WinForms.Services.IUserPromptService.BuildSaveFilePrompt"><inheritdoc cref="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.BuildSaveFilePrompt" /></member><member name="M:ActiproSoftware.UI.WinForms.Services.IUserPromptService.ShowDialog(System.Windows.Forms.Form)"><summary>
            Displays the specified form in a dialog box.
            </summary><param name="form">The form to display.</param><seealso cref="M:ActiproSoftware.UI.WinForms.Services.IUserPromptService.ShowDialogAsync(System.Windows.Forms.Form)" /><returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.IUserPromptService.ShowDialogAsync(System.Windows.Forms.Form)"><summary>
            Displays the specified form in a modal dialog box.
            </summary><param name="form">The form to display.</param><returns>A task which completes when the modal dialog is closed and whose result will be one of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.IUserPromptService.ShowFileOpen(ActiproSoftware.UI.WinForms.Services.IOpenFileOptions)"><summary>
            Displays a dialog prompting the user to open a file.
            </summary><param name="options">The options defining the characteristics of the file prompt.</param><returns>The result of the user interaction.</returns><seealso cref="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowFileOpenAsync(ActiproSoftware.UI.WinForms.Services.IOpenFileOptions)" /></member><member name="M:ActiproSoftware.UI.WinForms.Services.IUserPromptService.ShowFileSave(ActiproSoftware.UI.WinForms.Services.ISaveFileOptions)"><summary>
            Displays a dialog prompting the user to save a file.
            </summary><param name="options">The options defining the characteristics of the file prompt.</param><returns>The result of the user interaction.</returns><seealso cref="M:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService.ShowFileSaveAsync(ActiproSoftware.UI.WinForms.Services.ISaveFileOptions)" /></member><member name="M:ActiproSoftware.UI.WinForms.Services.IUserPromptService.ShowMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons)"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.IUserPromptService.ShowMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><param name="icon">The icon to be displayed.</param><returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.IUserPromptService.ShowMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><param name="icon">The icon to be displayed.</param><param name="defaultButton">The default button for the message box.</param><returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.IUserPromptService.ShowMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons)"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="owner">The owner of the message box.</param><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.IUserPromptService.ShowMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="owner">The owner of the message box.</param><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><param name="icon">The icon to be displayed.</param><returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.IUserPromptService.ShowMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="owner">The owner of the message box.</param><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><param name="icon">The icon to be displayed.</param><param name="defaultButton">The default button for the message box.</param><returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns></member><member name="T:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions"><summary>
            Defines extension methods related to <see cref="T:ActiproSoftware.UI.WinForms.Services.IUserPromptService" /> and <see cref="T:ActiproSoftware.UI.WinForms.Services.IDesignerSafeUserPromptService" />.
            </summary><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithCheckFileExists``2(ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder{``0,``1},System.Boolean)"><summary>
            Assigns a value to <see cref="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.CheckFileExists" />.
            </summary><param name="builder">The file prompt builder.</param><param name="value">The value to assign.</param><returns>Returns itself for use with method-chaining.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithCheckFileExists``2(ActiproSoftware.UI.WinForms.Services.ISelectFilePromptBuilder{``0,``1},System.Boolean)"><inheritdoc cref="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithCheckFileExists``2(ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder{``0,``1},System.Boolean)" /></member><member name="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithFileName``2(ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder{``0,``1},System.String)"><summary>
            Assigns a value to <see cref="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.FileName" />.
            </summary><param name="builder">The file prompt builder.</param><param name="value">The value to assign.</param><returns>Returns itself for use with method-chaining.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithFileName``2(ActiproSoftware.UI.WinForms.Services.ISelectFilePromptBuilder{``0,``1},System.String)"><inheritdoc cref="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithFileName``2(ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder{``0,``1},System.String)" /></member><member name="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithFilter``2(ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder{``0,``1},System.String,System.String,System.Boolean)"><summary>
            Appends a new entry to <see cref="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.Filter" />.
            </summary><param name="builder">The file prompt builder.</param><param name="title">The title of the filter.</param><param name="pattern">The semi-colon delimited list of file wildcard patterns to be matched by the filter.</param><param name="select">When <c>true</c>, the <see cref="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.FilterIndex" /> will be updated to pre-select the new filter.</param><returns>Returns itself for use with method-chaining.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithFilter``2(ActiproSoftware.UI.WinForms.Services.ISelectFilePromptBuilder{``0,``1},System.String,System.String,System.Boolean)"><inheritdoc cref="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithFilter``2(ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder{``0,``1},System.String,System.String,System.Boolean)" /></member><member name="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithFilterForAllFiles``2(ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder{``0,``1},System.String,System.Boolean)"><summary>
            Appends a new entry to <see cref="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.Filter" /> for use with all files (e.g. <c>*.*</c>).
            </summary><param name="builder">The file prompt builder.</param><param name="title">The title of the filter. When <c>null</c>, a default title will be used.</param><param name="select">When <c>true</c>, the <see cref="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.FilterIndex" /> will be updated to pre-select the new filter.</param><returns>Returns itself for use with method-chaining.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithFilterForAllFiles``2(ActiproSoftware.UI.WinForms.Services.ISelectFilePromptBuilder{``0,``1},System.String,System.Boolean)"><inheritdoc cref="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithFilterForAllFiles``2(ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder{``0,``1},System.String,System.Boolean)" /></member><member name="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithFilterForImageFiles``2(ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder{``0,``1},System.String,System.Boolean,System.Boolean,System.Boolean)"><summary>
            Appends a new entry to <see cref="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.Filter" /> for use with common image files.
            </summary><param name="builder">The file prompt builder.</param><param name="title">The title of the filter. When <c>null</c>, a default title will be used.</param><param name="includeBitmapFiles">When <c>true</c>, a filter will be included for bitmap file extensions.</param><param name="includeMetafiles">When <c>true</c></param>, a filter will be included for metafile extensions.
            <param name="select">When <c>true</c>, the <see cref="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.FilterIndex" /> will be updated to pre-select the new filter.</param><returns>Returns itself for use with method-chaining.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithFilterForImageFiles``2(ActiproSoftware.UI.WinForms.Services.ISelectFilePromptBuilder{``0,``1},System.String,System.Boolean,System.Boolean,System.Boolean)"><inheritdoc cref="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithFilterForImageFiles``2(ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder{``0,``1},System.String,System.Boolean,System.Boolean,System.Boolean)" /></member><member name="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithTitle``2(ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder{``0,``1},System.String)"><summary>
            Assigns a value to <see cref="P:ActiproSoftware.UI.WinForms.Services.ISelectFileOptions.Title" />.
            </summary><param name="builder">The file prompt builder.</param><param name="value">The value to assign.</param><returns>Returns itself for use with method-chaining.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithTitle``2(ActiproSoftware.UI.WinForms.Services.ISelectFilePromptBuilder{``0,``1},System.String)"><inheritdoc cref="M:ActiproSoftware.UI.WinForms.Services.UserPromptServiceExtensions.WithTitle``2(ActiproSoftware.UI.WinForms.Services.IDesignerSafeSelectFilePromptBuilder{``0,``1},System.String)" /></member><member name="T:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptOwnerProvider"><summary>
            Defines a base implementation of <see cref="T:ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider" />.
            </summary><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptOwnerProvider.GetDialogOwnerWindow"><inheritdoc cref="M:ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider.GetDialogOwnerWindow" /></member><member name="P:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptOwnerProvider.Priority"><inheritdoc cref="P:ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider.Priority" /></member><member name="F:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptOwnerProvider.DefaultPriority"><summary>
            The default priority assigned to <see cref="P:ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider.Priority" />.
            </summary><remarks>For internal use only.</remarks></member><member name="F:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptOwnerProvider.HighestPriority"><summary>
            The value for <see cref="P:ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider.Priority" /> which indicates the highest priority.
            </summary><remarks>For internal use only.</remarks></member><member name="F:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptOwnerProvider.LowestPriority"><summary>
            The value for <see cref="P:ActiproSoftware.UI.WinForms.Services.IUserPromptOwnerProvider.Priority" /> which indicates the lowest priority.
            </summary><remarks>For internal use only.</remarks></member><member name="T:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService"><summary>
            Defines an implementation of <see cref="T:ActiproSoftware.UI.WinForms.Services.IUserPromptService" />.
            </summary><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.#ctor"><summary>
            Initializes a new instance of the <c>UserPromptService</c> class.
            </summary><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.CreateOpenFileResult(System.Windows.Forms.DialogResult,ActiproSoftware.UI.WinForms.Services.IOpenFileOptions)"><summary>
            Creates a new instance of an implementation for <see cref="T:ActiproSoftware.UI.WinForms.Services.IOpenFileResult" />.
            </summary><param name="dialogResult">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</param><param name="options">The options representing the state of the dialog after the user's interaction including any selected file(s).</param><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.CreateSaveFileResult(System.Windows.Forms.DialogResult,ActiproSoftware.UI.WinForms.Services.ISaveFileOptions)"><summary>
            Creates a new instance of an implementation for <see cref="T:ActiproSoftware.UI.WinForms.Services.ISaveFileResult" />.
            </summary><param name="dialogResult">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</param><param name="options">The options representing the state of the dialog after the user's interaction including any selected file(s).</param><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.GetDialogOwnerWindow"><summary>
            Gets the owner window, if any, that should be used for dialogs.
            </summary><returns>The owner window if available; otherwise <c>null</c>.</returns><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowDialog(System.Windows.Forms.Form)"><summary>
            Displays the specified form in a dialog box.
            </summary><param name="form">The form to display.</param><returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowDialogAsync(System.Windows.Forms.Form)"><summary>
            Displays the specified form in a modal dialog box.
            </summary><param name="form">The form to display.</param><returns>A task which completes when the modal dialog is closed and whose result will be one of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowError(System.String,System.String)"><summary>
            Displays the specified error message, typically in a message box.
            </summary><param name="message">The error message to display.</param><param name="caption">Optionally defines the caption of the message.</param><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowError(System.Exception,System.String)"><summary>
            Displays the specified exception and information about the exception, typically in a message box.
            </summary><param name="ex">The <see cref="T:System.Exception" /> to display.</param><param name="message">Optionally defines a message to display that provides information about the exception.</param><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowFileOpen(ActiproSoftware.UI.WinForms.Services.IOpenFileOptions)"><summary>
            Displays a dialog prompting the user to open a file.
            </summary><param name="options">The model defining the characteristics and behavior of the file prompt.</param><returns>The result of the user interaction.</returns><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowFileOpenAsync(ActiproSoftware.UI.WinForms.Services.IOpenFileOptions)"><summary>
            Displays a dialog prompting the user to open a file.
            </summary><param name="options">The options defining the characteristics of the file prompt.</param><returns>A task which completes when the prompt is closed and whose result will be one of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowFileOpenAsync(ActiproSoftware.UI.WinForms.Services.IOpenFileOptions,System.Action{ActiproSoftware.UI.WinForms.Services.IOpenFileResult})"><summary>
            Displays a dialog prompting the user to open a file.
            </summary><param name="options">The options defining the characteristics of the file prompt.</param><param name="handler">The action that will be called to handle the response.</param><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowFileSave(ActiproSoftware.UI.WinForms.Services.ISaveFileOptions)"><summary>
            Displays a dialog prompting the user to save a file.
            </summary><param name="options">The model defining the characteristics and behavior of the file prompt.</param><returns>The result of the user interaction.</returns><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowFileSaveAsync(ActiproSoftware.UI.WinForms.Services.ISaveFileOptions)"><summary>
            Displays a dialog prompting the user to save a file.
            </summary><param name="options">The options defining the characteristics of the file prompt.</param><returns>A task which completes when the prompt is closed and whose result will be one of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowFileSaveAsync(ActiproSoftware.UI.WinForms.Services.ISaveFileOptions,System.Action{ActiproSoftware.UI.WinForms.Services.ISaveFileResult})"><summary>
            Displays a dialog prompting the user to save a file.
            </summary><param name="options">The options defining the characteristics of the file prompt.</param><param name="handler">The action that will be called to handle the response.</param><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowMessage(System.String,System.String)"><summary>
            Displays the specified message, typically in a message box.
            </summary><param name="message">The message to display.</param><param name="caption">Optionally defines the caption, typically for a message box.</param><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)"><summary>
            Displays a message box with specified text, caption, buttons, and icon.
            </summary><param name="owner">The owner of the message box.</param><param name="message">The text to display in the message box.</param><param name="caption">The text to display in the title bar of the message box.</param><param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param><param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param><param name="defaultButton">The default button for the message box.</param><returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowMessageBoxAsync(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><param name="icon">The icon to be displayed.</param><param name="defaultButton">The default button for the message box.</param><returns>A task which completes when the message is closed and whose result will be one of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowMessageBoxAsync(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Action{System.Windows.Forms.DialogResult})"><summary>
            Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary><param name="message">The message to display.</param><param name="caption">The caption for the dialog box.</param><param name="buttons">The buttons to be displayed.</param><param name="icon">The icon to be displayed.</param><param name="defaultButton">The default button for the message box.</param><param name="handler">The action that will be called to handle the response.</param><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowNonInteractiveMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxIcon)"><summary>
            Displays a message box with specified text, caption, and icon where the response of the user is not required.
            </summary><param name="message">The text to display in the message box.</param><param name="caption">The text to display in the title bar of the message box.</param><param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param><returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code of the user's interaction.</returns><remarks>For internal use only.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.ShowWarning(System.String,System.String)"><summary>
            Displays the specified warning message, typically in a message box.
            </summary><param name="message">The message to display.</param><param name="caption">Optionally defines the caption, typically for a message box.</param><remarks>For internal use only.</remarks></member><member name="P:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.Default"><summary>
            A default instance of the <see cref="T:ActiproSoftware.UI.WinForms.Services.IUserPromptService" />.
            </summary><remarks>For internal use only.</remarks></member><member name="P:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.DefaultMessageCaption"><summary>
            The default caption to use for general messages.
            </summary><remarks>For internal use only.</remarks></member><member name="P:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.DefaultWarningCaption"><summary>
            The default caption to use for warning messages.
            </summary><remarks>For internal use only.</remarks></member><member name="P:ActiproSoftware.UI.WinForms.Services.Implementation.UserPromptService.DefaultErrorCaption"><summary>
            The default caption to use for error messages.
            </summary><remarks>For internal use only.</remarks></member><member name="T:ActiproSoftware.UI.WinForms.Input.DelegateCommand`1"><summary>
            Provides an <see cref="T:ActiproSoftware.UI.WinForms.Input.ICommand" /> implementation based on delegates.
            </summary><typeparam name="T">The parameter type.</typeparam></member><member name="M:ActiproSoftware.UI.WinForms.Input.DelegateCommand`1.#ctor(System.Action{`0})"><summary>
            Initializes an instance of the <c>DelegateCommand</c> class.
            </summary><param name="executeAction">The execute action.</param></member><member name="M:ActiproSoftware.UI.WinForms.Input.DelegateCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})"><summary>
            Initializes an instance of the <c>DelegateCommand</c> class.
            </summary><param name="executeAction">The execute action.</param><param name="canExecuteFunc">The can-execute function.</param></member><member name="M:ActiproSoftware.UI.WinForms.Input.DelegateCommand`1.CanExecute(`0)"><summary>
            Returns whether the command can execute.
            </summary><param name="parameter">The parameter to examine.</param><returns><c>true</c> if the command can execute; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Input.DelegateCommand`1.Execute(`0)"><summary>
            Executes the command.
            </summary><param name="parameter">The parameter to examine.</param></member><member name="M:ActiproSoftware.UI.WinForms.Input.DelegateCommand`1.RaiseCanExecuteChanged"><summary>
            Raises the <c>CanExecuteChanged</c> event.
            </summary></member><member name="E:ActiproSoftware.UI.WinForms.Input.DelegateCommand`1.CanExecuteChanged"><summary>
            Occurs after the can-execute state has changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.Input.ICommand"><summary>
            Defines a command.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Input.ICommand.CanExecute(System.Object)"><summary>
            Returns whether the command can execute.
            </summary><param name="parameter">The parameter to examine.</param><returns><c>true</c> if the command can execute; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Input.ICommand.Execute(System.Object)"><summary>
            Executes the command.
            </summary><param name="parameter">The parameter to examine.</param></member><member name="E:ActiproSoftware.UI.WinForms.Input.ICommand.CanExecuteChanged"><summary>
            Occurs after the can-execute state has changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.Input.ICommand`1"><summary>
            Defines a command with a strongly-typed parameter.
            </summary><typeparam name="T">The parameter type.</typeparam></member><member name="M:ActiproSoftware.UI.WinForms.Input.ICommand`1.CanExecute(`0)"><inheritdoc cref="M:ActiproSoftware.UI.WinForms.Input.ICommand.CanExecute(System.Object)" /></member><member name="M:ActiproSoftware.UI.WinForms.Input.ICommand`1.Execute(`0)"><inheritdoc cref="M:ActiproSoftware.UI.WinForms.Input.ICommand.Execute(System.Object)" /></member><member name="T:ActiproSoftware.UI.WinForms.Input.InputAdapter"><summary>
            Watches a <see cref="T:ActiproSoftware.UI.WinForms.Controls.IInputElement" /> for various input-related events and publishes them in a platform agnostic way.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Input.InputAdapter.#ctor(ActiproSoftware.UI.WinForms.Controls.IInputElement)"><summary>
            Initializes a new instance of the <see cref="T:ActiproSoftware.UI.WinForms.Input.InputAdapter" /> class.
            </summary><param name="element">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.IInputElement" /> to watch for input-related events.</param></member><member name="M:ActiproSoftware.UI.WinForms.Input.InputAdapter.CapturePointer(ActiproSoftware.UI.WinForms.Input.InputPointerEventArgs)"><summary>
            Captures the pointer that sourced the specified event arguments.
            </summary><param name="e">The event arguments to examine.</param><returns><c>true</c> if the pointer was captured; otherwise, <c>false</c>.
            </returns><remarks>
            This method should only be called in a <see cref="E:ActiproSoftware.UI.WinForms.Input.InputAdapter.PointerPressed" /> event handlers.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Input.InputAdapter.CapturePointer(ActiproSoftware.UI.WinForms.Input.InputPointerEventArgs,ActiproSoftware.UI.WinForms.Controls.IInputElement)"><summary>
            Captures the pointer that sourced the specified event arguments on a designated target element.
            </summary><param name="e">The event arguments to examine.</param><param name="targetElement">The target element.</param><returns><c>true</c> if the pointer was captured; otherwise, <c>false</c>.
            </returns><remarks>
            This method should only be called in a <see cref="E:ActiproSoftware.UI.WinForms.Input.InputAdapter.PointerPressed" /> event handlers.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Input.InputAdapter.IsAttachedTo(ActiproSoftware.UI.WinForms.Input.InputAdapterEventKinds)"><summary>
            Returns whether the specified event kind is currently attached.
            </summary><param name="kind">The kind of event.</param><returns><c>true</c> if the specified event kind is currently attached; otherwise, <c>false</c>.
            </returns><seealso cref="P:ActiproSoftware.UI.WinForms.Input.InputAdapter.AttachedEventKinds" /></member><member name="M:ActiproSoftware.UI.WinForms.Input.InputAdapter.ReleasePointerCaptures"><summary>
            Releases all pointer captures.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputAdapter.AttachedEventKinds"><summary>
            Gets or sets the kinds of events that should be attached to and notified by this class.
            </summary><value>A flags-based <see cref="T:ActiproSoftware.UI.WinForms.Input.InputAdapterEventKinds" /> that indicates the events to attach.</value></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputAdapter.IsAttached"><summary>
            Gets whether the adapter is currently attached to any events.
            </summary><value><c>true</c> if the adapter is currently attached to any events; otherwise, <c>false</c>.
            </value><seealso cref="P:ActiproSoftware.UI.WinForms.Input.InputAdapter.AttachedEventKinds" /></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputAdapter.TargetElement"><summary>
            Gets the target <see cref="T:ActiproSoftware.UI.WinForms.Controls.IInputElement" /> that is being watched.
            </summary><value>The target <see cref="T:ActiproSoftware.UI.WinForms.Controls.IInputElement" /> that is being watched.</value></member><member name="E:ActiproSoftware.UI.WinForms.Input.InputAdapter.PointerCaptureLost"><summary>
            Occurs when the pointer capture is lost.
            </summary><eventdata>
            The event handler receives an argument of type <c>InputPointerEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Input.InputAdapter.PointerEntered"><summary>
            Occurs when the pointer enters the element.
            </summary><eventdata>
            The event handler receives an argument of type <c>InputPointerEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Input.InputAdapter.PointerExited"><summary>
            Occurs when the pointer exits the element.
            </summary><eventdata>
            The event handler receives an argument of type <c>InputPointerEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Input.InputAdapter.PointerMoved"><summary>
            Occurs when the pointer moves over the element.
            </summary><eventdata>
            The event handler receives an argument of type <c>InputPointerEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Input.InputAdapter.PointerPressed"><summary>
            Occurs when a pointer button is pressed over the element.
            </summary><eventdata>
            The event handler receives an argument of type <c>InputPointerButtonEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Input.InputAdapter.PointerReleased"><summary>
            Occurs when a pointer button is released over the element.
            </summary><eventdata>
            The event handler receives an argument of type <c>InputPointerButtonEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Input.InputAdapter.PointerWheelChanged"><summary>
            Occurs when a pointer wheel is changed over the element.
            </summary><eventdata>
            The event handler receives an argument of type <c>InputPointerWheelEventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.Input.InputAdapterEventKinds"><summary>
            Specifies the kinds of events that an <see cref="T:ActiproSoftware.UI.WinForms.Input.InputAdapter" /> can track.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputAdapterEventKinds.None"><summary>
            No events.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputAdapterEventKinds.PointerCaptureLost"><summary>
            Pointer capture lost.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputAdapterEventKinds.PointerEntered"><summary>
            Pointer entered.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputAdapterEventKinds.PointerExited"><summary>
            Pointer exited.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputAdapterEventKinds.PointerMoved"><summary>
            Pointer moved.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputAdapterEventKinds.PointerPressed"><summary>
            Pointer pressed.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputAdapterEventKinds.PointerReleased"><summary>
            Pointer released.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputAdapterEventKinds.PointerWheelChanged"><summary>
            Pointer wheel changed.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputAdapterEventKinds.All"><summary>
            All events.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Input.InputDeviceKind"><summary>
            Specifies the kind of input device.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputDeviceKind.Mouse"><summary>
            A mouse.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputDeviceKind.Stylus"><summary>
            A stylus, or pen device.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputDeviceKind.Touch"><summary>
            A touch.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Input.InputPointerButtonEventArgs"><summary>
            Provides event data for pointer button input events.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Input.InputPointerButtonEventArgs.#ctor(ActiproSoftware.UI.WinForms.Controls.IInputElement,System.Windows.Forms.MouseEventArgs,ActiproSoftware.UI.WinForms.Input.InputPointerButtonKind)"><summary>
            Initializes a new instance of the <see cref="T:ActiproSoftware.UI.WinForms.Input.InputPointerButtonEventArgs" /> class.
            </summary><param name="originalSource">The original source element.</param><param name="e">The wrapped event arguments.</param><param name="buttonKind">A <see cref="T:ActiproSoftware.UI.WinForms.Input.InputPointerButtonKind" /> indicating the button kind.</param></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerButtonEventArgs.ButtonKind"><summary>
            Gets a <see cref="T:ActiproSoftware.UI.WinForms.Input.InputPointerButtonKind" /> indicating the button kind.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Input.InputPointerButtonKind" /> indicating the button kind.</value></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerButtonEventArgs.IsPrimaryButton"><summary>
            Gets whether the pressed button is a primary button (left mouse button, primary stylus button, etc.).
            </summary><value><c>true</c> if pressed button is a primary button; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerButtonEventArgs.WrappedEventArgs"><summary>
            Gets the wrapped event arguments.
            </summary><value>The wrapped event arguments.</value></member><member name="T:ActiproSoftware.UI.WinForms.Input.InputPointerButtonKind"><summary>
            Specifies the kind of input pointer button.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputPointerButtonKind.Primary"><summary>
            The primary button, which is generally a mouse's left button or a touch.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputPointerButtonKind.Secondary"><summary>
            The secondary button, which is generally a mouse's right button.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputPointerButtonKind.Middle"><summary>
            The middle button, which is generally a mouse's wheel button.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputPointerButtonKind.Extended1"><summary>
            The first extended button, which is sometimes available on premium mice.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputPointerButtonKind.Extended2"><summary>
            The second extended button, which is sometimes available on premium mice.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.InputPointerButtonKind.Other"><summary>
            Another button.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Input.InputPointerEventArgs"><summary>
            Provides event data for pointer-based input events.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Input.InputPointerEventArgs.#ctor(ActiproSoftware.UI.WinForms.Controls.IInputElement,System.Windows.Forms.MouseEventArgs)"><summary>
            Initializes a new instance of the <see cref="T:ActiproSoftware.UI.WinForms.Input.InputPointerEventArgs" /> class.
            </summary><param name="originalSource">The original source element.</param><param name="e">The wrapped event arguments.</param></member><member name="M:ActiproSoftware.UI.WinForms.Input.InputPointerEventArgs.GetPosition(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Returns the current pointer position relative to the specified element.
            </summary><param name="relativeTo">The element to examine.</param><returns>The current pointer position relative to the specified element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Input.InputPointerEventArgs.IsPositionOver(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Returns whether the current pointer position is over the specified element.
            </summary><param name="element">The element to examine.</param><returns><c>true</c> if the current pointer position is over the specified element; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Input.InputPointerEventArgs.ToString"><summary>
            Returns a <see cref="T:System.String" /> representation of this instance.
            </summary><returns>
            A <see cref="T:System.String" /> representation of this instance.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerEventArgs.DeviceKind"><summary>
            Gets an <see cref="T:ActiproSoftware.UI.WinForms.Input.InputDeviceKind" /> that indicates the device kind.
            </summary><value>An <see cref="T:ActiproSoftware.UI.WinForms.Input.InputDeviceKind" /> that indicates the device kind.</value></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerEventArgs.Handled"><summary>
            Gets or sets whether the event has been handled.
            </summary><value><c>true</c> if the event has been handled; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerEventArgs.ModifierKeys"><summary>
            Gets the modifier keys that are currently pressed.
            </summary><value>The modifier keys that are currently pressed.</value></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerEventArgs.OriginalSource"><summary>
            Gets the original source of the event.
            </summary><value>The original source of the event.</value></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerEventArgs.WrappedEventArgs"><summary>
            Gets the wrapped event arguments.
            </summary><value>The wrapped event arguments.</value></member><member name="T:ActiproSoftware.UI.WinForms.Input.InputPointerWheelEventArgs"><summary>
            Provides event data for pointer button input events.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Input.InputPointerWheelEventArgs.#ctor(ActiproSoftware.UI.WinForms.Controls.IInputElement,System.Windows.Forms.MouseEventArgs)"><summary>
            Initializes a new instance of the <see cref="T:ActiproSoftware.UI.WinForms.Input.InputPointerWheelEventArgs" /> class.
            </summary><param name="originalSource">The original source element.</param><param name="e">The wrapped event arguments.</param></member><member name="M:ActiproSoftware.UI.WinForms.Input.InputPointerWheelEventArgs.ToString"><summary>
            Returns a <see cref="T:System.String" /> representation of this instance.
            </summary><returns>
            A <see cref="T:System.String" /> representation of this instance.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerWheelEventArgs.Delta"><summary>
            Gets the pointer wheel delta.
            </summary><value>The pointer wheel delta.</value></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerWheelEventArgs.IsHorizontal"><summary>
            Gets whether the event is for a horizontal mouse wheel.
            </summary><value><c>true</c> if the event is for a horizontal mouse wheel; otherwise, <c>false</c> for a vertical mouse wheel.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerWheelEventArgs.ScrollCharacters"><summary>
            Gets the number of character to scroll when the horizontal pointer wheel turns.
            </summary><value>The number of character to scroll when the horizontal pointer wheel turns.</value></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerWheelEventArgs.ScrollLines"><summary>
            Gets the number of lines to scroll when the vertical pointer wheel turns.
            </summary><value>The number of lines to scroll when the vertical pointer wheel turns.</value></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerWheelEventArgs.SingleUnitDelta"><summary>
            Gets the pointer wheel delta for a single unit.
            </summary><value>The pointer wheel delta for a single unit.</value></member><member name="P:ActiproSoftware.UI.WinForms.Input.InputPointerWheelEventArgs.WrappedEventArgs"><summary>
            Gets the wrapped event arguments.
            </summary><value>The wrapped event arguments.</value></member><member name="T:ActiproSoftware.UI.WinForms.Input.KeyGesture"><summary>
            Defines a keyboard shortcut combination.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Input.KeyGesture.#ctor(System.Windows.Forms.Keys,ActiproSoftware.UI.WinForms.Input.ModifierKeys)"><summary>
            Initializes a new instance of the <c>KeyGesture</c> class. 
            </summary><param name="key">The key associated with this <see cref="T:ActiproSoftware.UI.WinForms.Input.KeyGesture" />.</param><param name="modifiers">The modifier keys associated with this <see cref="T:ActiproSoftware.UI.WinForms.Input.KeyGesture" />.</param></member><member name="M:ActiproSoftware.UI.WinForms.Input.KeyGesture.Matches(System.Windows.Forms.Keys)"><summary>
            Returns whether the specified <see cref="T:System.Windows.Forms.Keys" /> from a a key event match this gesture.
            </summary><param name="keys">The <see cref="T:System.Windows.Forms.Keys" /> to examine.</param><returns><c>true</c> if the specified <see cref="T:System.Windows.Forms.Keys" /> from a a key event match this gesture; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Input.KeyGesture.ToString"><summary>
            Converts the object to a <c>String</c>.
            </summary><returns>
            A string whose value represents this object.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Input.KeyGesture.Key"><summary>
            Gets the key associated with this <see cref="T:ActiproSoftware.UI.WinForms.Input.KeyGesture" />.
            </summary><value>The key associated with this <see cref="T:ActiproSoftware.UI.WinForms.Input.KeyGesture" />.</value></member><member name="P:ActiproSoftware.UI.WinForms.Input.KeyGesture.Modifiers"><summary>
            Gets the modifier keys associated with this <see cref="T:ActiproSoftware.UI.WinForms.Input.KeyGesture" />.
            </summary><value>The modifier keys associated with this <see cref="T:ActiproSoftware.UI.WinForms.Input.KeyGesture" />.</value></member><member name="T:ActiproSoftware.UI.WinForms.Input.ModifierKeys"><summary>
            Specifies one or more modifier keys.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.ModifierKeys.None"><summary>
            No key pressed.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.ModifierKeys.Control"><summary>
            The CTRL modifier key.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.ModifierKeys.Shift"><summary>
            The SHIFT modifier key.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.ModifierKeys.Alt"><summary>
            The ALT modifier key.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Input.MouseAction"><summary>
            Specifies a mouse action.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.MouseAction.None"><summary>
            No action.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.MouseAction.LeftClick"><summary>
            A left click.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.MouseAction.RightClick"><summary>
            A right click.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.MouseAction.MiddleClick"><summary>
            A middle click.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.MouseAction.WheelClick"><summary>
            A wheel click.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.MouseAction.LeftDoubleClick"><summary>
            A left double-click.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.MouseAction.RightDoubleClick"><summary>
            A right double-click.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.MouseAction.MiddleDoubleClick"><summary>
            A middle double-click.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Input.MouseAction.WheelDoubleClick"><summary>
            A wheel double-click.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill"><summary>
            Provides a base class for an object that can be used as a background fill.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill.#ctor"><summary>
            Initializes a new instance of the <c>BackgroundFill</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill.#ctor(ActiproSoftware.UI.WinForms.Drawing.BackgroundFill)"><summary>
            Initializes a new instance of the <c>BackgroundFill</c> class.
            </summary><param name="copyFrom">An instance of <c>BackgroundFill</c> which will be copied to initialize the new instance.</param><remarks>
            This constructor used in support of <see cref="M:System.ICloneable.Clone" /> for base classes to initialize their fields.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill" /> object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill.GetBrush(System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill.OnPropertyChanged(System.EventArgs)"><summary>
            Raises the <c>PropertyChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="E:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill.PropertyChanged"><summary>
            Occurs after a property is changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFillRotationType"><summary>
            Specifies how to rotate a background fill when drawing with a different side.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.BackgroundFillRotationType.None"><summary>
            Draw as specified.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.BackgroundFillRotationType.Orientation"><summary>
            Draw as specified if the side is top or bottom.  Rotate 90 degrees if the side is left or right.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.BackgroundFillRotationType.Side"><summary>
            Draw as specified if the side is top.  Rotate 90 degrees for each side around from top.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.Border"><summary>
            Provides a base class for an object that can be used as a border.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Border.#ctor"><summary>
            Initializes a new instance of the <c>Border</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Border.#ctor(ActiproSoftware.UI.WinForms.Drawing.Border)"><summary>
            Initializes a new instance of the <c>Border</c> class.
            </summary><param name="copyFrom">An instance of <c>Border</c> which will be copied to initialize the new instance.</param><remarks>
            This constructor used in support of <see cref="M:System.ICloneable.Clone" /> for base classes to initialize their fields.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Border.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Border" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Border" /> object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Border.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)"><summary>
            Draws the border on all sides.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Border.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Draws the border.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="sides">The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Sides" /> of the border to draw.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Border.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Border.GetBorderWidth"><summary>
            Returns the width of the border.
            </summary><returns>The width of the border.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Border.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Border.GetPrimaryColor"><summary>
            Returns the primary <c>Color</c> of the border.
            </summary><returns>The primary <c>Color</c> of the border.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Border.OnPropertyChanged(System.EventArgs)"><summary>
            Raises the <c>PropertyChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="E:ActiproSoftware.UI.WinForms.Drawing.Border.PropertyChanged"><summary>
            Occurs after a property is changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.Corner"><summary>
            Specifies the corner of a rectangle.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.Corner.UpperLeft"><summary>
            The upper left corner.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.Corner.UpperRight"><summary>
            The upper right corner.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.Corner.LowerLeft"><summary>
            The lower left corner.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.Corner.LowerRight"><summary>
            The lower right corner.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.DoubleBufferCanvas"><summary>
            Provides a canvas to use for double-buffered painting.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DoubleBufferCanvas.#ctor(System.Windows.Forms.Control)"><summary>
            Creates a new instance of the <c>DoubleBufferCanvas</c> class.
            </summary><param name="control">The <see cref="T:System.Windows.Forms.Control" /> that is using the canvas.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DoubleBufferCanvas.Copy(System.Drawing.Rectangle,System.Drawing.Point)"><summary>
            Copies one area of the canvas to another.
            </summary><param name="sourceRect">A <c>Rectangle</c> specifying the source bounds to copy.</param><param name="destLocation">A <c>Point</c> specifying the destination location.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DoubleBufferCanvas.Dispose"><summary>
            Disposes any resources used by the object.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DoubleBufferCanvas.Flush"><summary>
            Flushes the contents of the double-buffer canvas back to the original <c>Graphics</c> object.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DoubleBufferCanvas.Invert(System.Drawing.Rectangle)"><summary>
            Inverts the specified bounds in the canvas.
            </summary><param name="bounds">A <c>Rectangle</c> specifying the bounds to invert.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DoubleBufferCanvas.PrepareGraphics(System.Windows.Forms.PaintEventArgs)"><summary>
            Prepares the double-buffer canvas for drawing.
            </summary><param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs" /> passed to the <c>Paint</c> event.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DoubleBufferCanvas.Reset"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.DoubleBufferCanvas.Graphics" /> and canvas.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.DoubleBufferCanvas.Graphics"><summary>
            The <c>Graphics</c> object to use for all drawing operations.
            </summary><value>A <c>Graphics</c> object to use for all drawing operations.</value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper"><summary>
            A helper class containing various drawing procedures.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Single,System.Drawing.RotateFlipType)"><summary>
            Draws an image.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="image">The <c>Image</c> to draw.</param><param name="x">The x-coordinate at which to draw.</param><param name="y">The y-coordinate at which to draw.</param><param name="alpha">The opacity of the image (decimal between <c>0</c> and <c>1</c>).</param><param name="imageRotation">The image rotation.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Drawing.RotateFlipType)"><summary>
            Draws an image.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="image">The <c>Image</c> to draw.</param><param name="x">The x-coordinate at which to draw.</param><param name="y">The y-coordinate at which to draw.</param><param name="width">The width of the image.</param><param name="height">The height of the image.</param><param name="alpha">The opacity of the image (decimal between <c>0</c> and <c>1</c>).</param><param name="imageRotation">The image rotation.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.DrawImageShadow(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Single,System.Drawing.RotateFlipType)"><summary>
            Draws an image shadow.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="image">The <c>Image</c> to use for creating the shadow.</param><param name="x">The x-coordinate at which to draw.</param><param name="y">The y-coordinate at which to draw.</param><param name="alpha">The opacity of the image (decimal between <c>0</c> and <c>1</c>).</param><param name="imageRotation">The image rotation.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.DrawRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)"><summary>
            Draws a rectangle.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area.</param><param name="pen">The <c>Pen</c> to use for drawing.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.DrawRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Drawing2D.DashStyle)"><summary>
            Draws a rectangle with the specified color and dash style.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area.</param><param name="color">The <see cref="T:System.Drawing.Color" /> to use for drawing.</param><param name="dashStyle">The <c>DashStyle</c> to use for drawing.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,System.Drawing.Pen)"><summary>
            Draws a rounded rectangle.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area.</param><param name="offsetX">The x-offset of the arc.</param><param name="offsetY">The y-offset of the arc.</param><param name="pen">The <c>Pen</c> to use for drawing.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.DrawString(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)"><summary>
            Draws a string.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use.</param><param name="text">The text to draw.</param><param name="font">The <see cref="T:System.Drawing.Font" /> to use when drawing the text.</param><param name="color">The <see cref="T:System.Drawing.Color" /> to use when drawing the text.</param><param name="bounds">The bounds in which to draw the text.</param><param name="format">The <see cref="T:System.Drawing.StringFormat" /> to use when drawing the text.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.DrawWrappedImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)"><summary>
            Draws a wrapped <c>Image</c>.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">A <c>Rectangle</c> indicating the bounds of the drawing operation.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="image">The <c>Image</c> to draw.</param><param name="wrapMode">The <c>WrapMode</c> to tile with.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.FillRoundedRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,System.Drawing.Brush)"><summary>
            Fills a rounded rectangle.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area.</param><param name="offsetX">The x-offset of the arc.</param><param name="offsetY">The y-offset of the arc.</param><param name="brush">The <c>Brush</c> to use for drawing.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.GetCenteredRectangleLocation(System.Drawing.Rectangle,System.Drawing.Size)"><summary>
            Gets the <c>Point</c> at which the specified rectangle should be located within the bounds to be centered.
            </summary><param name="bounds">The bounds of the parent.</param><param name="size">The child rectangle's size.</param><returns>A <c>Point</c> specifying the upper-left position that the rectangle should be placed.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.GetDarkBorderColor(System.Drawing.Color)"><summary>
            Gets the color to be used for a Dark border.
            </summary><param name="baseBorderColor">The base border color.</param><returns>the Dark color.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.GetDarkDarkBorderColor(System.Drawing.Color)"><summary>
            Gets the color to be used for a DarkDark border.
            </summary><param name="baseBorderColor">The base border color.</param><returns>the DarkDark color.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.GetHatchedBrush(System.Drawing.Color,System.Drawing.Color)"><summary>
            Creates a hatched checkerboard brush.
            </summary><param name="color1">The first color to use.</param><param name="color2">The second color to use.</param><returns>A <c>TextureBrush</c> that is a checkerboard-patterned brush.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.GetLightBorderColor(System.Drawing.Color)"><summary>
            Gets the color to be used for a Light border.
            </summary><param name="baseBorderColor">The base border color.</param><returns>the Light color.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.GetLightLightBorderColor(System.Drawing.Color)"><summary>
            Gets the color to be used for a LightLight border.
            </summary><param name="baseBorderColor">The base border color.</param><returns>the LightLight color.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.GetOppositeSides(ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Returns a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Sides" /> value containing the sides that are not specified.
            </summary><param name="sides">The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Sides" /> value whose opposite sides are to be found.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Sides" /> value containing the sides that are not specified.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.GetShortcutTextFromShortcut(System.Windows.Forms.Shortcut)"><summary>
            Gets the proper display text of a shortcut.
            </summary><param name="shortcut">The <c>Shortcut</c> whose text is to be retrieved.</param><returns>The proper display text of a shortcut.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.GetStringFormat(System.Drawing.StringAlignment,System.Drawing.StringAlignment,System.Drawing.StringTrimming,System.Boolean,System.Boolean)"><summary>
            Gets a <see cref="T:System.Drawing.StringFormat" /> for the specified parameters.
            </summary><param name="hAlign">A <see cref="T:System.Drawing.StringAlignment" /> indicating the horizontal alignment.</param><param name="vAlign">A <see cref="T:System.Drawing.StringAlignment" /> indicating the vertical alignment.</param><param name="trimming">A <see cref="T:System.Drawing.StringTrimming" /> indicating the trimming method.</param><param name="wrap">Whether to allow wrapped text.</param><param name="vertical">Whether to work with vertical text.</param><returns>A <see cref="T:System.Drawing.StringFormat" /> for the specified parameters.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.DrawingHelper.MeasureString(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.StringFormat)"><summary>
            Measures a string.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use.</param><param name="text">The text to draw.</param><param name="font">The <see cref="T:System.Drawing.Font" /> to use when drawing the text.</param><param name="format">The <see cref="T:System.Drawing.StringFormat" /> to use when drawing the text.</param></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient"><summary>
            Represents an ellipse gradient.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.#ctor"><summary>
            Initializes a new instance of the <c>EllipseGradient</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.#ctor(System.Drawing.Color,System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>EllipseGradient</c> class. 
            </summary><param name="centerColor">The center color of the gradient.</param><param name="outerColor">The outer color of the gradient.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>EllipseGradient</c> class. 
            </summary><param name="centerColor">The center color of the gradient.</param><param name="outerColor">The outer color of the gradient.</param><param name="backColor">The background color of the gradient.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.#ctor(ActiproSoftware.UI.WinForms.Drawing.EllipseGradient)"><summary>
            Initializes a new instance of the <c>EllipseGradient</c> class.
            </summary><param name="copyFrom">An instance of <c>EllipseGradient</c> which will be copied to initialize the new instance.</param><remarks>
            This constructor used in support of <see cref="M:System.ICloneable.Clone" /> for base classes to initialize their fields.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.ResetBackColor"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.BackColor" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.ShouldSerializeBackColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.BackColor" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.ResetCenterColor"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.CenterColor" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.ShouldSerializeCenterColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.CenterColor" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill" /> object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="centerColor">The center color of the gradient.</param><param name="outerColor">The outer color of the gradient.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="centerColor">The center color of the gradient.</param><param name="outerColor">The outer color of the gradient.</param><param name="backColor">The background color of the gradient.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.GetBrush(System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.ResetOuterColor"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.OuterColor" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.ShouldSerializeOuterColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.OuterColor" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.BackColor"><summary>
            Gets or sets the background color of the gradient.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the background color.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.BackColorAlpha"><summary>
            Gets or sets the background color alpha value.
            </summary><value>The background color alpha value.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.CenterColor"><summary>
            Gets or sets the center color of the gradient.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the center color.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.CenterColorAlpha"><summary>
            Gets or sets the center color alpha value.
            </summary><value>The center color alpha value.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.OuterColor"><summary>
            Gets or sets the outer color of the gradient.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the outer color.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.EllipseGradient.OuterColorAlpha"><summary>
            Gets or sets the outer color alpha value.
            </summary><value>The outer color alpha value.</value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.Gradient"><summary>
            Specifies a base class for gradient information.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Gradient.#ctor"><summary>
            Initializes a new instance of the <c>Gradient</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Gradient.#ctor(ActiproSoftware.UI.WinForms.Drawing.Gradient)"><summary>
            Initializes a new instance of the <c>Gradient</c> class.
            </summary><param name="copyFrom">An instance of <c>Gradient</c> which will be copied to initialize the new instance.</param><remarks>
            This constructor used in support of <see cref="M:System.ICloneable.Clone" /> for base classes to initialize their fields.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Gradient.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Gradient.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill"><summary>
            Provides a class that draws a hatched two-color background fill.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.#ctor"><summary>
            Initializes a new instance of the <c>HatchedBackgroundFill</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.#ctor(System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>HatchedBackgroundFill</c> class.
            </summary><param name="color">The first color of the background fill.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.#ctor(System.Drawing.Color,System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>HatchedBackgroundFill</c> class.
            </summary><param name="color1">The first color of the background fill.</param><param name="color2">The second color of the background fill.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.#ctor(ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill)"><summary>
            Initializes a new instance of the <c>HatchedBackgroundFill</c> class.
            </summary><param name="copyFrom">An instance of <c>HatchedBackgroundFill</c> which will be copied to initialize the new instance.</param><remarks>
            This constructor used in support of <see cref="M:System.ICloneable.Clone" /> for base classes to initialize their fields.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill" /> object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.ResetColor1"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.Color1" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.ShouldSerializeColor1"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.Color1" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.ResetColor2"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.Color2" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.ShouldSerializeColor2"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.Color2" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="color1">The first color of the background fill.</param><param name="color2">The second color of the background fill.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.GetBrush(System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.Color1"><summary>
            Gets or sets the first color of the background fill.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the first background fill color.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.HatchedBackgroundFill.Color2"><summary>
            Gets or sets the second color of the background fill.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the second background fill color.</value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.HorizontalAlignment"><summary>
            Specifies how an object or text in a control is horizontally aligned.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.HorizontalAlignment.Left"><summary>
            The object or text is aligned to the left.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.HorizontalAlignment.Center"><summary>
            The object or text is aligned in the center.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.HorizontalAlignment.Right"><summary>
            The object or text is aligned to the right.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.IDoubleBufferCanvas"><summary>
            Provides the base requirements of a canvas to use for double-buffered painting.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.IDoubleBufferCanvas.Copy(System.Drawing.Rectangle,System.Drawing.Point)"><summary>
            Copies one area of the canvas to another.
            </summary><param name="sourceRect">A <c>Rectangle</c> specifying the source bounds to copy.</param><param name="destLocation">A <c>Point</c> specifying the destination location.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.IDoubleBufferCanvas.Flush"><summary>
            Flushes the contents of the double-buffer canvas back to the original <c>Graphics</c> object.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.IDoubleBufferCanvas.Invert(System.Drawing.Rectangle)"><summary>
            Inverts the specified bounds in the canvas.
            </summary><param name="bounds">A <c>Rectangle</c> specifying the bounds to invert.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.IDoubleBufferCanvas.PrepareGraphics(System.Windows.Forms.PaintEventArgs)"><summary>
            Prepares the double-buffer canvas for drawing.
            </summary><param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs" /> passed to the <c>Paint</c> event.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.IDoubleBufferCanvas.Reset"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.IDoubleBufferCanvas.Graphics" /> and canvas.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.IDoubleBufferCanvas.Graphics"><summary>
            The <c>Graphics</c> object to use for all drawing operations.
            </summary><value>A <c>Graphics</c> object to use for all drawing operations.</value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill"><summary>
            Provides a class that draws an image as a background fill.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.#ctor"><summary>
            Initializes a new instance of the <c>ImageBackgroundFill</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.#ctor(System.Drawing.Image)"><summary>
            Initializes a new instance of the <c>ImageBackgroundFill</c> class.
            </summary><param name="image">The image to tile in the background.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.#ctor(System.Drawing.Image,ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFillStyle)"><summary>
            Initializes a new instance of the <c>ImageBackgroundFill</c> class.
            </summary><param name="image">The image to tile in the background.</param><param name="style">The style of the image.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.#ctor(ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill)"><summary>
            Initializes a new instance of the <c>ImageBackgroundFill</c> class.
            </summary><param name="copyFrom">An instance of <c>ImageBackgroundFill</c> which will be copied to initialize the new instance.</param><remarks>
            This constructor used in support of <see cref="M:System.ICloneable.Clone" /> for base classes to initialize their fields.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill" /> object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Image)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="image">The image to tile in the background.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Image,ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFillStyle)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="image">The image to tile in the background.</param><param name="style">The style of the image.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.GetBrush(System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.ResetImage"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.Image" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.ShouldSerializeImage"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.Image" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.ResetStyle"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.Style" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.ShouldSerializeStyle"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.Style" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.Image"><summary>
            Gets or sets the image to tile in the background.
            </summary><value>An <see cref="T:System.Drawing.Image" /> to tile in the background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill.Style"><summary>
            Gets or sets the style of the image.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFillStyle" /> object containing the style of the image.</value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFillStyle"><summary>
            Specifies the type of image fill effect to apply to a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFill" />.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFillStyle.Tile"><summary>
            The image is tiled.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFillStyle.TileFlipX"><summary>
            Reverses the image horizontally and then tiles the texture or gradient. 
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFillStyle.TileFlipY"><summary>
            Reverses the image vertically and then tiles the texture or gradient. 
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFillStyle.TileFlipXY"><summary>
            Reverses the image horizontally and vertically and then tiles the texture or gradient. 
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.ImageBackgroundFillStyle.Stretch"><summary>
            The image is streched across the bounds of the background fill. 
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.LinearGradient"><summary>
            Represents a simple linear gradient.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.#ctor"><summary>
            Initializes a new instance of the <c>LinearGradient</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>LinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Single)"><summary>
            Initializes a new instance of the <c>LinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.UI.WinForms.Drawing.BackgroundFillRotationType)"><summary>
            Initializes a new instance of the <c>LinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="rotationType">The type of rotation to perform when drawing the background fill for a side.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.#ctor(ActiproSoftware.UI.WinForms.Drawing.LinearGradient)"><summary>
            Initializes a new instance of the <c>LinearGradient</c> class.
            </summary><param name="copyFrom">An instance of <c>LinearGradient</c> which will be copied to initialize the new instance.</param><remarks>
            This constructor used in support of <see cref="M:System.ICloneable.Clone" /> for base classes to initialize their fields.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.ResetAngle"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.Angle" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.ShouldSerializeAngle"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.Angle" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.ResetEndColor"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.EndColor" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.ShouldSerializeEndColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.EndColor" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.ResetRotationType"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.RotationType" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.ShouldSerializeRotationType"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.RotationType" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.ResetStartColor"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.StartColor" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.ShouldSerializeStartColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.StartColor" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.Angle"><summary>
            Gets or sets the angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient. 
            </summary><value>
            The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient. 
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.EndColor"><summary>
            Gets or sets the end color of the gradient.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the end color.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.EndColorAlpha"><summary>
            Gets or sets the end color alpha value.
            </summary><value>The end color alpha value.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.RotationType"><summary>
            Gets or sets the type of rotation to perform when drawing the background fill for a side.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFillRotationType" /> indicating the type of rotation to perform when drawing the background fill for a side.</value><remarks>The default drawing side is <see cref="F:ActiproSoftware.UI.WinForms.Drawing.Sides.Top" />.</remarks></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.StartColor"><summary>
            Gets or sets the start color of the gradient.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the start color.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradient.StartColorAlpha"><summary>
            Gets or sets the start color alpha value.
            </summary><value>The start color alpha value.</value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition"><summary>
            Provides color and position information for a linear gradient.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.#ctor"><summary>
            Initializes a new instance of the <c>LinearGradientColorPosition</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.#ctor(System.Drawing.Color,System.Single)"><summary>
            Initializes a new instance of the <c>LinearGradientColorPosition</c> class. 
            </summary><param name="color">The color of the gradient step.</param><param name="position">The percentage of distance along the gradient line.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.#ctor(ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition)"><summary>
            Initializes a new instance of the <c>LinearGradientColorPosition</c> class.
            </summary><param name="copyFrom">An instance of <c>LinearGradientColorPosition</c> which will be copied to initialize the new instance.</param><remarks>
            This constructor used in support of <see cref="M:System.ICloneable.Clone" />.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition" /> object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.ResetColor"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.Color" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.ShouldSerializeColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.Color" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.OnPropertyChanged(System.EventArgs)"><summary>
            Raises the <c>PropertyChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.ResetPosition"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.Position" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.ShouldSerializePosition"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.Position" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.Color"><summary>
            Gets or sets the color of the gradient step.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the color.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.ColorAlpha"><summary>
            Gets or sets the color alpha value.
            </summary><value>The color alpha value.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.Position"><summary>
            Gets or sets the percentage of distance along the gradient line.
            </summary><value>
            The percentage of distance along the gradient line.  This value is a decimal between 0 and 1.
            </value></member><member name="E:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition.PropertyChanged"><summary>
            Occurs after a property is changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient"><summary>
            Represents a multi-color linear gradient.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.#ctor"><summary>
            Initializes a new instance of the <c>MultiColorLinearGradient</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single)"><summary>
            Initializes a new instance of the <c>MultiColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="middleColor">The middle color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.UI.WinForms.Drawing.BackgroundFillRotationType)"><summary>
            Initializes a new instance of the <c>MultiColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="middleColor">The middle color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="rotationType">The type of rotation to perform when drawing the background fill for a side.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.#ctor(System.Drawing.Color,ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition[],System.Drawing.Color,System.Single,ActiproSoftware.UI.WinForms.Drawing.BackgroundFillRotationType)"><summary>
            Initializes a new instance of the <c>MultiColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="intermediateColors">The intermediate colors of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="rotationType">The type of rotation to perform when drawing the background fill for a side.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.#ctor(ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient)"><summary>
            Initializes a new instance of the <c>MultiColorLinearGradient</c> class.
            </summary><param name="copyFrom">An instance of <c>MultiColorLinearGradient</c> which will be copied to initialize the new instance.</param><remarks>
            This constructor used in support of <see cref="M:System.ICloneable.Clone" /> for base classes to initialize their fields.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient" /> object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="startColor">The start color of the gradient.</param><param name="middleColor">The middle color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition[],System.Drawing.Color,System.Single)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="startColor">The start color of the gradient.</param><param name="intermediateColors">The intermediate colors of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.GetBrush(System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.ResetIntermediateColors"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.IntermediateColors" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.ShouldSerializeIntermediateColors"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.IntermediateColors" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.MultiColorLinearGradient.IntermediateColors"><summary>
            Gets or sets the intermediate colors of the gradient.
            </summary><value>An array of <see cref="T:ActiproSoftware.UI.WinForms.Drawing.LinearGradientColorPosition" /> objects containing the intermediate colors.</value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.Padding"><summary>
            Specifies a set of values for each side of a rectangle.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Padding.#ctor(System.Int32)"><summary>
            Initializes a new instance of the <c>Padding</c> class.
            </summary><param name="allSides">The value to assign to all sides.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Padding.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)"><summary>
            Initializes a new instance of the <c>Padding</c> class.
            </summary><param name="left">The left value to set.</param><param name="top">The top value to set.</param><param name="right">The right value to set.</param><param name="bottom">The bottom value to set.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Padding.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Padding.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Padding.AllSidesEqual"><summary>
            Gets whether the padding is set.
            </summary><value><c>true</c> if any member of the padding is set; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Padding.All"><summary>
            Gets or sets all values.
            </summary><value>All values.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Padding.Bottom"><summary>
            Gets or sets the bottom value.
            </summary><value>The bottom value.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Padding.Empty"><summary>
            Gets an empty <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Padding" /> object.
            </summary><value>
            The empty <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Padding" /> object that was created.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Padding.Horizontal"><summary>
            Gets the combined padding for the right and left values.
            </summary><value>The combined padding for the right and left values.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Padding.IsEmpty"><summary>
            Gets whether the padding is set.
            </summary><value><c>true</c> if any member of the padding is set; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Padding.Left"><summary>
            Gets or sets the left value.
            </summary><value>The left value.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Padding.Right"><summary>
            Gets or sets the right value.
            </summary><value>The right value.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Padding.Top"><summary>
            Gets or sets the top value.
            </summary><value>The top value.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Padding.Vertical"><summary>
            Gets the combined padding for the top and bottom values.
            </summary><value>The combined padding for the top and bottom values.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Padding.Zero"><summary>
            Gets an <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Padding" /> object with all sides equal to zero.
            </summary><value>
            The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Padding" /> object that was created.
            </value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.Range"><summary>
            Represents an ordered pair of min and max values.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Range.#ctor"><summary>
            Initializes a new instance of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" /> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Range.#ctor(System.Int32,System.Int32)"><summary>
            Initializes a new instance of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" /> class with the specified min and max values.
            </summary><param name="min">The minimum value of the range.</param><param name="max">The maximum value of the range.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Range.Contains(System.Int32)"><summary>
            Returns whether the range inclusively contains the specified value.
            </summary><param name="value">The value to check.</param><returns><c>true</c> if the range inclusively contains the specified value; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Range.Contains(ActiproSoftware.UI.WinForms.Drawing.Range)"><summary>
            Returns whether the range inclusively contains the specified <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" />.
            </summary><param name="range">The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" /> to check.</param><returns><c>true</c> if the range inclusively contains the specified <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" />; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Range.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Range.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Range.IntersectsWith(ActiproSoftware.UI.WinForms.Drawing.Range)"><summary>
            Returns whether the range intersects with the specified <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" />.
            </summary><param name="range">The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" /> to check.</param><returns><c>true</c> if the range intersects with the specified <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" />; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Range.Normalize"><summary>
            Normalizes the range values (ensures that the maximum value is greater than or equal to the minimum).
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Range.ToString"><summary>
            Converts the object to a <c>String</c>.
            </summary><returns>
            A string whose value represents this object.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.Range.Union(ActiproSoftware.UI.WinForms.Drawing.Range)"><summary>
            Changes this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" /> to be the union of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" /> with another <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" />.
            </summary><param name="range">The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" /> with which to merge.</param></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Range.Empty"><summary>
            Returns an empty <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" />.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" /> that is empty.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Range.IsEmpty"><summary>
            Returns whether the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" /> is empty.
            </summary><value><c>true</c> if the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" /> is empty; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Range.IsNormalized"><summary>
            Gets whether the range is normalized (the maximum value is greater than or equal to the minimum).
            </summary><value><c>true</c> if the range is normalized; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Range.Length"><summary>
            Gets the length of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" />.
            </summary><value>The length of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" />.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Range.Max"><summary>
            Gets or sets the maximum value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" />.
            </summary><value>The maximum value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" />.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.Range.Min"><summary>
            Gets or sets the minimum value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" />.
            </summary><value>The minimum value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Range" />.</value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.Sides"><summary>
            Specifies one or more sides.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.Sides.Top"><summary>
            The top side.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.Sides.Right"><summary>
            The right side.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.Sides.Bottom"><summary>
            The bottom side.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.Sides.Left"><summary>
            The left side.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder"><summary>
            Provides a class that draws a simple border.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.#ctor"><summary>
            Initializes a new instance of the <c>SimpleBorder</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.#ctor(ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle,System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>SimpleBorder</c> class.
            </summary><param name="style">The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle" /> specifying the border type.</param><param name="color">The base <see cref="P:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Color" /> of the border.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.#ctor(ActiproSoftware.UI.WinForms.Drawing.SimpleBorder)"><summary>
            Initializes a new instance of the <c>SimpleBorder</c> class.
            </summary><param name="copyFrom">An instance of <c>SimpleBorder</c> which will be copied to initialize the new instance.</param><remarks>
            This constructor used in support of <see cref="M:System.ICloneable.Clone" /> for base classes to initialize their fields.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Border" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Border" /> object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.ResetColor"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Color" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.ShouldSerializeColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Color" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Draws the border.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="sides">The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Sides" /> of the border to draw.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle,System.Drawing.Color)"><summary>
            Draws a border.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the border.</param><param name="borderStyle">The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle" /> specifying the border type.</param><param name="borderColor">The base <see cref="P:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Color" /> of the border.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle,System.Drawing.Color,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Draws a border.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the border.</param><param name="borderStyle">The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle" /> specifying the border type.</param><param name="borderColor">The base <see cref="P:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Color" /> of the border.</param><param name="sides">The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Sides" /> of the border to draw.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.GetBorderWidth"><summary>
            Returns the width of the border.
            </summary><returns>The width of the border.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.GetBorderWidth(ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle)"><summary>
            Returns the width of the border for the specified <see cref="T:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle" />.
            </summary><param name="borderStyle">A <see cref="T:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle" /> specifying the type of border to measure.</param><returns>The width of the border for the specified <see cref="T:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle" />.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.GetPrimaryColor"><summary>
            Returns the primary <c>Color</c> of the border.
            </summary><returns>The primary <c>Color</c> of the border.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.ResetStyle"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Style" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.ShouldSerializeStyle"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Style" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Color"><summary>
            Gets or sets the base color of the border.
            </summary><value>A <see cref="P:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Color" /> object containing the base color value.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.ColorAlpha"><summary>
            Gets or sets the color alpha value.
            </summary><value>The color alpha value.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.SimpleBorder.Style"><summary>
            Gets or sets the style of the border.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle" /> object specifying the border style.</value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle"><summary>
            Specifies a border style for a user interface component.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.None"><summary>
            No border.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.Solid"><summary>
            A solid line border.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.DoubleSolid"><summary>
            A solid line border 2 pixels wide.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.SinglePixelRoundedSolid"><summary>
            A single-pixel softly-rounded solid line border.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.SinglePixelRoundedTopSolid"><summary>
            A single-pixel softly-rounded (on the top only) solid line border.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.DoublePixelRoundedSolid"><summary>
            A double-pixel softly-rounded solid line border.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.Dashed"><summary>
            A dashed border.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.Dotted"><summary>
            A dotted-line border.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.Raised"><summary>
            The border has raised inner and outer edges.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.Sunken"><summary>
            The border has sunken inner and outer edges.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.RaisedInner"><summary>
            The border has raised inner edges.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.SunkenInner"><summary>
            The border has sunken inner edges.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.Bump"><summary>
            The inner and outer edges of the border have a raised appearance.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle.Etched"><summary>
            The inner and outer edges of the border have an etched appearance.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill"><summary>
            Provides a class that draws a solid color background fill.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.#ctor"><summary>
            Initializes a new instance of the <c>SolidColorBackgroundFill</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.#ctor(System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>SolidColorBackgroundFill</c> class.
            </summary><param name="color">The color of the background fill.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.#ctor(ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill)"><summary>
            Initializes a new instance of the <c>SolidColorBackgroundFill</c> class.
            </summary><param name="copyFrom">An instance of <c>SolidColorBackgroundFill</c> which will be copied to initialize the new instance.</param><remarks>
            This constructor used in support of <see cref="M:System.ICloneable.Clone" /> for base classes to initialize their fields.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill" /> object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.ResetColor"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.Color" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.ShouldSerializeColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.Color" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="color">The color of the background fill.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.GetBrush(System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.Color"><summary>
            Gets or sets the color of the background fill.
            </summary><value>A <see cref="P:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.Color" /> object containing the background fill color.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.SolidColorBackgroundFill.ColorAlpha"><summary>
            Gets or sets the color alpha value.
            </summary><value>The color alpha value.</value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient"><summary>
            Represents a two color linear gradient.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.#ctor"><summary>
            Initializes a new instance of the <c>TwoColorLinearGradient</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle)"><summary>
            Initializes a new instance of the <c>TwoColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle,ActiproSoftware.UI.WinForms.Drawing.BackgroundFillRotationType)"><summary>
            Initializes a new instance of the <c>TwoColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param><param name="rotationType">The type of rotation to perform when drawing the background fill for a side.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle,System.Single,System.Single)"><summary>
            Initializes a new instance of the <c>TwoColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param><param name="focus">The gradient focus.</param><param name="scale">The gradient scale.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle,System.Single,System.Single,ActiproSoftware.UI.WinForms.Drawing.BackgroundFillRotationType)"><summary>
            Initializes a new instance of the <c>TwoColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param><param name="focus">The gradient focus.</param><param name="scale">The gradient scale.</param><param name="rotationType">The type of rotation to perform when drawing the background fill for a side.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.#ctor(ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient)"><summary>
            Initializes a new instance of the <c>TwoColorLinearGradient</c> class.
            </summary><param name="copyFrom">An instance of <c>TwoColorLinearGradient</c> which will be copied to initialize the new instance.</param><remarks>
            This constructor used in support of <see cref="M:System.ICloneable.Clone" /> for base classes to initialize their fields.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient" /> object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle,System.Single,System.Single)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param><param name="focus">The gradient focus.</param><param name="scale">The gradient scale.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="path">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle,System.Single,System.Single)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="path">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param><param name="focus">The gradient focus.</param><param name="scale">The gradient scale.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.ResetFocus"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Focus" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.ShouldSerializeFocus"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Focus" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.GetBrush(System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.ResetScale"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Scale" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.ShouldSerializeScale"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Focus" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.ResetStyle"><summary>
            Resets the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Style" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.ShouldSerializeStyle"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Style" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Focus"><summary>
            Gets or sets the gradient focus.
            </summary><value>The gradient focus.</value><remarks>
            This value is used to determine the center point of triangle and bell-shaped gradients.
            It's value should be a decimal between <c>0</c> and <c>1</c>.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Scale"><summary>
            Gets or sets the gradient scale.
            </summary><value>The gradient scale.</value><remarks>
            This value is used to determine how fast the colors falloff from the focus in triangle and bell-shaped gradients.
            It's value should be a decimal between <c>0</c> and <c>1</c>.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient.Style"><summary>
            Gets or sets the style of the gradient.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle" /> object containing the style of the gradient.</value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle"><summary>
            Specifies the type of gradient effect to apply to a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradient" />.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle.Normal"><summary>
            Specifies a gradient that starts with the start color at one edge and
            ends with the end color at the opposite edge.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle.TriangleBump"><summary>
            Specifies a gradient that starts the end color at the center point of the gradient and
            performs a triangle shaped linear falloff to the edges 
            of the gradient using the start color.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle.SigmaBellBump"><summary>
            Specifies a gradient that starts the end color at the center point of the gradient and
            performs a sigma bell-shaped linear falloff to the edges 
            of the gradient using the start color.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.UIColor"><summary>
            Provides an enhanced representation of a <see cref="T:System.Drawing.Color" /> object that supports both RGB and HSB color settings.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.Equals(System.Drawing.Color)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.FromAhsb(System.Single,System.Single,System.Single)"><summary>
            Creates a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure from the specified HSB color values (hue, saturation, and brightness). 
            </summary><param name="hue">The hue component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 360.</param><param name="saturation">The saturation component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 1.</param><param name="brightness">The brightness component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 1.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure that this method creates.</returns><remarks>
            The alpha value is implicitly 255 (fully opaque). 
            Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to the values indicated above.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.FromAhsb(System.Int32,System.Single,System.Single,System.Single)"><summary>
            Creates a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure from an alpha value and the specified HSB color values (hue, saturation, and brightness).
            </summary><param name="alpha">The alpha component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><param name="hue">The hue component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 360.</param><param name="saturation">The saturation component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 1.</param><param name="brightness">The brightness component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 1.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure that this method creates.</returns><remarks>
            Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to the values indicated above.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.FromArgb(System.Drawing.Color)"><summary>
            Creates a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure from the specified <see cref="T:System.Drawing.Color" />.
            </summary><param name="color">The <see cref="T:System.Drawing.Color" /> to use as a template.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure that this method creates.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.FromArgb(System.Int32,System.Int32,System.Int32)"><summary>
            Creates a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure from the specified 8-bit color values (red, green, and blue). 
            </summary><param name="red">The red component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><param name="green">The red component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><param name="blue">The red component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure that this method creates.</returns><remarks>
            The alpha value is implicitly 255 (fully opaque). 
            Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)"><summary>
            Creates a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure from the four ARGB component (alpha, red, green, and blue) values.
            </summary><param name="alpha">The alpha component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><param name="red">The red component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><param name="green">The red component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><param name="blue">The red component value for the new <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure that this method creates.</returns><remarks>
            Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.FromColor(System.Drawing.Color)"><summary>
            Creates a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure from the specified <see cref="T:System.Drawing.Color" />.
            </summary><param name="color">The <see cref="T:System.Drawing.Color" /> to use as a template.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure that this method creates.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.FromMix(System.Drawing.Color,System.Drawing.Color,System.Single)"><summary>
             Creates a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure that is the specified percentage between the value of two <see cref="T:System.Drawing.Color" /> objects.
            </summary><param name="color1">The first <see cref="T:System.Drawing.Color" /> to examine.</param><param name="color2">The second <see cref="T:System.Drawing.Color" /> to examine.</param><param name="percentage">The percentage from the first color to the second in which to return a color.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure that this method creates.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.FromKnownColor(System.Drawing.KnownColor)"><summary>
            Creates a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure from the specified pre-defined color.
            </summary><param name="color">An element of the <see cref="T:System.Drawing.KnownColor" /> enumeration.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure that this method creates.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.FromName(System.String)"><summary>
            Creates a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure from the specified name of a pre-defined color.
            </summary><param name="name">
            A string that is the name of a pre-defined color. 
            Valid names are the same as the names of the elements of the <see cref="T:System.Drawing.KnownColor" /> enumeration.
            </param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure that this method creates.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.FromWebColor(System.String)"><summary>
            Creates a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure from the specified web color.
            </summary><param name="text">A string containing the color.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure that this method creates.</returns><remarks>
            This method can process HTML color specifications (e.g. #FF00FF) and known color names.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.GetStandardCustomColors"><summary>
            Returns an array containing all of the standard custom values.
            </summary><returns>An array of <see cref="T:System.Drawing.Color" /> objects.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.GetSystemColors"><summary>
            Returns an array containing all of the <see cref="T:System.Drawing.SystemColors" /> values.
            </summary><returns>An array of <see cref="T:System.Drawing.Color" /> objects.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.GetTintedColor(System.Drawing.Color,System.Drawing.Color)"><summary>
            Returns the custom tinted color for the specified base color.
            </summary><param name="baseColor">The base <see cref="T:System.Drawing.Color" /> to examine.</param><param name="tintColor">The tint <see cref="T:System.Drawing.Color" />.</param><returns>The custom tinted color for the specified base color.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.GetWebColors"><summary>
            Returns an array containing all of the web color values.
            </summary><returns>An array of <see cref="T:System.Drawing.Color" /> objects.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.Tint(System.Drawing.Color)"><summary>
            Tints this color towards the specified tint <see cref="T:System.Drawing.Color" />.
            </summary><param name="tintColor">The tint <see cref="T:System.Drawing.Color" />.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.ToColor"><summary>
            Gets the <see cref="T:System.Drawing.Color" /> value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.
            </summary><returns>
            The <see cref="T:System.Drawing.Color" /> that is encapsulated by this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" />.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.ToKnownColor"><summary>
            Gets the <see cref="T:System.Drawing.KnownColor" /> value of this <see cref="T:System.Drawing.KnownColor" /> structure.
            </summary><returns>
            An element of the <see cref="T:System.Drawing.KnownColor" /> enumeration, if the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure is created from a pre-defined color 
            by using either the <see cref="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.FromName(System.String)" /> method or the <see cref="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.FromKnownColor(System.Drawing.KnownColor)" /> method; otherwise, zero.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.ToWebColor"><summary>
            Converts the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> to a web color.
            </summary><returns>
            The color in HTML color specification format (e.g. #FF00FF).
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.UIColor.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.UIColor.A"><summary>
            Gets or sets the alpha component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.
            </summary><value>The alpha component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.UIColor.B"><summary>
            Gets or sets the blue component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.
            </summary><value>The blue component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.UIColor.Brightness"><summary>
            Gets or sets the brightness component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.
            </summary><value>The brightness component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.UIColor.G"><summary>
            Gets or sets the green component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.
            </summary><value>The green component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.UIColor.Hue"><summary>
            Gets or sets the hue component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.
            </summary><value>The hue component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.UIColor.IsLight"><summary>
            Gets whether the color is a light color.
            </summary><value><c>true</c> if the color is a light color; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.UIColor.R"><summary>
            Gets or sets the ref component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.
            </summary><value>The red component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.UIColor.Saturation"><summary>
            Gets or sets the saturation component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.
            </summary><value>The saturation component value of this <see cref="T:ActiproSoftware.UI.WinForms.Drawing.UIColor" /> structure.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.UIColor.W3CBrightness"><summary>
            Gets the brightness of the color, based on the W3C formula for calculating brightness.
            </summary><value>The brightness of the color, based on the W3C formula for calculating brightness.</value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.VerticalAlignment"><summary>
            Specifies how an object or text in a control is vertically aligned.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.VerticalAlignment.Top"><summary>
            The object or text is aligned to the top.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.VerticalAlignment.Middle"><summary>
            The object or text is aligned in the middle.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.VerticalAlignment.Bottom"><summary>
            The object or text is aligned to the bottom.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme"><summary>
            Provides a Windows color scheme.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.#ctor(System.String,ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType,System.Drawing.Color)"><summary>
            Creates an instance of the <c>WindowsColorScheme</c> class.
            </summary><param name="key">The key of the color scheme.</param><param name="baseColorSchemeType">The base <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType" /> from which colors should be initialized.</param><param name="tintColor">A <see cref="T:System.Drawing.Color" /> that if is not <c>Color.Empty</c> will tint the color scheme to be based on the color.</param></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.GetColorScheme(ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType)"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the specified <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType" />.
            </summary><param name="colorSchemeType">The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType" /> to return.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the specified <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType" />.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.Initialize"><summary>
            Re-initializes all the colors.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.UpdateColors"><summary>
            Updates the colors.
            </summary><remarks>
            This method is called when the color scheme is first created and when system color preferences change.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonCheckedBack"><summary>
            Gets or sets the background color of a checked bar button.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a checked bar button.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonCheckedBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a checked bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a checked bar button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonCheckedBackGradientEnd"><summary>
            Gets or sets the end gradient color of a checked bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a checked bar button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonCheckedBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a checked bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a checked bar button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonCheckedBorder"><summary>
            Gets or sets the border color of a checked bar button.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the border color of a checked bar button.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonHotBack"><summary>
            Gets or sets the background color of a hot bar button.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a hot bar button.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonHotBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a hot bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a hot bar button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonHotBackGradientEnd"><summary>
            Gets or sets the end gradient color of a hot bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a hot bar button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonHotBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a hot bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a hot bar button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonHotBorder"><summary>
            Gets or sets the border color of a hot bar button.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the border color of a hot bar button.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonPressedBack"><summary>
            Gets or sets the background color of a pressed bar button.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a pressed bar button.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonPressedBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a pressed bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a pressed bar button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonPressedBackGradientEnd"><summary>
            Gets or sets the end gradient color of a pressed bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a pressed bar button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonPressedBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a pressed bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a pressed bar button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonPressedBorder"><summary>
            Gets or sets the border color of a pressed bar button.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the border color of a pressed bar button.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonText"><summary>
            Gets or sets the color of bar button text.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of bar button text.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonTextAlternate"><summary>
            Gets or sets the color of alternate bar button text.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of alternate bar button text.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarButtonTextDisabled"><summary>
            Gets or sets the color of disabled bar button text.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of disabled bar button text.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BarLabelBack"><summary>
            Gets or sets the background color of a bar label.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a bar label.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.BaseColorSchemeType"><summary>
            Gets a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType" /> that indicates the base color scheme type represented by this scheme.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType" /> that indicates the base color scheme type represented by this scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ColorSchemeType"><summary>
            Gets a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType" /> that indicates the resolved color scheme type represented by this scheme.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType" /> that indicates the resolved color scheme type represented by this scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.DefaultColorSchemeType"><summary>
            Gets a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType" /> that indicates the default color scheme.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType" /> that indicates the default color scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.FormBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a form background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a form background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.FormBackGradientEnd"><summary>
            Gets or sets the end gradient color of a form background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a form background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.Key"><summary>
            Gets the key that identifies the color scheme.
            </summary><value>The key that identifies the color scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.MenuBack"><summary>
            Gets or sets the background color of a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a menu.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.MenuBorder"><summary>
            Gets or sets the border color of a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the border color of a menu.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.MenuIconColumnBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a menu icon column background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a menu icon column background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.MenuIconColumnBackGradientEnd"><summary>
            Gets or sets the end gradient color of a menu icon column background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a menu icon column background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.MenuIconColumnBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a menu icon column background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a menu icon column background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.MetroLight"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Metro Light color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Metro Light color scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationBarHeaderBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a navigationbar header background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a navigationbar header background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationBarHeaderBackGradientEnd"><summary>
            Gets or sets the end gradient color of a navigationbar header background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a navigationbar header background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationBarHeaderText"><summary>
            Gets or sets the color of navigationbar header text.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of navigationbar header text.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonBackGradientEnd"><summary>
            Gets or sets the end gradient color of a navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonBackGradientMid1"><summary>
            Gets or sets the middle gradient color of a navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonBackGradientMid2"><summary>
            Gets or sets the middle gradient color of a navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonHotBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a hot navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a hot navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonHotBackGradientEnd"><summary>
            Gets or sets the end gradient color of a hot navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a hot navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonHotBackGradientMid1"><summary>
            Gets or sets the middle gradient color of a navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a hot navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonHotBackGradientMid2"><summary>
            Gets or sets the middle gradient color of a navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a hot navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonHotPressedBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a hot/pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a hot/pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonHotPressedBackGradientEnd"><summary>
            Gets or sets the end gradient color of a hot/pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a hot/pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonHotPressedBackGradientMid1"><summary>
            Gets or sets the middle gradient color of a hot/pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a hot/pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonHotPressedBackGradientMid2"><summary>
            Gets or sets the middle gradient color of a hot/pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a hot/pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonPressedBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonPressedBackGradientEnd"><summary>
            Gets or sets the end gradient color of a pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonPressedBackGradientMid1"><summary>
            Gets or sets the middle gradient color of a pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.NavigationPaneButtonPressedBackGradientMid2"><summary>
            Gets or sets the middle gradient color of a pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.Office2007Black"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Office 2007 black color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Office 2007 black color scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.Office2007Blue"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Office 2007 blue color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Office 2007 blue color scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.Office2007Silver"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Office 2007 silver color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Office 2007 silver color scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a toolbar background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a toolbar background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarBackGradientEnd"><summary>
            Gets or sets the end gradient color of a toolbar background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a toolbar background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a toolbar background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a toolbar background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarFloatingTitleBack"><summary>
            Gets or sets the background color of a floating toolbar title bar.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a floating toolbar title bar.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarFloatingTitleText"><summary>
            Gets or sets the text color of a floating toolbar title bar.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the text color of a floating toolbar title bar.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarGripperDark"><summary>
            Gets or sets the dark color of a toolbar gripper.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark color of a toolbar gripper.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarGripperLight"><summary>
            Gets or sets the light color of a toolbar gripper.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light color of a toolbar gripper.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarOptionsBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a toolbar options button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarOptionsBackGradientEnd"><summary>
            Gets or sets the end gradient color of a toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a toolbar options button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarOptionsBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a toolbar options button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarOptionsHotBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a hot toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a hot toolbar options button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarOptionsHotBackGradientEnd"><summary>
            Gets or sets the end gradient color of a hot toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a hot toolbar options button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarOptionsHotBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a hot toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a hot toolbar options button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarOptionsPressedBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a pressed toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a pressed toolbar options button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarOptionsPressedBackGradientEnd"><summary>
            Gets or sets the end gradient color of a pressed toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a pressed toolbar options button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarOptionsPressedBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a pressed toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a pressed toolbar options button background.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarSeparatorDark"><summary>
            Gets or sets the dark color of a toolbar separator.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark color of a toolbar separator.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarSeparatorLight"><summary>
            Gets or sets the light color of a toolbar separator.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light color of a toolbar separator.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.ToolBarShadow"><summary>
            Gets or sets the color of a toolbar shadow.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of a toolbar shadow.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.VisualStudio2005"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Visual Studio 2005 color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Visual Studio 2005 color scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.WindowsClassic"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Windows Classic color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Windows Classic color scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.WindowsDefault"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the default Windows color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the default Windows color scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.WindowsXPBlue"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Windows XP blue color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Windows XP blue color scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.WindowsXPOliveGreen"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Windows XP olive green color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Windows XP olive green color scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.WindowsXPRoyale"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Windows XP royale color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Windows XP royale color scheme.</value></member><member name="P:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme.WindowsXPSilver"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Windows XP silver color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> that represents the Windows XP silver color scheme.</value></member><member name="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType"><summary>
            Specifies a Windows color scheme type.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType.WindowsDefault"><summary>
            The default Windows color scheme.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType.WindowsClassic"><summary>
            The Windows Classic color scheme.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType.WindowsXPBlue"><summary>
            The Windows XP blue color scheme.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType.WindowsXPOliveGreen"><summary>
            The Windows XP olive green color scheme.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType.WindowsXPRoyale"><summary>
            The Windows XP royale color scheme.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType.WindowsXPSilver"><summary>
            The Windows XP silver color scheme.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType.VisualStudio2005"><summary>
            The Visual Studio 2005 color scheme.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType.Office2007Blue"><summary>
            The Office 2007 blue color scheme.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType.Office2007Silver"><summary>
            The Office 2007 silver color scheme.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType.Office2007Black"><summary>
            The Office 2007 black color scheme.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType.MetroLight"><summary>
            The Metro Light color scheme.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.ColorListBox"><summary>
            Provides a <see cref="T:System.Windows.Forms.ListBox" /> that shows <see cref="T:System.Drawing.Color" /> objects.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ColorListBox.#ctor"><summary>
            Initializes a new instance of the <c>ColorListBox</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ColorListBox.InitializeColors(System.Drawing.Color[])"><summary>
            Initializes the list using the specified array of <see cref="T:System.Drawing.Color" /> objects.
            </summary><param name="colors">An array of <see cref="T:System.Drawing.Color" /> objects with which to initialize the list.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ColorListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)"><summary>
            Occurs when an item needs to be drawn.
            </summary><param name="e">A <c>DrawItemEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ColorListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)"><summary>
            Occurs when an item needs to be measured.
            </summary><param name="e">A <c>DrawItemEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ColorListBox.WndProc(System.Windows.Forms.Message@)"><summary>
            Occurs when a message is sent to the control.
            </summary><param name="m">Information about the message.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ColorListBox.ColorSet"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.ColorListBoxColorSet" /> that indicates the color set that is loaded.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.ColorListBoxColorSet" /> that indicates the color set that is loaded.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ColorListBox.SelectedColor"><summary>
            Gets or sets the selected color in the list.
            </summary><value>The selected <see cref="T:System.Drawing.Color" /> in the list.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.ColorListBoxColorSet"><summary>
            Specifies a pre-defined color set for a <see cref="T:ActiproSoftware.UI.WinForms.Controls.ColorListBox" /> control.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.ColorListBoxColorSet.SystemColors"><summary>
            The system colors.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.ColorListBoxColorSet.WebColors"><summary>
            The web colors.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.ColorListBoxColorSet.Custom"><summary>
            Custom colors.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.ColorPalettePicker"><summary>
            Represents a control for selecting a <see cref="T:System.Drawing.Color" /> from a palette.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ColorPalettePicker.#ctor"><summary>
            Initializes a new instance of the <c>ColorPalettePicker</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ColorPalettePicker.ArrangeOverride(System.Drawing.Size)"><summary>
            Positions child elements and determines an arrange size.
            </summary><param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param><returns>The actual size used.</returns><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Arrange(System.Drawing.Rectangle)" /> on each visible child element and position each child element.
            It is required that a parent element calls <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Arrange(System.Drawing.Rectangle)" /> on each child or they won't be rendered.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ColorPalettePicker.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.UI.WinForms.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ColorPalettePicker.InitializeColors(System.Drawing.Color[])"><summary>
            Initializes the list using the specified array of <see cref="T:System.Drawing.Color" /> objects.
            </summary><param name="colors">An array of <see cref="T:System.Drawing.Color" /> objects with which to initialize the list.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ColorPalettePicker.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the size in layout required for child elements and determines a size for the element itself. 
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that this element can give to child elements.
            Infinity can be specified as a value to indicate that the element will size to whatever content is available.
            </param><returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ColorPalettePicker.OnSelectedColorChanged(System.EventArgs)"><summary>
            Raises the <c>SelectedColorChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ColorPalettePicker.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)"><summary>
            Processes a command key.
            </summary><param name="m">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</param><param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</param><returns><c>true</c> if the key was processed by the control; otherwise, <c>false</c>.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ColorPalettePicker.DefaultSize"><summary>
            Gets the default size of the control.
            </summary><value>The default <see cref="T:System.Drawing.Size" /> of the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ColorPalettePicker.SelectedColor"><summary>
            Gets or sets the selected color in the list.
            </summary><value>The selected <see cref="T:System.Drawing.Color" /> in the list.</value></member><member name="E:ActiproSoftware.UI.WinForms.Controls.ColorPalettePicker.SelectedColorChanged"><summary>
            Occurs after the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.ColorPalettePicker.SelectedColor" /> property changes.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata><remarks>
            Use this event to perform any processing that should occur after the selection changes.
            </remarks></member><member name="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform"><summary>
            Represents a transform.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.GeneralTransform.#ctor(System.Drawing.Point)"><summary>
            Initializes an instance of the <c>GeneralTransform</c> class.
            </summary><param name="translation">The translation amount.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.GeneralTransform.Transform(System.Drawing.Point)"><summary>
            Transforms the specified <see cref="T:System.Drawing.Point" />.
            </summary><param name="pt">The <see cref="T:System.Drawing.Point" /> to transform.</param><returns>The transformed <see cref="T:System.Drawing.Point" />.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.GeneralTransform.TransformBounds(System.Drawing.Rectangle)"><summary>
            Transforms the specified <see cref="T:System.Drawing.Rectangle" />.
            </summary><param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> to transform.</param><returns>The transformed <see cref="T:System.Drawing.Rectangle" />.</returns></member><member name="T:ActiproSoftware.UI.WinForms.Controls.HitTestParameters"><summary>
            Represents the base class for hit test parameters.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.HitTestParameters.#ctor"><summary>
            Initializes a new instance of the <c>HitTestParameters</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.HitTestParameters.#ctor(ActiproSoftware.UI.WinForms.Controls.HitTestParameters)"><summary>
            Initializes a new instance of the <c>HitTestParameters</c> class by copying values from an existing
            instance of <c>HitTestParameters</c>.
            </summary><param name="copyFrom">The instance whose values will be copied to initialize the new instance.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.HitTestParameters.Clone"><summary>
            Creates a new <c>HitTestParameters</c> instance that is a copy of the current instance.
            </summary><returns>A new instance of <c>HitTestParameters</c>.</returns></member><member name="T:ActiproSoftware.UI.WinForms.Controls.HitTestResult"><summary>
            Represents base class for the result of a hit test operation.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.HitTestResult.#ctor(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Initializes a new instance of the <c>HitTestResult</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> that was hit.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.HitTestResult.Element"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> that was hit.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> that was hit.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.IImageListProvider"><summary>
            Provides the base requirements for an object that can return an <see cref="T:System.Windows.Forms.ImageList" /> for an object.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IImageListProvider.GetImageList(System.Object,System.Object)"><summary>
            Returns an <c>ImageList</c> for the specified element and context.
            </summary><param name="requestor">The object that is requesting the <c>ImageList</c>.</param><param name="context">An object that provides context information.</param><returns>The <c>ImageList</c> that should be used.</returns></member><member name="T:ActiproSoftware.UI.WinForms.Controls.IInputElement"><summary>
            Represents a base requirements for an element that can receive input.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IInputElement.CaptureMouse"><summary>
            Attaches the mouse capture to the component.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IInputElement.RaiseClickEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>Click</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>Click</c> event.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IInputElement.RaiseDoubleClickEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>DoubleClick</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>DoubleClick</c> event.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IInputElement.RaiseMouseDownEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseDown</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseDown</c> event.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IInputElement.RaiseMouseEnterEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseEnter</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseEnter</c> event.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IInputElement.RaiseMouseHoverEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseHover</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseHover</c> event.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IInputElement.RaiseMouseLeaveEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseLeave</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseLeave</c> event.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IInputElement.RaiseMouseMoveEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseMove</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseMove</c> event.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IInputElement.RaiseMouseUpEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseUp</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseUp</c> event.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IInputElement.RaiseMouseWheelEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseWheel</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseWheel</c> event.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IInputElement.ReleaseMouseCapture"><summary>
            Releases the mouse capture, if any.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IInputElement.IsMouseCaptured"><summary>
            Gets whether the element is currently capturing the mouse.
            </summary><value><c>true</c> if the element is currently capturing the mouse; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IInputElement.IsMouseDirectlyOver"><summary>
            Gets whether the mouse is directly over the element.
            </summary><value><c>true</c> if the mouse is directly over the element; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.ImageIndexAttribute"><summary>
            Specifies the priority that a property has when performing self-describing reflection.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ImageIndexAttribute.#ctor"><summary>
            Initializes a new instance of the <c>ImageIndexAttribute</c> class.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ImageIndexAttribute.#ctor(System.Object)"><summary>
            Initializes a new instance of the <c>ImageIndexAttribute</c> class.
            </summary><param name="context">An object that provides context information.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ImageIndexAttribute.Context"><summary>
            Gets or sets the object that provides context information.
            </summary><value>
            The object that provides context information.
            </value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.InvalidationLevels"><summary>
            Specifies the levels of invalidation to be performed on a <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.InvalidationLevels.All"><summary>
            Invalidates the entire control hierarchy.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.InvalidationLevels.TopLevelParent"><summary>
            Invalidates up to the top-level parent.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.InvalidationLevels.Parent"><summary>
            Invalidates the parent.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.InvalidationLevels.Element"><summary>
            Invalidates the element.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.InvalidationLevels.Children"><summary>
            Invalidates the children.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.InvalidationLevels.ElementAndChildren"><summary>
            Invalidates the element and its children.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.InvalidationTypes"><summary>
            Specifies the types of invalidation that can be performed on a <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.InvalidationTypes.Arrange"><summary>
            Invalidates the arrange state for the element. 
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.InvalidationTypes.Measure"><summary>
            Invalidates the measure state for the element. 
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.InvalidationTypes.Layout"><summary>
            Requests that the layout is updated after the arrange and measure states are invalidated.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.InvalidationTypes.Paint"><summary>
            Requests that the element is repainted after the states are invalidated.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.InvalidationTypes.All"><summary>
            Requests that all states are invalidated, a layout is performed, and repainting occurs.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.IScrollBarRenderer"><summary>
            Provides the base requirements for a <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> control renderer.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IScrollBarRenderer.DrawScrollBarBackground(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Controls.ScrollBar)"><summary>
            Draws the background of a <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> control.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="scrollBar">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> being painted.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IScrollBarRenderer.DrawScrollBarButton(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Controls.ScrollBarButton)"><summary>
            Draws a <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton" />.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="button">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton" /> that is being painted.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IScrollBarRenderer.DrawScrollBarThumb(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb)"><summary>
            Draws a <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb" />.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="thumb">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb" /> that is being painted.</param></member><member name="T:ActiproSoftware.UI.WinForms.Controls.IUIControl"><summary>
            Represents base requirements for a custom user interface control.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIControl.AddPendingGraphicsInversion(System.Drawing.Rectangle)"><summary>
            Inverts the canvas using XOR at the end of the current or next drawing operation.
            </summary><param name="bounds">A <c>Rectangle</c> specifying the bounds to invert.</param><returns><c>true</c> if the inversion operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIControl.AddPendingScrollOperation(System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="orientation">The direction to scroll.</param><param name="amount">The amount to scroll.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIControl.AddPendingScrollOperation(System.Drawing.Rectangle,System.Int32,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="xAmount">The amount to scroll horizontally.</param><param name="yAmount">The amount to scroll vertically.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIControl.AddToInvalidatedRegion(System.Drawing.Rectangle)"><summary>
            Adds a <c>Rectangle</c> to the invalidated region.
            </summary><param name="rect">The <c>Rectangle</c> to add to the invalidated region.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIControl.ResetDoubleBufferCanvas(System.Boolean)"><summary>
            Resets the double-buffer canvas.
            </summary><param name="recurse">Whether to recurse down into the child control tree.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIControl.Capture"><summary>
            Gets or sets a value indicating whether the control has captured the mouse.
            </summary><value><c>true</c> if the control has captured the mouse; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIControl.IsPaintValid"><summary>
            Gets whether the control has rendered itself and doesn't have any invalidated paint regions.
            </summary><value><c>true</c> if the control has rendered itself and doesn't have any invalidated paint regions; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIControl.MouseCaptureElement"><summary>
            Indicates the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> for which mouse capture is being performed.
            </summary><value>
            The <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> for which mouse capture is being performed.
            </value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.IUIElement"><summary>
            Represents a base requirements for an element that has a user interface.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Arrange(System.Drawing.Rectangle)"><summary>
            Positions child elements and determines a size for the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.
            </summary><param name="newBounds">The final bounds of the element.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.ContainsLocation(System.Drawing.Point)"><summary>
            Used with hit-testing, returning whether this element's bounds contains the specified location.
            </summary><param name="location">The <see cref="T:System.Drawing.Point" /> location to examine.</param><returns><c>true</c> if this element's bounds contains the specified location; otherwise, <c>false</c>.
            </returns><remarks>
            Override this method to prevent certain portions of the element's bounds from being included in hit-testing.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.CreateGraphics"><summary>
            Creates the <see cref="T:System.Drawing.Graphics" /> object for the use with the object.
            </summary><returns>The <see cref="T:System.Drawing.Graphics" /> object for the object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.GetDrawState"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> for the element.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> for the element.</value><remarks>The default implementation of this method returns <c>UIElementDrawState.None</c>.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.HitTest(ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters)"><summary>
            Hit tests to find the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> that contains the specified coordinates.
            </summary><param name="hitTestParams">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters" /> containing hit test parameters.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestResult" /> containing the hit test result.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.HitTest(ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters,System.Func{ActiproSoftware.UI.WinForms.Controls.IUIElement,ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters,System.Boolean})"><summary>
            Hit tests to find the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> that contains the specified coordinates.
            </summary><param name="hitTestParams">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters" /> containing hit test parameters.</param><param name="filter">Optionally defines a filter which must return <c>true</c> for an element to match the hit test.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestResult" /> containing the hit test result.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.HitTestRecursive(ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters)"><summary>
            Recursively hit tests to find the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> that contains the specified coordinates.
            </summary><param name="hitTestParams">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters" /> containing hit test parameters.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestResult" /> containing the hit test result.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.HitTestRecursive(ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters,System.Func{ActiproSoftware.UI.WinForms.Controls.IUIElement,ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters,System.Boolean})"><summary>
            Recursively hit tests to find the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> that contains the specified coordinates.
            </summary><param name="hitTestParams">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters" /> containing hit test parameters.</param><param name="filter">Optionally defines a filter which must return <c>true</c> for an element to match the hit test.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestResult" /> containing the hit test result.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Invalidate(ActiproSoftware.UI.WinForms.Controls.InvalidationLevels,ActiproSoftware.UI.WinForms.Controls.InvalidationTypes)"><summary>
            Invalidates the specified states for the element or its related elements.
            </summary><param name="levels">The hierarchy levels at which to invalidate.</param><param name="types">The types of invalidation to perform.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.InvalidateArrange"><summary>
            Invalidates the layout of the element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.InvalidateMeasure"><summary>
            Invalidates the measurement of the element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the element and updates the <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.DesiredSize" /> property.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><remarks>
            The <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> method should be called by parents on their children.
            Internally, <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> calls the <c>MeasureCore</c> override on the same object,
            giving it opportunity to compute its <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.DesiredSize" />. 
            This method will return immediately if the child's measurements are valid, previously measured and 
            <c>availableSize</c> is the same as cached. 
            This method also resets the <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.IsMeasureValid" /> bit on the child. 
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.NotifyChildDesiredSizeChanged"><summary>
            Notifies that a child object's desired size has changed.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.NotifyMouseLeaveEvent"><summary>
            Notifies the object of a a mouse leave event.
            </summary><remarks>This enables the object to cancel hot state tracking.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Render(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.TransformToAncestor(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Returns a <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to an ancestor element.
            </summary><param name="ancestor">The ancestor <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to a ancestor element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.TransformToDescendant(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Returns a <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to a descendant element.
            </summary><param name="descendant">The descendant <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to a descendant element.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.ActualHeight"><summary>
            Gets the actual height of the element.
            </summary><value>The actual height of the element.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.ActualWidth"><summary>
            Gets the actual width of the element.
            </summary><value>The actual width of the element.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.Bounds"><summary>
            Gets a <see cref="T:System.Drawing.Rectangle" /> specifying the bounds of the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the bounds of the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.ClipBounds"><summary>
            Gets a <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.DesiredSize"><summary>
            Gets the desired size of the element as computed by <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.
            </summary><value>The desired size of the element as computed by <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.</value><remarks>
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.IsMeasureValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.IsArrangeValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.DesiredSize" /> property and position of child elements is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.DesiredSize" /> property and position of child elements is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.InvalidateArrange" />. 
            <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.IsArrangeValid" /> and <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.IsMeasureValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.DesiredSize" /> property is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.DesiredSize" /> property is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.InvalidateMeasure" />. 
            <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.IsArrangeValid" /> and <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.IsRightToLeft"><summary>
            Gets whether the element is using a right-to-left layout.
            </summary><value><c>true</c> if the element is using a right-to-left layout; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.Size"><summary>
            Gets the actual size of the element.
            </summary><value>The actual size of the element.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.Visibility"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Visibility" /> of the element.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Visibility" /> of the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.VisualOffset"><summary>
            Gets the X/Y offset of the element relative to its parent element's coordinate system.
            </summary><value>The X/Y offset of the element relative to its parent element's coordinate system.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.IUIElement.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="T:ActiproSoftware.UI.WinForms.Controls.IUIRenderer"><summary>
            Provides the base requirements for a renderer class that renders an Actipro control.
            </summary></member><member name="E:ActiproSoftware.UI.WinForms.Controls.IUIRenderer.PropertyChanged"><summary>
            Occurs after a property is changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.Controls.IUIRendererFactory"><summary>
            Provides the base requirements for a factory class that creates renderers for an Actipro control.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.IUIRendererFactory.CreateRenderer"><summary>
            Creates a renderer.
            </summary><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIRenderer" /> that was created.</returns></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MnemonicHelper"><summary>
            A helper class for working with mnemonic keys used for control labels.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MnemonicHelper.GetMnemonic(System.String)"><summary>
            Gets the mnemonic for the text.
            </summary><param name="text">The text.</param><returns>The upper-case mnemonic character for the text or <see cref="F:ActiproSoftware.UI.WinForms.Controls.MnemonicHelper.NullChar" /> if a mnemonic was not found.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MnemonicHelper.RemoveMnemonics(System.String)"><summary>
            Removes mnemonic prefix characters from text.
            </summary><param name="text">The text.</param><returns>The original text with all mnemonic prefix characters removed and escaped prefix characters replaced with literal equivalent.</returns></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MnemonicHelper.MnemonicPrefix"><summary>
            The prefix character which indicates the next character is a mnemonic.
            </summary><remarks>The prefix can be escaped by repeating the character twice.</remarks></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MnemonicHelper.NullChar"><summary>
            A null character.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.OwnerDrawContextMenu"><summary>
            Represents an owner-draw <c>ContextMenu</c> with the new Windows menu appearance.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawContextMenu.#ctor"><summary>
            Initializes a new instance of the <c>OwnerDrawContextMenu</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawContextMenu.#ctor(System.Windows.Forms.ImageList)"><summary>
            Initializes a new instance of the <c>OwnerDrawContextMenu</c> class. 
            </summary><param name="imageList">The <c>ImageList</c> to use for menu item images.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.OwnerDrawContextMenu.ColorScheme"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> to use for drawing menu items.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> to use for drawing menu items.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.OwnerDrawContextMenu.ImageList"><summary>
            Gets or sets the <c>ImageList</c> used for item images. 
            </summary><value>
            An <c>ImageList</c>.  The default value is a null reference. 
            </value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMainMenu"><summary>
            Represents an owner-draw <c>MainMenu</c> with the new Windows menu appearance.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMainMenu.#ctor"><summary>
            Initializes a new instance of the <c>OwnerDrawMainMenu</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMainMenu.#ctor(System.Windows.Forms.ImageList)"><summary>
            Initializes a new instance of the <c>OwnerDrawMainMenu</c> class. 
            </summary><param name="imageList">The <c>ImageList</c> to use for menu item images.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMainMenu.ColorScheme"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> to use for drawing menu items.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> to use for drawing menu items.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMainMenu.ImageList"><summary>
            Gets or sets the <c>ImageList</c> used for item images. 
            </summary><value>
            An <c>ImageList</c>.  The default value is a null reference. 
            </value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem"><summary>
            Represents an owner-draw <c>MenuItem</c> with the new Windows menu appearance.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.#ctor"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary><param name="text">The text displayed on the item.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.#ctor(System.String,System.Int32)"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary><param name="text">The text displayed on the item.</param><param name="imageIndex">The index of an image within the parent <see cref="P:ActiproSoftware.UI.WinForms.Controls.OwnerDrawContextMenu.ImageList" />.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.#ctor(System.String,System.Windows.Forms.Shortcut)"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary><param name="text">The text displayed on the item.</param><param name="shortcut">A <c>Shortcut</c> for the menu item.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.#ctor(System.String,System.EventHandler)"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary><param name="text">The text displayed on the item.</param><param name="onClick">The <c>EventHandler</c> that handles the <c>Click</c> event for the menu item.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.#ctor(System.String,System.Drawing.Image,System.EventHandler)"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary><param name="text">The text displayed on the item.</param><param name="image">The image to display on the menu item.</param><param name="onClick">The <c>EventHandler</c> that handles the <c>Click</c> event for the menu item.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.#ctor(System.String,System.Boolean,System.EventHandler,System.Windows.Forms.Shortcut,System.Object)"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary><param name="text">The text displayed on the item.</param><param name="isChecked">Whether the item is checked.</param><param name="onClick">The <c>EventHandler</c> that handles the <c>Click</c> event for the menu item.</param><param name="shortcut">A <c>Shortcut</c> for the menu item.</param><param name="tag">An object that provides context information.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.#ctor(System.String,System.Int32,System.EventHandler,System.Windows.Forms.Shortcut,System.Object)"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary><param name="text">The text displayed on the item.</param><param name="imageIndex">The index of an image within the parent <see cref="P:ActiproSoftware.UI.WinForms.Controls.OwnerDrawContextMenu.ImageList" />.</param><param name="onClick">The <c>EventHandler</c> that handles the <c>Click</c> event for the menu item.</param><param name="shortcut">A <c>Shortcut</c> for the menu item.</param><param name="tag">An object that provides context information.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)"><summary>
            Occurs when the <c>OwnerDraw</c> property of a menu item is set to true and a request is made to draw the menu item.
            </summary><param name="e">Event arguments</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)"><summary>
            Occurs when the menu needs to know the size of a menu item before drawing it.
            </summary><param name="e">Event arguments</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.CanAutoScaleImage"><summary>
            Gets or sets whether a drawn image can auto-scale based on DPI.
            </summary><value><c>true</c> if a drawn image can auto-scale based on DPI; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.Image"><summary>
            Gets or sets the image to display on the menu item. 
            </summary><value>
            The image to display on the menu item.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.ImageIndex"><summary>
            Gets or sets the index of an image within the parent's <c>ImageList</c> to be displayed. 
            </summary><value>
            The index of an image within the <c>ImageList</c>. 
            </value><remarks>
            This property should be set to <c>-1</c> if no image is to be displayed on the item. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.OwnerDrawMenuItem.ShortcutText"><summary>
            Gets the proper display text of a shortcut.
            </summary><value>The proper display text of a shortcut.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters"><summary>
            Represents a class for hit test parameters that use a <see cref="T:System.Drawing.Point" />.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters.#ctor(System.Drawing.Point)"><summary>
            Initializes a new instance of the <c>PointHitTestParameters</c> class. 
            </summary><param name="point">The <see cref="T:System.Drawing.Point" /> to test.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters.#ctor(ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters)"><summary>
            Initializes a new instance of the <c>PointHitTestParameters</c> class by copying values from an existing
            instance of <c>PointHitTestParameters</c>.
            </summary><param name="copyFrom">The instance whose values will be copied to initialize the new instance.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters.Clone"><summary>
            Creates a new <c>PointHitTestParameters</c> instance that is a copy of the current instance.
            </summary><returns>A new instance of <c>PointHitTestParameters</c>.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters.Point"><summary>
            Gets the <see cref="T:System.Drawing.Point" /> to test.
            </summary><value>The <see cref="T:System.Drawing.Point" /> to test.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestResult"><summary>
            Represents a class for a hit test result from a hit test that uses a <see cref="T:System.Drawing.Point" />.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.PointHitTestResult.#ctor(ActiproSoftware.UI.WinForms.Controls.IUIElement,System.Drawing.Point)"><summary>
            Initializes a new instance of the <c>PointHitTestResult</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> that was hit.</param><param name="point">The <see cref="T:System.Drawing.Point" /> that was hit.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.PointHitTestResult.Point"><summary>
            Gets the <see cref="T:System.Drawing.Point" /> that was hit.
            </summary><value>The <see cref="T:System.Drawing.Point" /> that was hit.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar"><summary>
            Represents a scrollbar control.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.#ctor"><summary>
            Initializes a new instance of the <c>ScrollBar</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.ArrangeOverride(System.Drawing.Size)"><summary>
            Positions child elements and determines an arrange size.
            </summary><param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param><returns>The actual size used.</returns><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Arrange(System.Drawing.Rectangle)" /> on each visible child element and position each child element.
            It is required that a parent element calls <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Arrange(System.Drawing.Rectangle)" /> on each child or they won't be rendered.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.UI.WinForms.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.GetSidesFromOrientation(System.Windows.Forms.Orientation)"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Sides" /> value that corresponds to the specified <see cref="T:System.Windows.Forms.Orientation" />.
            </summary><param name="orientation">The <see cref="T:System.Windows.Forms.Orientation" /> to examine.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Sides" /> value that corresponds to the specified <see cref="T:System.Windows.Forms.Orientation" />.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the size in layout required for child elements and determines a size for the element itself. 
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that this element can give to child elements.
            Infinity can be specified as a value to indicate that the element will size to whatever content is available.
            </param><returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.OnCommand(ActiproSoftware.UI.WinForms.Controls.Commands.CommandEventArgs)"><summary>
            Raises the <c>Command</c> event.
            </summary><param name="e">A <c>CommandEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.OnEnabledChanged(System.EventArgs)"><summary>
            Raises the <c>EnabledChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseDown" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseUp" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.OnScrolled(System.Windows.Forms.ScrollEventArgs)"><summary>
            Raises the <c>Scrolled</c> event.
            </summary><param name="e">A <c>ScrollEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.OnThumbScrolled(System.EventArgs)"><summary>
            Raises the <c>ThumbScrolled</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.OnThumbScrolling(System.EventArgs)"><summary>
            Raises the <c>ThumbScrolling</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.OnValueChanged(System.EventArgs)"><summary>
            Raises the <c>ValueChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.RaiseCommand(ActiproSoftware.UI.WinForms.Controls.Commands.Command)"><summary>
            Raises the specified <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" />.
            </summary><param name="command">The <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" /> to raise.</param><returns><c>true</c> if the <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" /> was handled; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBar.SetData(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)"><summary>
            Sets all the data in one consolidated method.
            </summary><param name="minimum">The minimum.</param><param name="maximum">The maximum.</param><param name="smallChange">The small change.</param><param name="largeChange">The large change.</param><param name="enabled">Whether the control is enabled.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.BarrelBeforeThumbBounds"><summary>
            Gets the bounds of the barrel before the thumb.
            </summary><value>A <c>Rectangle</c> specifying the bounds of the barrel before the thumb.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.BarrelAfterThumbBounds"><summary>
            Gets the bounds of the barrel after the thumb.
            </summary><value>A <c>Rectangle</c> specifying the bounds of the barrel after the thumb.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.CommandLinks"><summary>
            Gets a <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection" /> containing the command links associated with the object.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection" /> containing the command links associated with the object.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.CurrentScrollCommand"><summary>
            Gets the current scroll <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" /> that is executing.
            </summary><value>The current scroll <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" /> that is executing.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.DecreaseLargeCommand"><summary>
            Gets the <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" /> that is used for a large decrease button click.
            </summary><value>The <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" /> that is used for a large decrease button click.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.DecreaseSmallCommand"><summary>
            Gets the <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" /> that is used for a small decrease button click.
            </summary><value>The <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" /> that is used for a small decrease button click.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.DefaultSize"><summary>
            Gets the default size of the control.
            </summary><value>The default <see cref="T:System.Drawing.Size" /> of the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.ForwardCommandsTo"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.ICommandTarget" /> to forward commands to.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.ICommandTarget" /> to forward commands to.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.IncreaseLargeCommand"><summary>
            Gets the <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" /> that is used for a large increase button click.
            </summary><value>The <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" /> that is used for a large increase button click.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.IncreaseSmallCommand"><summary>
            Gets the <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" /> that is used for a small increase button click.
            </summary><value>The <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" /> that is used for a small increase button click.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.LargeChange"><summary>
            Gets or sets the value to be added to or subtracted from to the <see cref="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Value" /> property when the scroll box is moved a large distance.
            </summary><value>A numeric value. The default value is <c>10</c>.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Maximum"><summary>
            Gets or sets the upper limit of values of the scrollable range.
            </summary><value>A numeric value. The default value is <c>100</c>.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Minimum"><summary>
            Gets or sets the lower limit of values of the scrollable range.
            </summary><value>A numeric value. The default value is <c>0</c>.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Orientation"><summary>
            Gets or sets the orientation of the scrollbar.
            </summary><value>A <see cref="T:System.Windows.Forms.Orientation" /> that specifies the orientation.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Renderer"><summary>
            Gets or sets the control-specific <see cref="T:ActiproSoftware.UI.WinForms.Controls.IScrollBarRenderer" /> used to render the control.
            </summary><value>The control-specific <see cref="T:ActiproSoftware.UI.WinForms.Controls.IScrollBarRenderer" /> used to render the control.</value><remarks>
            If this value is <see langword="null" />, then the global renderer will be used instead.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.RendererResolved"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IScrollBarRenderer" /> used to render the control.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.IScrollBarRenderer" /> used to render the control.</value><remarks>
            This property will return a global renderer if there is no control instance renderer override.
            The registered renderer type with the <c>UIRendererManager</c> for this property is <see cref="T:ActiproSoftware.UI.WinForms.Controls.IScrollBarRenderer" />.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.SmallChange"><summary>
            Gets or sets the value to be added to or subtracted from to the <see cref="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Value" /> property when the scroll box is moved a small distance.
            </summary><value>A numeric value. The default value is <c>1</c>.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Value"><summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary><value>A numeric value that is within the <see cref="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Minimum" /> and <see cref="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Maximum" /> range. The default value is <c>0</c>.</value></member><member name="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command"><summary>
            Occurs when a <see cref="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Command" /> is executed.
            </summary><eventdata>
            The event handler receives an argument of type <c>CommandEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Scrolled"><summary>
            Occurs after a scroll event occurs.
            </summary><eventdata>
            The event handler receives an argument of type <c>ScrollEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.ThumbScrolled"><summary>
            Occurs after thumb scrolling ends.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.ThumbScrolling"><summary>
            Occurs before thumb scrolling starts.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Controls.ScrollBar.ValueChanged"><summary>
            Occurs after the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.ScrollBar.Value" /> property changes.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton"><summary>
            Represents a button for a <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> control.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton.#ctor(ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink)"><summary>
            Initializes a new instance of the <c>ScrollBarButton</c> class. 
            </summary><param name="commandLink">The <see cref="P:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton.CommandLink" /> for the button.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton.GetDrawState"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> for the element.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> for the element.</value><remarks>The default implementation of this method returns <c>UIElementDrawState.None</c>.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the size in layout required for child elements and determines a size for the element itself. 
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that this element can give to child elements.
            Infinity can be specified as a value to indicate that the element will size to whatever content is available.
            </param><returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseDown" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseUp" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton.CaptureMouseWhenPressed"><summary>
            Indicates whether to automatically capture the mouse when the element is pressed.
            </summary><value><c>true</c> if the mouse should automatically be captured when the element is pressed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton.CommandLink"><summary>
            Gets the <see cref="P:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton.CommandLink" /> for the button.
            </summary><value>The <see cref="P:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton.CommandLink" /> for the button.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton.InvalidateOnMouseEvents"><summary>
            Gets whether to invalidate the element when mouse events occur.
            </summary><value><c>true</c> if the element should be invalidated when mouse events occur.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton.ScrollBar"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> that contains the element.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> that contains the element.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarRenderer"><summary>
            Provides a base renderer for the <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> control.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarRenderer.#ctor"><summary>
            Initializes a new instance of the <c>ScrollBarRenderer</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarRenderer.DrawScrollBarBackground(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Controls.ScrollBar)"><summary>
            Draws the background of a <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> control.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="scrollBar">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> being painted.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarRenderer.DrawScrollBarButton(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Controls.ScrollBarButton)"><summary>
            Draws a <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton" />.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="button">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton" /> that is being painted.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarRenderer.DrawScrollBarThumb(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb)"><summary>
            Draws a <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb" />.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="thumb">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb" /> that is being painted.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarRenderer.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarRenderer.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarRenderer.OnPropertyChanged(System.EventArgs)"><summary>
            Raises the <c>PropertyChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="E:ActiproSoftware.UI.WinForms.Controls.ScrollBarRenderer.PropertyChanged"><summary>
            Occurs after a property is changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb"><summary>
            Represents a thumb for a <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> control.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb.#ctor"><summary>
            Initializes a new instance of the <c>ScrollBarThumb</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb.GetDrawState"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> for the element.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> for the element.</value><remarks>The default implementation of this method returns <c>UIElementDrawState.None</c>.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the size in layout required for child elements and determines a size for the element itself. 
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that this element can give to child elements.
            Infinity can be specified as a value to indicate that the element will size to whatever content is available.
            </param><returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb.OnMouseDown(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseDown" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb.OnMouseMove(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseMove" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseUp" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb.CaptureMouseWhenPressed"><summary>
            Indicates whether to automatically capture the mouse when the element is pressed.
            </summary><value><c>true</c> if the mouse should automatically be captured when the element is pressed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb.InvalidateOnMouseEvents"><summary>
            Gets whether to invalidate the element when mouse events occur.
            </summary><value><c>true</c> if the element should be invalidated when mouse events occur.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb.ScrollBar"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> that contains the element.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> that contains the element.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.StandardColorPicker"><summary>
            Provides a standard color picker that can be used in a drop-down.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.StandardColorPicker.#ctor"><summary>
            Initializes a new instance of the <c>StandardColorPicker</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.StandardColorPicker.OnSelectedColorChanged(System.EventArgs)"><summary>
            Raises the <c>SelectedColorChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.StandardColorPicker.DefaultSize"><summary>
            Gets the default size of the control.
            </summary><value>The default <see cref="T:System.Drawing.Size" /> of the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.StandardColorPicker.SelectedColor"><summary>
            Gets the selected color in the popup.
            </summary><value>The selected <see cref="T:System.Drawing.Color" /> in the popup.</value></member><member name="E:ActiproSoftware.UI.WinForms.Controls.StandardColorPicker.SelectedColorChanged"><summary>
            Occurs after the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.StandardColorPicker.SelectedColor" /> property changes.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata><remarks>
            Use this event to perform any processing that should occur after the selection changes.
            </remarks></member><member name="T:ActiproSoftware.UI.WinForms.Controls.StandardColorPickerPopup"><summary>
            Provides a standard color picker popup.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.StandardColorPickerPopup.#ctor"><summary>
            Initializes a new instance of the <c>StandardColorPickerPopup</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.StandardColorPickerPopup.OnSelectedColorChanged(System.EventArgs)"><summary>
            Raises the <c>SelectedColorChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.StandardColorPickerPopup.SelectedColor"><summary>
            Gets the selected color in the popup.
            </summary><value>The selected <see cref="T:System.Drawing.Color" /> in the popup.</value></member><member name="E:ActiproSoftware.UI.WinForms.Controls.StandardColorPickerPopup.SelectedColorChanged"><summary>
            Occurs after the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.StandardColorPickerPopup.SelectedColor" /> property changes.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata><remarks>
            Use this event to perform any processing that should occur after the selection changes.
            </remarks></member><member name="T:ActiproSoftware.UI.WinForms.Controls.UIElementCollection"><summary>
            Encapsulates a collection of <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> items.
            </summary><remarks>
            This class is a zero-based indexed collection. 
            </remarks><seealso cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIElementCollection.#ctor(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Initializes a new instance of the <c>UIElementCollection</c> class. 
            </summary><param name="owner">The owner of the collection.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIElementCollection.Contains(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Determines whether the specified element is in the collection. 
            </summary><param name="value">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> to look for.</param><returns><c>true</c> if the collection contains the element; otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIElementCollection.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIElementCollection.IndexOf(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Returns the index of the specified element in the collection.
            </summary><param name="value">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> to look for.</param><returns>
            If found, the index where the element is in the collection; otherwise, <c>-1</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIElementCollection.OnObjectAdded(System.Int32,ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Performs additional custom processes after an object is added to the collection.
            </summary><param name="index">The zero-based index at which the object was inserted.</param><param name="value">The object that was inserted.</param><remarks>
            The default implementation of this method is intended to be overridden by a derived class to 
            perform some action after the specified object is added.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIElementCollection.OnObjectRemoved(System.Int32,ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Performs additional custom processes after an object is removed from the collection.
            </summary><param name="index">The zero-based index from which the object was removed.</param><param name="value">The object that was removed.</param><remarks>
            The default implementation of this method is intended to be overridden by a derived class to 
            perform some action after the specified object is removed.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIElementCollection.OnObjectRemoving(System.Int32,ActiproSoftware.UI.WinForms.ILogicalTreeNode)"><summary>
            Performs additional custom processes before an object is removed from the collection.
            </summary><param name="index">The zero-based index from which the object was removed.</param><param name="value">The object that was removed.</param><remarks>
            The default implementation of this method is intended to be overridden by a derived class to 
            perform some action before the specified object is removed.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.UIElementCollection.PluralElementName"><summary>
            Gets the short, plural name of the type of child elements in the collection.
            </summary><value>The short, plural name of the type of child elements in the collection.</value><remarks>This value is used within the design-time environment when indicating the count of elements in the collection.</remarks><seealso cref="P:ActiproSoftware.UI.WinForms.Controls.UIElementCollection.SingularElementName" /></member><member name="P:ActiproSoftware.UI.WinForms.Controls.UIElementCollection.SingularElementName"><summary>
            Gets the short, singular name of the type of child elements in the collection.
            </summary><value>The short, singular name of the type of child elements in the collection.</value><remarks>This value is used within the design-time environment when indicating the count of elements in the collection.</remarks><seealso cref="P:ActiproSoftware.UI.WinForms.Controls.UIElementCollection.PluralElementName" /></member><member name="T:ActiproSoftware.UI.WinForms.Controls.UIElementCollectionConverter"><summary>
            Provides a <c>TypeConverter</c> to convert <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementCollection" /> objects to and from other representations.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIElementCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)"><summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that provides a format context.</param><param name="destType">A <c>Type</c> that represents the type you want to convert to.</param><returns><c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIElementCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"><summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that provides a format context.</param><param name="culture">A <c>CultureInfo</c> object. If <see langword="null" /> is passed, the current culture is assumed. </param><param name="value">The <c>Object</c> to convert.</param><param name="destType">The <c>Type</c> to convert the value parameter to.</param><returns>An <c>Object</c> that represents the converted value.</returns></member><member name="T:ActiproSoftware.UI.WinForms.Controls.UIElementComponent"><summary>
            Represents a <see cref="T:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement" /> that implements <see cref="T:System.ComponentModel.IComponent" />.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState"><summary>
            Specifies the draw state of a <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState.None"><summary>
            The element is in its default state.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState.Hot"><summary>
            The mouse is over the element.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState.Pressed"><summary>
            The mouse is pressing the element.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState.Checked"><summary>
            The element is checked.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState.Selected"><summary>
            The element is selected.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState.Disabled"><summary>
            The element is disabled.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.UIRendererManager"><summary>
            Managers the renderers used to render Actipro control products and controls the global theme for those products.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.DecrementUsageCount(System.Type)"><summary>
            Flags that a renderer instance is no longer required for the specified renderer <see cref="T:System.Type" />.
            </summary><param name="rendererType">The <see cref="T:System.Type" /> of renderer that is no longer needed.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.GetRendererData(System.Type)"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.RendererData" /> for the specified renderer <see cref="T:System.Type" />, if there is data available.
            </summary><param name="rendererType">The <see cref="T:System.Type" /> of renderer to look for.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.RendererData" /> for the specified renderer <see cref="T:System.Type" />, if there is data available.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.IncrementUsageCount(System.Type,ActiproSoftware.UI.WinForms.Controls.IUIRendererFactory)"><summary>
            Flags that a new renderer instance is requested for the specified renderer <see cref="T:System.Type" />.
            </summary><param name="rendererType">The <see cref="T:System.Type" /> of renderer that is needed.</param><param name="rendererFactory">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIRendererFactory" /> that will be used to create renderers.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.RegisterRendererFactory(System.Type,ActiproSoftware.UI.WinForms.Controls.IUIRendererFactory,System.Boolean)"><summary>
            Flags that a new renderer instance is requested for the specified renderer <see cref="T:System.Type" />.
            </summary><param name="rendererType">The <see cref="T:System.Type" /> of renderer that is needed.</param><param name="rendererFactory">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIRendererFactory" /> that will be used to create renderers.</param><param name="overwrite">Whether to overwrite any existing record.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.ColorScheme"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> currently in use by the renderer manager.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorScheme" /> currently in use by the renderer manager.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.ColorSchemeType"><summary>
            Gets or sets a <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType" /> that indicates the color scheme type to use for the renderers.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Drawing.WindowsColorSchemeType" /> that indicates the color scheme type to use for the renderers.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.RendererData"><summary>
            Provides information about a <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIRendererManager" /> record.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.RendererData.AddRendererPropertyChangedListener(ActiproSoftware.UI.WinForms.IWeakEventListener)"><summary>
            Adds a listener to a weak <see cref="E:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.RendererData.RendererPropertyChanged" /> event.
            </summary><param name="listener">The listener to add.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.RendererData.RemoveRendererPropertyChangedListener(ActiproSoftware.UI.WinForms.IWeakEventListener)"><summary>
            Removes a listener from a weak <see cref="E:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.RendererData.RendererPropertyChanged" /> event.
            </summary><param name="listener">The listener to remove.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.RendererData.Renderer"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIRenderer" /> currently in use.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIRenderer" /> currently in use.</value></member><member name="E:ActiproSoftware.UI.WinForms.Controls.UIRendererManager.RendererData.RendererPropertyChanged"><summary>
            Occurs when a property on the renderer is changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Visibility"><summary>
            Specifies the display state of an object.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Visibility.Visible"><summary>
            Normally visible.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Visibility.Hidden"><summary>
            Occupies space in the layout, but is not visible (completely transparent).
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Visibility.Collapsed"><summary>
            Not visible and does not occupy any space in layout, as if it doesn't exist.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.WindowsXPScrollBarRenderer"><summary>
            Provides a renderer for the <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> control that has a Windows XP color scheme.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.WindowsXPScrollBarRenderer.#ctor"><summary>
            Initializes a new instance of the <c>WindowsXPScrollBarRenderer</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.WindowsXPScrollBarRenderer.DrawScrollBarBackground(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Controls.ScrollBar)"><summary>
            Draws the background of a <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> control.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="scrollBar">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBar" /> being painted.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.WindowsXPScrollBarRenderer.DrawScrollBarButton(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Controls.ScrollBarButton)"><summary>
            Draws a <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton" />.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="button">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarButton" /> that is being painted.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.WindowsXPScrollBarRenderer.DrawScrollBarThumb(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb)"><summary>
            Draws a <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb" />.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="thumb">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.ScrollBarThumb" /> that is being painted.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.WindowsXPScrollBarRenderer.UseThemes"><summary>
            Gets whether themes should be used when drawing the control.
            </summary><value><c>true</c> if themes should be used when drawing the control; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.FontStyles"><summary>
            Specifies the font styles.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.FontStyles.Normal"><summary>
            Normal style.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.FontStyles.Italic"><summary>
            Italic style.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.FontWeights"><summary>
            Specifies the font weights.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.FontWeights.Normal"><summary>
            Normal weight.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.FontWeights.Bold"><summary>
            Bold weight.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas"><summary>
            Provides the base requirements for an element that supports custom rendering of content.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas.CreateTextBatch"><summary>
            Creates an <see cref="T:System.IDisposable" /> object that contains a reference to a text renderer, which can be passed to the
            <see cref="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.RunTextFormatter(System.IDisposable)" /> to more efficiently process multiple similar text layouts in a batch.
            </summary><returns>An <see cref="T:System.IDisposable" /> object.  Once disposed, the batch is ended.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas.CreateTextLayout(System.String,System.Single,System.String,System.Single,System.Drawing.Color)"><summary>
            Creates an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> that can render text runs on a canvas.
            </summary><param name="text">The text string.</param><param name="maxWidth">The maximum width of the layout, which is used if word wrap is enabled.</param><param name="fontFamilyName">The default font family name.</param><param name="fontSize">The default font size.</param><param name="foreground">The default foreground.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> that was created.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas.CreateTextLayout(ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider,System.Single,System.String,System.Single,System.Drawing.Color,System.Collections.Generic.IEnumerable{ActiproSoftware.UI.WinForms.Controls.Rendering.ITextSpacer})"><summary>
            Creates an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> that can render text runs on a canvas.
            </summary><param name="textProvider">An <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider" /> that provides access to the text string.</param><param name="maxWidth">The maximum width of the layout, which is used if word wrap is enabled.</param><param name="fontFamilyName">The default font family name.</param><param name="fontSize">The default font size.</param><param name="foreground">The default foreground.</param><param name="spacers">The optional intra-text spacers.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> that was created.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas.CreateTextLayout(ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider,System.Single,System.String,System.Single,System.Drawing.Color,ActiproSoftware.UI.WinForms.Controls.Rendering.FontWeights,ActiproSoftware.UI.WinForms.Controls.Rendering.FontStyles,System.Collections.Generic.IEnumerable{ActiproSoftware.UI.WinForms.Controls.Rendering.ITextSpacer})"><summary>
            Creates an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> that can render text runs on a canvas.
            </summary><param name="textProvider">An <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider" /> that provides access to the text string.</param><param name="maxWidth">The maximum width of the layout, which is used if word wrap is enabled.</param><param name="fontFamilyName">The default font family name.</param><param name="fontSize">The default font size.</param><param name="foreground">The default foreground.</param><param name="fontWeight">The default font weight.</param><param name="fontStyle">The default font style.</param><param name="spacers">The optional intra-text spacers.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> that was created.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas.CreateTextSpacer(System.Int32,System.Object,System.Drawing.Size,System.Single)"><summary>
            Creates an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextSpacer" /> that can create intra-text space within an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" />.
            </summary><param name="characterIndex">The character index at which the spacer should be inserted.</param><param name="key">An optional object that uniquely identifies the spacer.</param><param name="size">The size of the spacer.</param><param name="baseline">The baseline of the spacer.</param><returns>
            The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextSpacer" /> that was created.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas.GetSolidColorBrush(System.Drawing.Color)"><summary>
            Returns a solid color brush for the specified <see cref="T:System.Drawing.Color" />.
            </summary><param name="color">The brush color.</param><returns>A solid color brush for the specified <see cref="T:System.Drawing.Color" />.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas.GetSquiggleLinePen(System.Drawing.Color)"><summary>
            Returns a squiggle line pen for the specified <see cref="T:System.Drawing.Color" />.
            </summary><param name="color">The pen color.</param><returns>A squiggle line pen for the specified <see cref="T:System.Drawing.Color" />.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas.GetSquiggleLinePen(System.Drawing.Color,System.Single)"><summary>
            Returns a squiggle line pen for the specified <see cref="T:System.Drawing.Color" />.
            </summary><param name="color">The pen color.</param><param name="thickness">The pen thickness.</param><returns>A squiggle line pen for the specified <see cref="T:System.Drawing.Color" /> and <paramref name="thickness" />.</returns></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl"><summary>
            Represents a control that supports custom rendering of content.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.#ctor"><summary>
            Initializes an instance of the <c>CanvasControl</c> class.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.#ctor(System.Boolean)"><summary>
            Initializes an instance of the <c>CanvasControl</c> class.
            </summary><param name="isForPrinter">Whether this canvas is created for a printer.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.CreateDrawContext(ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas,System.Drawing.Graphics,System.Drawing.Rectangle)"><summary>
            Creates a <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext" /> for the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.Draw" /> event.
            </summary><param name="canvas">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas" /> being drawn.</param><param name="platformRenderer">The native object used for drawing.</param><param name="bounds">The bounds in which to draw.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext" /> that was created.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.CreateTextBatch"><summary>
            Creates an <see cref="T:System.IDisposable" /> object that contains a reference to a text renderer, which can be passed to the
            <see cref="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.RunTextFormatter(System.IDisposable)" /> to more efficiently process multiple similar text layouts in a batch.
            </summary><returns>An <see cref="T:System.IDisposable" /> object.  Once disposed, the batch is ended.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.CreateTextLayout(System.String,System.Single,System.String,System.Single,System.Drawing.Color)"><summary>
            Creates an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> that can render text runs on a canvas.
            </summary><param name="text">The text string.</param><param name="maxWidth">The maximum width of the layout, which is used if word wrap is enabled.</param><param name="fontFamilyName">The default font family name.</param><param name="fontSize">The default font size.</param><param name="foreground">The default foreground.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> that was created.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.CreateTextLayout(ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider,System.Single,System.String,System.Single,System.Drawing.Color,System.Collections.Generic.IEnumerable{ActiproSoftware.UI.WinForms.Controls.Rendering.ITextSpacer})"><summary>
            Creates an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> that can render text runs on a canvas.
            </summary><param name="textProvider">An <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider" /> that provides access to the text string.</param><param name="maxWidth">The maximum width of the layout, which is used if word wrap is enabled.</param><param name="fontFamilyName">The default font family name.</param><param name="fontSize">The default font size.</param><param name="foreground">The default foreground.</param><param name="spacers">The optional intra-text spacers.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> that was created.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.CreateTextLayout(ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider,System.Single,System.String,System.Single,System.Drawing.Color,ActiproSoftware.UI.WinForms.Controls.Rendering.FontWeights,ActiproSoftware.UI.WinForms.Controls.Rendering.FontStyles,System.Collections.Generic.IEnumerable{ActiproSoftware.UI.WinForms.Controls.Rendering.ITextSpacer})"><summary>
            Creates an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> that can render text runs on a canvas.
            </summary><param name="textProvider">An <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider" /> that provides access to the text string.</param><param name="maxWidth">The maximum width of the layout, which is used if word wrap is enabled.</param><param name="fontFamilyName">The default font family name.</param><param name="fontSize">The default font size.</param><param name="foreground">The default foreground.</param><param name="fontWeight">The default font weight.</param><param name="fontStyle">The default font style.</param><param name="spacers">The optional intra-text spacers.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> that was created.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.CreateTextSpacer(System.Int32,System.Object,System.Drawing.Size,System.Single)"><summary>
            Creates an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextSpacer" /> that can create intra-text space within an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" />.
            </summary><param name="characterIndex">The character index at which the spacer should be inserted.</param><param name="key">An optional object that uniquely identifies the spacer.</param><param name="size">The size of the spacer.</param><param name="baseline">The baseline of the spacer.</param><returns>
            The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextSpacer" /> that was created.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.ExecuteFunc``1(System.Func{``0})"><summary>
            Safely executes an <see cref="T:System.Func`1" /> that deals with canvas resource creation and occurs outside of the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.Draw" /> event handler.
            </summary><param name="func">The <see cref="T:System.Func`1" /> to execute.</param><returns><c>true</c> if the canvas was ready and executed the function; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.GetSolidColorBrush(System.Drawing.Color)"><summary>
            Returns a solid color brush for the specified <see cref="T:System.Drawing.Color" />.
            </summary><param name="color">The brush color.</param><returns>A solid color brush for the specified <see cref="T:System.Drawing.Color" />.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.GetSquiggleLinePen(System.Drawing.Color)"><summary>
            Returns a squiggle line pen for the specified <see cref="T:System.Drawing.Color" />.
            </summary><param name="color">The pen color.</param><returns>A squiggle line pen for the specified <see cref="T:System.Drawing.Color" />.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.GetSquiggleLinePen(System.Drawing.Color,System.Single)"><summary>
            Returns a squiggle line pen for the specified <see cref="T:System.Drawing.Color" />.
            </summary><param name="color">The pen color.</param><param name="thickness">The pen thickness.</param><returns>A squiggle line pen for the specified <see cref="T:System.Drawing.Color" /> and <paramref name="thickness" />.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.InvalidateRender"><summary>
            Invalidates and repaints the control.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Occurs when rendering the control.
            </summary><param name="e">The <c>PaintEventArgs</c> that contains data related to this event.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.RenderToPrinter(System.Drawing.Graphics,System.Drawing.Rectangle)"><summary>
            Renders to an offscreen printer <see cref="T:System.Drawing.Graphics" />.
            </summary><param name="platformRenderer">The <see cref="T:System.Drawing.Graphics" /> to use.</param><param name="bounds">The bounds in which to render.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.IsForPrinter"><summary>
            Gets whether this canvas is created for a printer.
            </summary><value><c>true</c> if this canvas is created for a printer; otherwise, <c>false</c>.
            </value></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.Draw"><summary>
            Occurs when the canvas should be rendered.
            </summary><eventdata>
            The event handler receives an argument of type <c>CanvasDrawEventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext"><summary>
            Provides access for drawing the content of an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas" />.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.#ctor(ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas,System.Drawing.Graphics,System.Drawing.Rectangle)"><summary>
            Initializes an instance of the <c>CanvasDrawContext</c> class.
            </summary><param name="canvas">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas" /> being drawn.</param><param name="platformRenderer">The native object used for drawing.</param><param name="bounds">The bounds in which to draw.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DrawEllipse(System.Drawing.Rectangle,System.Drawing.Color,ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind,System.Single)"><summary>
            Draws an ellipse shape.
            </summary><param name="bounds">The bounds in which to draw.</param><param name="color">The line color.</param><param name="lineKind">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind" /> that indicates the line's dash style.  A common default value is <c>Solid</c>.</param><param name="strokeWidth">The stroke width.  A common default value is <c>1.0</c>.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DrawEllipse(System.Drawing.Rectangle,System.Drawing.Pen)"><summary>
            Draws an ellipse shape.
            </summary><param name="bounds">The bounds in which to draw.</param><param name="pen">The line pen.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DrawGeometry(System.Drawing.Point,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind,System.Single)"><summary>
            Draws a geometry.
            </summary><param name="location">The location at which to draw the geometry.</param><param name="geometry">The geometry.</param><param name="color">The stroke color.</param><param name="lineKind">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind" /> that indicates the line's dash style.  A common default value is <c>Solid</c>.</param><param name="strokeWidth">The stroke width.  A common default value is <c>1.0</c>.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DrawGeometry(System.Drawing.Point,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Pen)"><summary>
            Draws a geometry.
            </summary><param name="location">The location at which to draw the geometry.</param><param name="geometry">The geometry.</param><param name="pen">The stroke pen.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DrawImage(System.Drawing.Point,System.Drawing.Image)"><summary>
            Draws an image.
            </summary><param name="location">The location at which to draw the image.</param><param name="imageSource">The image source.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DrawLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind,System.Single)"><summary>
            Draws a line.
            </summary><param name="startLocation">The start location of the line.</param><param name="endLocation">The end location of the line.</param><param name="color">The line color.</param><param name="lineKind">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind" /> that indicates the line's dash style.  A common default value is <c>Solid</c>.</param><param name="strokeWidth">The stroke width.  A common default value is <c>1.0</c>.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DrawLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Pen)"><summary>
            Draws a line.
            </summary><param name="startLocation">The start location of the line.</param><param name="endLocation">The end location of the line.</param><param name="pen">The line pen.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color,ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind,System.Single)"><summary>
            Draws a rectangle shape.
            </summary><param name="bounds">The bounds in which to draw.</param><param name="color">The line color.</param><param name="lineKind">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind" /> that indicates the line's dash style.  A common default value is <c>Solid</c>.</param><param name="strokeWidth">The stroke width.  A common default value is <c>1.0</c>.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Pen)"><summary>
            Draws a rectangle shape.
            </summary><param name="bounds">The bounds in which to draw.</param><param name="pen">The line color.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DrawRoundedRectangle(System.Drawing.Rectangle,System.Single,System.Drawing.Color,ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind,System.Single)"><summary>
            Draws a rounded rectangle shape.
            </summary><param name="bounds">The bounds in which to draw.</param><param name="radius">The corner radius.</param><param name="color">The line color.</param><param name="lineKind">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind" /> that indicates the line's dash style.  A common default value is <c>Solid</c>.</param><param name="strokeWidth">The stroke width.  A common default value is <c>1.0</c>.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DrawRoundedRectangle(System.Drawing.Rectangle,System.Single,System.Drawing.Pen)"><summary>
            Draws a rounded rectangle shape.
            </summary><param name="bounds">The bounds in which to draw.</param><param name="radius">The corner radius.</param><param name="pen">The line color.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DrawSquiggleLine(System.Drawing.Rectangle,System.Drawing.Color)"><summary>
            Draws a squiggle line.
            </summary><param name="bounds">The bounds in which to draw.</param><param name="color">The line color.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DrawText(System.Drawing.Point,ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayoutLine)"><summary>
            Draws an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayoutLine" /> at the specified location.
            </summary><param name="location">The location at which to draw the text.</param><param name="line">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayoutLine" /> to draw.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.FillEllipse(System.Drawing.Rectangle,System.Drawing.Color)"><summary>
            Fills an ellipse shape.
            </summary><param name="bounds">The bounds in which to draw.</param><param name="color">The fill color.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.FillEllipse(System.Drawing.Rectangle,System.Drawing.Brush)"><summary>
            Fills an ellipse shape.
            </summary><param name="bounds">The bounds in which to draw.</param><param name="brush">The fill brush.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.FillGeometry(System.Drawing.Point,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color)"><summary>
            Fills a geometry.
            </summary><param name="location">The location at which to draw the geometry.</param><param name="geometry">The geometry.</param><param name="color">The fill color.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.FillGeometry(System.Drawing.Point,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Brush)"><summary>
            Fills a geometry.
            </summary><param name="location">The location at which to draw the geometry.</param><param name="geometry">The geometry.</param><param name="brush">The fill brush.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.FillRectangle(System.Drawing.Rectangle,System.Drawing.Color)"><summary>
            Fills a rectangle shape.
            </summary><param name="bounds">The bounds in which to draw.</param><param name="color">The fill color.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.FillRectangle(System.Drawing.Rectangle,System.Drawing.Brush)"><summary>
            Fills a rectangle shape.
            </summary><param name="bounds">The bounds in which to draw.</param><param name="brush">The fill brush.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.FillRoundedRectangle(System.Drawing.Rectangle,System.Single,System.Drawing.Color)"><summary>
            Fills a rectangle shape.
            </summary><param name="bounds">The bounds in which to draw.</param><param name="radius">The corner radius.</param><param name="color">The fill color.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.FillRoundedRectangle(System.Drawing.Rectangle,System.Single,System.Drawing.Brush)"><summary>
            Fills a rounded rectangle shape.
            </summary><param name="bounds">The bounds in which to draw.</param><param name="radius">The corner radius.</param><param name="brush">The fill brush.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.PopBounds"><summary>
            Pops a target <see cref="P:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.Bounds" />.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.PopClip"><summary>
            Pops a clip.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.PushBounds(System.Drawing.Rectangle)"><summary>
            Pushes a target <see cref="P:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.Bounds" />.
            </summary><param name="bounds">The new target bounds.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.PushClip(System.Drawing.Rectangle)"><summary>
            Pushes a clip.
            </summary><param name="clipBounds">The clip bounds.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.Bounds"><summary>
            Gets the bounds in which to draw.
            </summary><value>The bounds in which to draw.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.Canvas"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas" /> being drawn.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas" /> being drawn.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.ClipBounds"><summary>
            Gets the current clip bounds in which to draw.
            </summary><value>The current clip bounds in which to draw.</value><seealso cref="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.PopClip" /><seealso cref="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.PushClip(System.Drawing.Rectangle)" /></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.DpiScale"><summary>
            Gets the additional scale factor caused by the monitor DPI (WinForms only).
            </summary><value>The additional scale factor caused by the monitor DPI (WinForms only).</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.PlatformRenderer"><summary>
            Gets the native object used for drawing.
            </summary><value>The native object used for drawing.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.Scale"><summary>
            Gets the current scale factor.
            </summary><value>The current scale factor.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext.IsNativeRendering"><summary>
            Gets or sets whether native rendering is currently active.
            </summary><value><c>true</c> if native rendering is currently active; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawEventArgs"><summary>
            Represents event arguments for <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas" /> draw events.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawEventArgs.#ctor(ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext)"><summary>
            Initializes an instance of the <c>CanvasDrawEventArgs</c> class.
            </summary><param name="context">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext" /> to use.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawEventArgs.Context"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext" /> to use for drawing an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas" />.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasDrawContext" /> to use for drawing an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ICanvas" />.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.StringTextProvider"><summary>
            Represents an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider" /> for a plain text string.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.StringTextProvider.#ctor(System.String)"><summary>
            Initializes an instance of the <c>StringTextProvider</c> class.
            </summary><param name="text">The text string.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.StringTextProvider.#ctor(System.String,System.Int32)"><summary>
            Initializes an instance of the <c>StringTextProvider</c> class.
            </summary><param name="text">The text string.</param><param name="startCharacterIndex">The start character index, if this string is a substring from another larger text source.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.StringTextProvider.GetSubstring(System.Int32,System.Int32)"><summary>
            Returns a substring range of the text.
            </summary><param name="characterIndex">The start character index.</param><param name="characterCount">The number of characters in the range.</param><returns>The text substring.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.StringTextProvider.Translate(System.Int32,ActiproSoftware.UI.WinForms.Controls.Rendering.TextProviderTranslateModes)"><summary>
            Translates the specified character index.
            </summary><param name="characterIndex">The character index to translate.</param><param name="modes">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.TextProviderTranslateModes" /> indicating the translate modes to use.</param><returns>The translated character index.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.StringTextProvider.Length"><summary>
            Gets the total number of available text characters.
            </summary><value>The total number of available text characters.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.StringTextProvider.Spacers"><summary>
            Gets the collection of intra-text spacers.
            </summary><value>The collection of intra-text spacers.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.StringTextProvider.StartCharacterIndex"><summary>
            Gets the start character index, if this string is a substring from another larger text source.
            </summary><value>The start character index, if this string is a substring from another larger text source.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange"><summary>
            Represents an ordered pair of Unicode character min and max values.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange.#ctor"><summary>
            Initializes a new instance of the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange" /> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange.#ctor(System.Int32,System.Int32)"><summary>
            Initializes a new instance of the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange" /> class with the specified min and max values.
            </summary><param name="min">The minimum value of the range.</param><param name="max">The maximum value of the range.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange.Contains(System.Int32)"><summary>
            Returns whether the range inclusively contains the specified value.
            </summary><param name="value">The value to check.</param><returns><c>true</c> if the range inclusively contains the specified value; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange.ToString"><summary>
            Converts the object to a <c>String</c>.
            </summary><returns>
            A string whose value represents this object.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange.Max"><summary>
            Gets or sets the maximum value of this <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange" />.
            </summary><value>The maximum value of this <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange" />.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange.Min"><summary>
            Gets or sets the minimum value of this <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange" />.
            </summary><value>The minimum value of this <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.UnicodeRange" />.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout"><summary>
            Provides the base requirements for a formatted text layout.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.RunTextFormatter(System.IDisposable)"><summary>
            Runs the text formatter using the specified batch text renderer to help in processing speed when multiple sequential calls are made.
            </summary><param name="batch">A reference to the result of a previous call to <see cref="M:ActiproSoftware.UI.WinForms.Controls.Rendering.CanvasControl.CreateTextBatch" />.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.SetFontFamily(System.Int32,System.Int32,System.String)"><summary>
            Sets a font family over range of text.
            </summary><param name="characterIndex">The start character index.</param><param name="characterCount">The number of characters in the range.</param><param name="fontFamilyName">The font family name to apply over the range.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.SetFontSize(System.Int32,System.Int32,System.Single)"><summary>
            Sets a font size over range of text.
            </summary><param name="characterIndex">The start character index.</param><param name="characterCount">The number of characters in the range.</param><param name="fontSize">The font size to apply over the range.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.SetFontStyle(System.Int32,System.Int32,ActiproSoftware.UI.WinForms.Controls.Rendering.FontStyles)"><summary>
            Sets a font style (i.e. italic) over range of text.
            </summary><param name="characterIndex">The start character index.</param><param name="characterCount">The number of characters in the range.</param><param name="fontStyle">The font style to apply over the range.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.SetFontWeight(System.Int32,System.Int32,ActiproSoftware.UI.WinForms.Controls.Rendering.FontWeights)"><summary>
            Sets a font weight (i.e. bold) over range of text.
            </summary><param name="characterIndex">The start character index.</param><param name="characterCount">The number of characters in the range.</param><param name="fontWeight">The font weight to apply over the range.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.SetForeground(System.Int32,System.Int32,System.Nullable{System.Drawing.Color})"><summary>
            Sets a foreground over range of text.
            </summary><param name="characterIndex">The start character index.</param><param name="characterCount">The number of characters in the range.</param><param name="brush">The foreground to apply over the range.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.SetStrikethrough(System.Int32,System.Int32,System.Boolean)"><summary>
            Sets a strike-through decoration over range of text.
            </summary><param name="characterIndex">The start character index.</param><param name="characterCount">The number of characters in the range.</param><param name="hasStrikethrough">Whether the range has a strike-through decoration.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.SetStrikethrough(System.Int32,System.Int32,ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind,System.Nullable{System.Drawing.Color},ActiproSoftware.UI.WinForms.Controls.Rendering.TextLineWeight)"><summary>
            Sets a strike-through decoration over range of text.
            </summary><param name="characterIndex">The start character index.</param><param name="characterCount">The number of characters in the range.</param><param name="lineKind">The kind of strike-through line.</param><param name="brush">The optional strike-through line foreground.</param><param name="lineWeight">The line weight.  A common value is <c>Single</c>.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.SetUnderline(System.Int32,System.Int32,System.Boolean)"><summary>
            Sets an underline decoration over range of text.
            </summary><param name="characterIndex">The start character index.</param><param name="characterCount">The number of characters in the range.</param><param name="hasUnderline">Whether the range has an underline decoration.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.SetUnderline(System.Int32,System.Int32,ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind,System.Nullable{System.Drawing.Color},ActiproSoftware.UI.WinForms.Controls.Rendering.TextLineWeight)"><summary>
            Sets an underline decoration over range of text.
            </summary><param name="characterIndex">The start character index.</param><param name="characterCount">The number of characters in the range.</param><param name="lineKind">The kind of underline line.</param><param name="brush">The optional underline line foreground.</param><param name="lineWeight">The line weight.  A common value is <c>Single</c>.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.Lines"><summary>
            Gets the collection of visual lines in the layout.
            </summary><value>The collection of visual lines in the layout.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.Spacers"><summary>
            Gets the read-only collection of spacers in the text layout.
            </summary><value>The read-only collection of spacers in the text layout.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.SpaceWidth"><summary>
            Gets the width of a space.
            </summary><value>The width of a space.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.TabSize"><summary>
            Gets or sets the number of space characters in a tab.
            </summary><value>
            The number of space characters in a tab.
            The default value is <c>4</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.TextProvider"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider" /> for retrieving text.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider" /> for retrieving text.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout.TextWrapping"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.TextLayoutWrapping" /> that indicates the wrap mode to use when text doesn't fit within the layout width.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.TextLayoutWrapping" /> that indicates the wrap mode to use when text doesn't fit within the layout width.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds"><summary>
            Provides the base requirements for an object that describes the location, size, and flow direction of a range of text.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.Bottom"><summary>
            Gets the y-axis value of the bottom of the bounds (<see cref="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.Y" /> + <see cref="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.Height" />). 
            </summary><value>The y-axis value of the bottom of the bounds.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.Height"><summary>
            Gets the height of the bounds. 
            </summary><value>The height of the bounds.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.IsRightToLeft"><summary>
            Gets whether the bounds use a right-to-left flow direction.
            </summary><value><c>true</c> if the bounds use a right-to-left flow direction; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.Left"><summary>
            Gets the x-axis position of the left side of the bounds. 
            Getting this property is equivalent to getting the bounds's <see cref="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.X" /> property. 
            </summary><value>The x-axis position of the left side of the bounds.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.Rect"><summary>
            Gets a native rectangle that specifies the bounds.
            </summary><value>A native rectangle that specifies the bounds.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.Right"><summary>
            Gets the x-axis value of the right side of the bounds (<see cref="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.X" /> + <see cref="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.Width" />). 
            </summary><value>The x-axis value of the right side of the bounds.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.Top"><summary>
            Gets the y-axis position of the top of the bounds. 
            Getting this property is equivalent to getting the bounds's <see cref="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.Y" /> property. 
            </summary><value>The y-axis position of the top of the bounds.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.Width"><summary>
            Gets the width of the bounds. 
            </summary><value>The width of the bounds.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.X"><summary>
            Gets the x-axis position of the left side of the bounds. 
            </summary><value>The x-axis position of the left side of the bounds.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds.Y"><summary>
            Gets the y-axis position of the top of the bounds. 
            </summary><value>The y-axis position of the top of the bounds.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayoutLine"><summary>
            Provides the base requirements for a visual line of text within an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" />.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayoutLine.GetCharacterBounds(System.Int32,System.Boolean)"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds" /> of the specified character.
            </summary><param name="characterIndex">The character index, relative to the original <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> text.</param><param name="allowVirtualSpace">Whether to allow virtual space past the last character.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds" /> of the specified character.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayoutLine.GetTextBounds(System.Int32,System.Int32,System.Boolean)"><summary>
            Returns the collection of <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds" /> that encompass the specified character range.
            </summary><param name="characterIndex">The start character index, relative to the original <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> text.</param><param name="characterCount">The character count.</param><param name="allowVirtualSpace">Whether to allow virtual space past the last character.</param><returns>The collection of <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextBounds" /> that encompass the specified character range.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayoutLine.HitTest(System.Drawing.Point)"><summary>
            Hit tests to determine the character index at the specified location.
            </summary><param name="location">The location to examine.</param><returns>
            The index of the character at the location, if any.  Otherwise, <c>-1</c> is returned.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayoutLine.Baseline"><summary>
            Gets the baseline distance.
            </summary><value>The baseline distance.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayoutLine.CharacterCount"><summary>
            Gets the number of characters in the line.
            </summary><value>The number of characters in the line.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayoutLine.HasHardLineBreak"><summary>
            Gets whether the the line ends with a hard line break.
            </summary><value><c>true</c> if the the line ends with a hard line break; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayoutLine.Height"><summary>
            Gets the height of the line.
            </summary><value>The height of the line.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayoutLine.StartCharacterIndex"><summary>
            Gets the index of the first character in this line, relative to the original <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> text.
            </summary><value>The index of the first character in this line, relative to the original <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> text.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayoutLine.Width"><summary>
            Gets the width of the line.
            </summary><value>The width of the line.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider"><summary>
            Provides the base requirements for an object that supplies to an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" />.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider.GetSubstring(System.Int32,System.Int32)"><summary>
            Returns a substring range of the text.
            </summary><param name="characterIndex">The start character index.</param><param name="characterCount">The number of characters in the range.</param><returns>The text substring.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider.Translate(System.Int32,ActiproSoftware.UI.WinForms.Controls.Rendering.TextProviderTranslateModes)"><summary>
            Translates the specified character index.
            </summary><param name="characterIndex">The character index to translate.</param><param name="modes">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.TextProviderTranslateModes" /> indicating the translate modes to use.</param><returns>The translated character index.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider.Length"><summary>
            Gets the total number of available text characters.
            </summary><value>The total number of available text characters.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider.Spacers"><summary>
            Gets the collection of intra-text spacers.
            </summary><value>The collection of intra-text spacers.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextSpacer"><summary>
            Provides the base requirements for an intra-text spacer within an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" />.
            </summary></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextSpacer.Baseline"><summary>
            Gets the spacer's baseline distance.
            </summary><value>The spacer's baseline distance.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextSpacer.CharacterIndex"><summary>
            Gets the character index, relative to the original <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> text, at which the spacer occurs.
            </summary><value>The character index, relative to the original <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" /> text, at which the spacer occurs.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextSpacer.Key"><summary>
            Gets an object that uniquely identifies the spacer.
            </summary><value>An object that uniquely identifies the spacer.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextSpacer.Size"><summary>
            Gets the size of the spacer.
            </summary><value>The size of the spacer.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind"><summary>
            Specifies the kind of line.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind.None"><summary>
            No line.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind.Solid"><summary>
            A solid line.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind.Dot"><summary>
            A dotted line.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind.Dash"><summary>
            A dashed line.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.LineKind.DashDot"><summary>
            A dash-dot line.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.TextLayoutWrapping"><summary>
            Specifies the text wrapping mode to use when text doesn't fit within an <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextLayout" />'s maximum width.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.TextLayoutWrapping.NoWrap"><summary>
            No wrapping can occur.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.TextLayoutWrapping.Wrap"><summary>
            Wrap text at word ends.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.TextLayoutWrapping.WrapByCharacter"><summary>
            Wrap text at character ends.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.TextLineWeight"><summary>
            Specifies the weight of a text underline or strike-through line.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.TextLineWeight.Single"><summary>
            Draw a single line that is a single unit in width.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.TextLineWeight.Double"><summary>
            Draw two lines that each are a single unit in width.  The lines are spaced a single unit apart.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Rendering.TextProviderTranslateModes"><summary>
            Specifies the modes for translating character indices within a <see cref="T:ActiproSoftware.UI.WinForms.Controls.Rendering.ITextProvider" />.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.TextProviderTranslateModes.FromSourceText"><summary>
            Translate from source text to layout text.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.TextProviderTranslateModes.ToSourceText"><summary>
            Translate from layout text to source text.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.Rendering.TextProviderTranslateModes.PositiveTracking"><summary>
            This flag can be combined with <see cref="F:ActiproSoftware.UI.WinForms.Controls.Rendering.TextProviderTranslateModes.FromSourceText" /> or <see cref="F:ActiproSoftware.UI.WinForms.Controls.Rendering.TextProviderTranslateModes.ToSourceText" />.
            When used with <see cref="F:ActiproSoftware.UI.WinForms.Controls.Rendering.TextProviderTranslateModes.FromSourceText" />, this flag indicates that the resulting character index should be negative (a bitwise complement)
            if the character index should have negative (leftward) affinity around a spacer; otherwise, a positive value indicates positive (rightward) affinity around a spacer.
            When used with <see cref="F:ActiproSoftware.UI.WinForms.Controls.Rendering.TextProviderTranslateModes.ToSourceText" />, this flag indicates that the resulting character index should track positive (rightward) 
            around any gap in characters scenario.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Primitives.NoActivateForm"><summary>
            Represents a base form that does not activate when displayed.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.NoActivateForm.#ctor"><summary>
            Initializes a new instance of the <c>NoActivateForm</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.NoActivateForm.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.NoActivateForm.SetVisibleCore(System.Boolean)"><summary>
            Sets the control to the specified visible state.
            </summary><param name="visible"><c>true</c> to make the control visible; otherwise, <c>false</c>.
            </param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.NoActivateForm.WndProc(System.Windows.Forms.Message@)"><summary>
            Processes Windows messages.
            </summary><param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl"><summary>
            Represents the base class for a <c>Form</c> that may be used as a popup.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.#ctor"><summary>
            Initializes a new instance of the <c>PopupControl</c> class.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.HidePopup"><summary>
            Hides the popup.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.NegotiateLocation(System.Drawing.Rectangle,System.Int32)"><summary>
            Negotiates the location of the popup based on excluded bounds.
            </summary><param name="exclusionBounds">The bounds over which the object may not be displayed.</param><remarks>This method defaults to extending the popup vertically from the lower left corner.</remarks><param name="offset">The amount to offset from the exclusion bounds.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.NegotiateLocation(System.Drawing.Rectangle,ActiproSoftware.UI.WinForms.Drawing.Corner,System.Windows.Forms.Orientation,System.Int32)"><summary>
            Negotiates the location of the popup based on excluded bounds and the desired corner.
            </summary><param name="exclusionBounds">The bounds over which the object may not be displayed.</param><param name="exclusionCorner">The corner of the exclusion bounds at which to place the popup.</param><param name="orientation">Whether the popup should extend horizontally or vertically from the corner.</param><param name="offset">The amount to offset from the exclusion bounds.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.OnDisplayed(System.EventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.Displayed" /> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.OnDisplaying(System.EventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.Displaying" /> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.OnHandleCreated(System.EventArgs)"><summary>
            Raises the <c>HandleCreated</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.OnHidden(System.EventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.Hidden" /> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.OnHiding(System.EventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.Hiding" /> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.OnVisibleChanged(System.EventArgs)"><summary>
            Raises the <c>VisibleChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)"><summary>
            Processes a command key.
            </summary><param name="m">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</param><param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</param><returns><c>true</c> if the character was processed by the control; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)"><summary>
            Performs the work of setting the specified bounds of this control.
            </summary><param name="x">The new <c>Left</c> property value of the control.</param><param name="y">The new <c>Top</c> property value of the control.</param><param name="width">The new <c>Width</c> property value of the control.</param><param name="height">The new <c>Height</c> property value of the control.</param><param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.SetVisibleCore(System.Boolean)"><summary>
            Sets the control to the specified visible state.
            </summary><param name="visible"><c>true</c> to make the control visible; otherwise, <c>false</c>.
            </param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.ShowPopup(System.Windows.Forms.Control,System.Boolean)"><summary>
            Shows the popup.
            </summary><param name="owner">The <see cref="T:System.Windows.Forms.Control" /> that is the owner of the popup.</param><param name="activate">Whether the form should be activated after being displayed.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.WndProc(System.Windows.Forms.Message@)"><summary>
            Processes Windows messages.
            </summary><param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.AutoClose"><summary>
            Gets whether to automatically close when system events occur.
            </summary><value><c>true</c> if the popup should be closed when system events occur; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.CreateParams"><summary>
            Gets the required creation parameters when the control handle is created.
            </summary><value>
            A <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.CreateParams" /> object that contains the required creation parameters when the handle to the control is created.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.DropShadowEnabled"><summary>
            Gets or sets whether a drop-shadow is enabled.
            </summary><value><c>true</c> if a drop-shadow is enabled; otherwise, <c>false</c>.
            </value></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.Displayed"><summary>
            Occurs after the popup is displayed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.Displaying"><summary>
            Occurs before the popup is displayed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.Hidden"><summary>
            Occurs after the popup is closed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.PopupControl.Hiding"><summary>
            Occurs before the popup is closed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl"><summary>
            Provides base functionality for controls that wish to work with <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> objects.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.#ctor"><summary>
            Initializes a new instance of the <c>UIContainerControl</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.AddPendingGraphicsInversion(System.Drawing.Rectangle)"><summary>
            Inverts the canvas using XOR at the end of the current or next drawing operation.
            </summary><param name="bounds">A <c>Rectangle</c> specifying the bounds to invert.</param><returns><c>true</c> if the inversion operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.AddPendingScrollOperation(System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="orientation">The direction to scroll.</param><param name="amount">The amount to scroll.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.AddPendingScrollOperation(System.Drawing.Rectangle,System.Int32,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="xAmount">The amount to scroll horizontally.</param><param name="yAmount">The amount to scroll vertically.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.AddToInvalidatedRegion"><summary>
            Adds the bounds of the control to the invalidated region.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.AddToInvalidatedRegion(System.Drawing.Rectangle)"><summary>
            Adds a <c>Rectangle</c> to the invalidated region.
            </summary><param name="rect">The <c>Rectangle</c> to add to the invalidated region.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Arrange(System.Drawing.Rectangle)"><summary>
            Positions child elements and determines a size for the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.
            </summary><param name="finalRect">The final bounds of the element, relative to its parent.</param><remarks>
            Override the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.ArrangeOverride(System.Drawing.Size)" /> method with custom arrange logic.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.ArrangeOverride(System.Drawing.Size)"><summary>
            Positions child elements and determines an arrange size.
            </summary><param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param><returns>The actual size used.</returns><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Arrange(System.Drawing.Rectangle)" /> on each visible child element and position each child element.
            It is required that a parent element calls <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Arrange(System.Drawing.Rectangle)" /> on each child or they won't be rendered.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.ContainsLocation(System.Drawing.Point)"><summary>
            Used with hit-testing, returning whether this element's bounds contains the specified location.
            </summary><param name="location">The <see cref="T:System.Drawing.Point" /> location to examine.</param><returns><c>true</c> if this element's bounds contains the specified location; otherwise, <c>false</c>.
            </returns><remarks>
            Override this method to prevent certain portions of the element's bounds from being included in hit-testing.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.UI.WinForms.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Dispose(System.Boolean)"><summary>
            Disposes any resources used by the object.
            </summary><param name="disposing">Whether the object is being disposed.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.GetCursor(System.Drawing.Point)"><summary>
            Gets the <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.
            </summary><param name="point">The <see cref="T:System.Drawing.Point" /> to examine.</param><returns>The <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.HitTest(ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters,System.Func{ActiproSoftware.UI.WinForms.Controls.IUIElement,ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters,System.Boolean})"><summary>
            Hit tests to find the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> that contains the specified coordinates.
            </summary><param name="hitTestParams">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters" /> containing hit test parameters.</param><param name="filter">Optionally defines a filter which must return <c>true</c> for an element to match the hit test.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestResult" /> containing the hit test result.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.HitTestRecursive(ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters,System.Func{ActiproSoftware.UI.WinForms.Controls.IUIElement,ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters,System.Boolean})"><summary>
            Recursively hit tests to find the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> that contains the specified coordinates.
            </summary><param name="hitTestParams">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestParameters" /> containing hit test parameters.</param><param name="filter">Optionally defines a filter which must return <c>true</c> for an element to match the hit test.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.PointHitTestResult" /> containing the hit test result.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Invalidate(ActiproSoftware.UI.WinForms.Controls.InvalidationLevels,ActiproSoftware.UI.WinForms.Controls.InvalidationTypes)"><summary>
            Invalidates the specified states for the element or its related elements.
            </summary><param name="levels">The hierarchy levels at which to invalidate.</param><param name="types">The types of invalidation to perform.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.InvalidateArrange"><summary>
            Invalidates the layout of the element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.InvalidateMeasure"><summary>
            Invalidates the measurement of the element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the element and updates the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.DesiredSize" /> property.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><remarks>
            The <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> method should be called by parents on their children.
            Internally, <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> calls the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)" /> override on the same object, 
            giving it opportunity to compute its <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.DesiredSize" />. 
            This method will return immediately if the child's measurements are valid, previously measured and 
            <c>availableSize</c> is the same as cached. 
            This method also resets the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.IsMeasureValid" /> bit on the child. 
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the size in layout required for child elements and determines a size for the element itself. 
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that this element can give to child elements.
            Infinity can be specified as a value to indicate that the element will size to whatever content is available.
            </param><returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each visible child element and determine the total size required.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnClick(System.EventArgs)"><summary>
            Raises the <c>Click</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnDoubleClick(System.EventArgs)"><summary>
            Raises the <c>DoubleClick</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnHandleCreated(System.EventArgs)"><summary>
            Raises the <c>HandleCreated</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnLayout(System.Windows.Forms.LayoutEventArgs)"><summary>
            Raises the <c>Layout</c> event.
            </summary><param name="e">An <c>LayoutEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnLocationChanged(System.EventArgs)"><summary>
            Raises the <c>LocationChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseDown</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnMouseEnter(System.EventArgs)"><summary>
            Raises the <c>MouseEnter</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnMouseHover(System.EventArgs)"><summary>
            Raises the <c>MouseHover</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnMouseLeave(System.EventArgs)"><summary>
            Raises the <c>MouseLeave</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseMove</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseUp</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseWheel</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnPaint(System.Windows.Forms.PaintEventArgs)"><summary>
            Raises the <c>Paint</c> event.
            </summary><param name="e">An <c>PaintEventArgs</c> that contains the event data.</param><remarks>
            The default implementation of this event sets up a double-buffering canvas and simply
            calls the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnRender(System.Windows.Forms.PaintEventArgs)" /> method.  
            It is sealed to prevent implementors from implementing it.
            All drawing code should be placed in the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnRender(System.Windows.Forms.PaintEventArgs)" /> method.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)"><summary>
            Raises the <c>PaintBackground</c> event.
            </summary><param name="e">An <c>PaintEventArgs</c> that contains the event data.</param><remarks>
            The default implementation of this event does nothing.  
            It is sealed to prevent implementors from implementing it.
            All drawing code should be placed in the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnRender(System.Windows.Forms.PaintEventArgs)" /> method.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnParentChanged"><summary>
            Invoked when logical parent is changed. 
            This is invoked after the parent has changed, and the purpose is to allow elements to perform actions based on the changed parent.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnRenderChildElements(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the child elements.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><remarks>
            This method should not generally be overridden.
            The default implementation of this method calls the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Render(System.Windows.Forms.PaintEventArgs)" /> method on all child elements.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnResize(System.EventArgs)"><summary>
            Raises the <c>Resize</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnRightToLeftChanged(System.EventArgs)"><summary>
            Raises the <c>RightToLeftChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.OnVisibleChanged(System.EventArgs)"><summary>
            Raises the <c>VisibleChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Render(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.ResetDoubleBufferCanvas(System.Boolean)"><summary>
            Resets the double-buffer canvas.
            </summary><param name="recurse">Whether to recurse down into the child control tree.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.ResumePainting"><summary>
            Allows the control to paint itself by clearing the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.PaintingSuspended" /> flag.
            </summary><seealso cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.PaintingSuspended" /></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.SuspendPainting"><summary>
            Prevents the control from painting itself by setting the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.PaintingSuspended" /> flag.
            </summary><seealso cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.PaintingSuspended" /></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.TransformToAncestor(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Returns a <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to an ancestor element.
            </summary><param name="ancestor">The ancestor <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to a ancestor element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.TransformToDescendant(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Returns a <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to a descendant element.
            </summary><param name="descendant">The descendant <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to a descendant element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.UpdateLayout"><summary>
            Call this method to ensure that the whole subtree of elements that includes this <see cref="T:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement" /> is properly updated.
            </summary><remarks>
            This ensures that <see cref="T:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement" /> objects with invalid measure or arrange states will get a call to their 
            <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> and <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Arrange(System.Drawing.Rectangle)" /> methods, and all computed sizes will be validated. 
            This method does nothing if layout is clean but it does work if layout is not clean so avoid 
            calling it after each change in the element tree. 
            It makes sense to either never call it (system will do this in a deferred manner) or only 
            call it if you absolutely need updated sizes and positions after you do all changes.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.ActualHeight"><summary>
            Gets the actual height of the element.
            </summary><value>The actual height of the element.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.ActualWidth"><summary>
            Gets the actual width of the element.
            </summary><value>The actual width of the element.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.BackColor"><summary>
            Gets or sets the background color for the control.
            </summary><value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.BackgroundImage"><summary>
            Gets or sets the background image displayed in the control.
            </summary><value>An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.CaptureMouseWhenPressed"><summary>
            Indicates whether to automatically capture the mouse when the element is pressed.
            </summary><value><c>true</c> if the mouse should automatically be captured when the element is pressed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.ClipBounds"><summary>
            Gets a <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.DesiredSize"><summary>
            Gets the desired size of the element as computed by <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.
            </summary><value>The desired size of the element as computed by <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.</value><remarks>
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.IsMeasureValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.Font"><summary>
            Gets or sets the font of the text displayed by the control.
            </summary><value>The <see cref="T:System.Drawing.Font" /> object to apply to the text displayed by the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.ForeColor"><summary>
            Gets or sets the foreground color for the control.
            </summary><value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.IsArrangeValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.DesiredSize" /> property and position of child elements is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.DesiredSize" /> property and position of child elements is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.InvalidateArrange" />. 
            <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.IsArrangeValid" /> and <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.IsMeasureValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.DesiredSize" /> property is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.DesiredSize" /> property is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.InvalidateMeasure" />. 
            <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.IsArrangeValid" /> and <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.IsPaintValid"><summary>
            Gets whether the control has rendered itself and doesn't have any invalidated paint regions.
            </summary><value><c>true</c> if the control has rendered itself and doesn't have any invalidated paint regions; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.IsRightToLeft"><summary>
            Gets whether the control is using a right-to-left layout.
            </summary><value><c>true</c> if the control is using a right-to-left layout; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.LastMouseUpButton"><summary>
            Gets the <see cref="T:System.Windows.Forms.MouseButtons" /> indicating the last mouse button that was released.
            </summary><value>The <see cref="T:System.Windows.Forms.MouseButtons" /> indicating the last mouse button that was released.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.PaintingSuspended"><summary>
            Gets whether the control is painting itself.
            </summary><value><c>true</c> if the control is painting itself; otherwise, <c>false</c>.</value><remarks>
            If this flag is set, calls to the <c>OnPaint</c> method will be ignored.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.UseControlGraphicsForMeasure"><summary>
            Gets or sets whether to use a call to the control's <c>CreateGraphics</c> method to obtain the <see cref="T:System.Drawing.Graphics" /> used for measure routines.
            </summary><value><c>true</c> if the control's <c>CreateGraphics</c> method should be called; otherwise, <c>false</c>.
            The default value is <c>true</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIContainerControl.UseExtendedDoubleBuffering"><summary>
            Gets or sets whether to use extended double buffering for rendering.
            </summary><value><c>true</c> if extended double buffering should be used; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl"><summary>
            Provides base functionality for controls that wish to work with <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> objects.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.#ctor"><summary>
            Initializes a new instance of the <c>UIControl</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.AddPendingGraphicsInversion(System.Drawing.Rectangle)"><summary>
            Inverts the canvas using XOR at the end of the current or next drawing operation.
            </summary><param name="bounds">A <c>Rectangle</c> specifying the bounds to invert.</param><returns><c>true</c> if the inversion operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.AddPendingScrollOperation(System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="orientation">The direction to scroll.</param><param name="amount">The amount to scroll.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.AddPendingScrollOperation(System.Drawing.Rectangle,System.Int32,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="xAmount">The amount to scroll horizontally.</param><param name="yAmount">The amount to scroll vertically.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.AddToInvalidatedRegion"><summary>
            Adds the bounds of the control to the invalidated region.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.AddToInvalidatedRegion(System.Drawing.Rectangle)"><summary>
            Adds a <c>Rectangle</c> to the invalidated region.
            </summary><param name="rect">The <c>Rectangle</c> to add to the invalidated region.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Arrange(System.Drawing.Rectangle)"><summary>
            Positions child elements and determines a size for the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.
            </summary><param name="finalRect">The final bounds of the element, relative to its parent.</param><remarks>
            Override the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.ArrangeOverride(System.Drawing.Size)" /> method with custom arrange logic.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.ArrangeOverride(System.Drawing.Size)"><summary>
            Positions child elements and determines an arrange size.
            </summary><param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param><returns>The actual size used.</returns><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Arrange(System.Drawing.Rectangle)" /> on each visible child element and position each child element.
            It is required that a parent element calls <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Arrange(System.Drawing.Rectangle)" /> on each child or they won't be rendered.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.ContainsLocation(System.Drawing.Point)"><summary>
            Used with hit-testing, returning whether this element's bounds contains the specified location.
            </summary><param name="location">The <see cref="T:System.Drawing.Point" /> location to examine.</param><returns><c>true</c> if this element's bounds contains the specified location; otherwise, <c>false</c>.
            </returns><remarks>
            Override this method to prevent certain portions of the element's bounds from being included in hit-testing.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.UI.WinForms.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Dispose(System.Boolean)"><summary>
            Disposes any resources used by the object.
            </summary><param name="disposing">Whether the object is being disposed.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.GetCursor(System.Drawing.Point)"><summary>
            Gets the <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.
            </summary><param name="point">The <see cref="T:System.Drawing.Point" /> to examine.</param><returns>The <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Invalidate(ActiproSoftware.UI.WinForms.Controls.InvalidationLevels,ActiproSoftware.UI.WinForms.Controls.InvalidationTypes)"><summary>
            Invalidates the specified states for the element or its related elements.
            </summary><param name="levels">The hierarchy levels at which to invalidate.</param><param name="types">The types of invalidation to perform.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.InvalidateArrange"><summary>
            Invalidates the layout of the element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.InvalidateMeasure"><summary>
            Invalidates the measurement of the element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the element and updates the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.DesiredSize" /> property.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><remarks>
            The <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> method should be called by parents on their children.
            Internally, <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> calls the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)" /> override on the same object, 
            giving it opportunity to compute its <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.DesiredSize" />. 
            This method will return immediately if the child's measurements are valid, previously measured and 
            <c>availableSize</c> is the same as cached. 
            This method also resets the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.IsMeasureValid" /> bit on the child. 
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the size in layout required for child elements and determines a size for the element itself. 
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that this element can give to child elements.
            Infinity can be specified as a value to indicate that the element will size to whatever content is available.
            </param><returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each visible child element and determine the total size required.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnClick(System.EventArgs)"><summary>
            Raises the <c>Click</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnDoubleClick(System.EventArgs)"><summary>
            Raises the <c>DoubleClick</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnHandleCreated(System.EventArgs)"><summary>
            Raises the <c>HandleCreated</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnLayout(System.Windows.Forms.LayoutEventArgs)"><summary>
            Raises the <c>Layout</c> event.
            </summary><param name="e">An <c>LayoutEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnLocationChanged(System.EventArgs)"><summary>
            Raises the <c>LocationChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseDown</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnMouseEnter(System.EventArgs)"><summary>
            Raises the <c>MouseEnter</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnMouseHover(System.EventArgs)"><summary>
            Raises the <c>MouseHover</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnMouseLeave(System.EventArgs)"><summary>
            Raises the <c>MouseLeave</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseMove</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseUp</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseWheel</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnPaint(System.Windows.Forms.PaintEventArgs)"><summary>
            Raises the <c>Paint</c> event.
            </summary><param name="e">An <c>PaintEventArgs</c> that contains the event data.</param><remarks>
            The default implementation of this event sets up a double-buffering canvas and simply
            calls the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnRender(System.Windows.Forms.PaintEventArgs)" /> method.  
            It is sealed to prevent implementors from implementing it.
            All drawing code should be placed in the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnRender(System.Windows.Forms.PaintEventArgs)" /> method.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)"><summary>
            Raises the <c>PaintBackground</c> event.
            </summary><param name="e">An <c>PaintEventArgs</c> that contains the event data.</param><remarks>
            The default implementation of this event does nothing.  
            It is sealed to prevent implementors from implementing it.
            All drawing code should be placed in the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnRender(System.Windows.Forms.PaintEventArgs)" /> method.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnParentChanged"><summary>
            Invoked when logical parent is changed. 
            This is invoked after the parent has changed, and the purpose is to allow elements to perform actions based on the changed parent.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnRenderChildElements(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the child elements.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><remarks>
            This method should not generally be overridden.
            The default implementation of this method calls the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Render(System.Windows.Forms.PaintEventArgs)" /> method on all child elements.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnResize(System.EventArgs)"><summary>
            Raises the <c>Resize</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnRightToLeftChanged(System.EventArgs)"><summary>
            Raises the <c>RightToLeftChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.OnVisibleChanged(System.EventArgs)"><summary>
            Raises the <c>VisibleChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Render(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.ResetDoubleBufferCanvas(System.Boolean)"><summary>
            Resets the double-buffer canvas.
            </summary><param name="recurse">Whether to recurse down into the child control tree.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.ResumePainting"><summary>
            Allows the control to paint itself by clearing the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.PaintingSuspended" /> flag.
            </summary><seealso cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.PaintingSuspended" /></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.SuspendPainting"><summary>
            Prevents the control from painting itself by setting the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.PaintingSuspended" /> flag.
            </summary><seealso cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.PaintingSuspended" /></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.TransformToAncestor(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Returns a <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to an ancestor element.
            </summary><param name="ancestor">The ancestor <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to a ancestor element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.TransformToDescendant(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Returns a <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to a descendant element.
            </summary><param name="descendant">The descendant <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to a descendant element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.UpdateLayout"><summary>
            Call this method to ensure that the whole subtree of elements that includes this <see cref="T:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement" /> is properly updated.
            </summary><remarks>
            This ensures that <see cref="T:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement" /> objects with invalid measure or arrange states will get a call to their 
            <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> and <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Arrange(System.Drawing.Rectangle)" /> methods, and all computed sizes will be validated. 
            This method does nothing if layout is clean but it does work if layout is not clean so avoid 
            calling it after each change in the element tree. 
            It makes sense to either never call it (system will do this in a deferred manner) or only 
            call it if you absolutely need updated sizes and positions after you do all changes.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.ActualHeight"><summary>
            Gets the actual height of the element.
            </summary><value>The actual height of the element.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.ActualWidth"><summary>
            Gets the actual width of the element.
            </summary><value>The actual width of the element.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.BackColor"><summary>
            Gets or sets the background color for the control.
            </summary><value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.BackgroundImage"><summary>
            Gets or sets the background image displayed in the control.
            </summary><value>An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.CaptureMouseWhenPressed"><summary>
            Indicates whether to automatically capture the mouse when the element is pressed.
            </summary><value><c>true</c> if the mouse should automatically be captured when the element is pressed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.ClipBounds"><summary>
            Gets a <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.DesiredSize"><summary>
            Gets the desired size of the element as computed by <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.
            </summary><value>The desired size of the element as computed by <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.</value><remarks>
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.IsMeasureValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.Font"><summary>
            Gets or sets the font of the text displayed by the control.
            </summary><value>The <see cref="T:System.Drawing.Font" /> object to apply to the text displayed by the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.ForeColor"><summary>
            Gets or sets the foreground color for the control.
            </summary><value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.IsArrangeValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.DesiredSize" /> property and position of child elements is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.DesiredSize" /> property and position of child elements is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.InvalidateArrange" />. 
            <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.IsArrangeValid" /> and <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.IsMeasureValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.DesiredSize" /> property is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.DesiredSize" /> property is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.InvalidateMeasure" />. 
            <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.IsArrangeValid" /> and <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.IsPaintValid"><summary>
            Gets whether the control has rendered itself and doesn't have any invalidated paint regions.
            </summary><value><c>true</c> if the control has rendered itself and doesn't have any invalidated paint regions; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.IsRightToLeft"><summary>
            Gets whether the control is using a right-to-left layout.
            </summary><value><c>true</c> if the control is using a right-to-left layout; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.LastMouseUpButton"><summary>
            Gets the <see cref="T:System.Windows.Forms.MouseButtons" /> indicating the last mouse button that was released.
            </summary><value>The <see cref="T:System.Windows.Forms.MouseButtons" /> indicating the last mouse button that was released.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.PaintingSuspended"><summary>
            Gets whether the control is painting itself.
            </summary><value><c>true</c> if the control is painting itself; otherwise, <c>false</c>.</value><remarks>
            If this flag is set, calls to the <c>OnPaint</c> method will be ignored.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.UseControlGraphicsForMeasure"><summary>
            Gets or sets whether to use a call to the control's <c>CreateGraphics</c> method to obtain the <see cref="T:System.Drawing.Graphics" /> used for measure routines.
            </summary><value><c>true</c> if the control's <c>CreateGraphics</c> method should be called; otherwise, <c>false</c>.
            The default value is <c>true</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIControl.UseExtendedDoubleBuffering"><summary>
            Gets or sets whether to use extended double buffering for rendering.
            </summary><value><c>true</c> if extended double buffering should be used; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement"><summary>
            Represents a base <see cref="T:System.Object" /> that has a user interface and implements <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.#ctor"><summary>
            Initializes a new instance of the <c>UIElement</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.AddPendingGraphicsInversion(System.Drawing.Rectangle)"><summary>
            Inverts the canvas using XOR at the end of the current or next drawing operation.
            </summary><param name="bounds">A <c>Rectangle</c> specifying the bounds to invert.</param><returns><c>true</c> if the inversion operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.AddPendingScrollOperation(System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="orientation">The direction to scroll.</param><param name="amount">The amount to scroll.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.AddPendingScrollOperation(System.Drawing.Rectangle,System.Int32,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="xAmount">The amount to scroll horizontally.</param><param name="yAmount">The amount to scroll vertically.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Arrange(System.Drawing.Rectangle)"><summary>
            Positions child elements and determines a size for the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.
            </summary><param name="finalRect">The final bounds of the element, relative to its parent.</param><remarks>
            Override the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.ArrangeOverride(System.Drawing.Size)" /> method with custom arrange logic.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.ArrangeOverride(System.Drawing.Size)"><summary>
            Positions child elements and determines an arrange size.
            </summary><param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param><returns>The actual size used.</returns><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Arrange(System.Drawing.Rectangle)" /> on each visible child element and position each child element.
            It is required that a parent element calls <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Arrange(System.Drawing.Rectangle)" /> on each child or they won't be rendered.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.CaptureMouse"><summary>
            Attaches the mouse capture to the element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.ContainsLocation(System.Drawing.Point)"><summary>
            Used with hit-testing, returning whether this element's bounds contains the specified location.
            </summary><param name="location">The <see cref="T:System.Drawing.Point" /> location to examine.</param><returns><c>true</c> if this element's bounds contains the specified location; otherwise, <c>false</c>.
            </returns><remarks>
            Override this method to prevent certain portions of the element's bounds from being included in hit-testing.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.CreateGraphics"><summary>
            Creates the <see cref="T:System.Drawing.Graphics" /> object for the use with the object.
            </summary><returns>The <see cref="T:System.Drawing.Graphics" /> object for the object.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Dispose(System.Boolean)"><summary>
            Disposes any resources used by the object.
            </summary><param name="disposing">Whether the object is being disposed.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.GetCursor(System.Drawing.Point)"><summary>
            Gets the <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.
            </summary><param name="point">The <see cref="T:System.Drawing.Point" /> to examine.</param><returns>The <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Invalidate"><summary>
            Invalidates the area of the object and causes it to be repainted.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Invalidate(System.Drawing.Rectangle)"><summary>
            Invalidates an area in the object and causes it to be repainted.
            </summary><param name="rect">The bounds of the rectangle to invalidate.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Invalidate(ActiproSoftware.UI.WinForms.Controls.InvalidationLevels,ActiproSoftware.UI.WinForms.Controls.InvalidationTypes)"><summary>
            Invalidates the specified states for the element or its related elements.
            </summary><param name="levels">The hierarchy levels at which to invalidate.</param><param name="types">The types of invalidation to perform.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.InvalidateArrange"><summary>
            Invalidates the layout of the element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.InvalidateMeasure"><summary>
            Invalidates the measurement of the element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the element and updates the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.DesiredSize" /> property.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that this element can give to child elements.
            Infinity can be specified as a value to indicate that the element will size to whatever content is available.
            </param><remarks>
            Override the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)" /> method with custom measure logic.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the size in layout required for child elements and determines a size for the element itself. 
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that this element can give to child elements.
            Infinity can be specified as a value to indicate that the element will size to whatever content is available.
            </param><returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each visible child element and determine the total size required.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.OnClick(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Click" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.OnDoubleClick(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.DoubleClick" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseDown" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.OnMouseEnter(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseEnter" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.OnMouseHover(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseHover" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.OnMouseLeave(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseLeave" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseMove" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseUp" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.OnMouseWheel(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseWheel" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.OnRenderChildElements(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the child elements.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><remarks>
            This method should not generally be overridden.
            The default implementation of this method calls the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Render(System.Windows.Forms.PaintEventArgs)" /> method on all child elements.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.OnResize(System.EventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Resize" /> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.PostArrangeOverride"><summary>
            Allows custom logic to be executed following a successful call to the <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.ArrangeOverride(System.Drawing.Size)" /> method.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.ReleaseMouseCapture"><summary>
            Releases the mouse capture, if any.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Render(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.TransformToAncestor(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Returns a <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to an ancestor element.
            </summary><param name="ancestor">The ancestor <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to a ancestor element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.TransformToDescendant(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Returns a <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to a descendant element.
            </summary><param name="descendant">The descendant <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.</param><returns>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.GeneralTransform" /> from this element to a descendant element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.UpdateLayout"><summary>
            Call this method to ensure that the whole subtree of elements that includes this <see cref="T:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement" /> is properly updated.
            </summary><remarks>
            This ensures that <see cref="T:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement" /> objects with invalid measure or arrange states will get a call to their 
            <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> and <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Arrange(System.Drawing.Rectangle)" /> methods, and all computed sizes will be validated. 
            This method does nothing if layout is clean but it does work if layout is not clean so avoid 
            calling it after each change in the element tree. 
            It makes sense to either never call it (system will do this in a deferred manner) or only 
            call it if you absolutely need updated sizes and positions after you do all changes.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.ActualHeight"><summary>
            Gets the actual height of the element.
            </summary><value>The actual height of the element.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.ActualWidth"><summary>
            Gets the actual width of the element.
            </summary><value>The actual width of the element.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Bounds"><summary>
            Gets a <see cref="T:System.Drawing.Rectangle" /> specifying the bounds of the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the bounds of the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.CaptureMouseWhenPressed"><summary>
            Indicates whether to automatically capture the mouse when the element is pressed.
            </summary><value><c>true</c> if the mouse should automatically be captured when the element is pressed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.ClipBounds"><summary>
            Gets a <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.DesiredSize"><summary>
            Gets the desired size of the element as computed by <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.
            </summary><value>The desired size of the element as computed by <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.</value><remarks>
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.IsMeasureValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.InvalidateOnMouseEvents"><summary>
            Gets whether to invalidate the element when mouse events occur.
            </summary><value><c>true</c> if the element should be invalidated when mouse events occur.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.IsArrangeValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.DesiredSize" /> property and position of child elements is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.DesiredSize" /> property and position of child elements is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.InvalidateArrange" />. 
            <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.IsArrangeValid" /> and <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.IsMeasureValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.DesiredSize" /> property is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.DesiredSize" /> property is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.InvalidateMeasure" />. 
            <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.IsArrangeValid" /> and <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.IsMouseCaptured"><summary>
            Gets whether the element is currently capturing the mouse.
            </summary><value><c>true</c> if the element is currently capturing the mouse; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.IsRightToLeft"><summary>
            Gets whether the element is using a right-to-left layout.
            </summary><value><c>true</c> if the element is using a right-to-left layout; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Size"><summary>
            Gets the actual size of the element.
            </summary><value>The actual size of the element.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.VisualOffset"><summary>
            Gets the X/Y offset of the element relative to its parent element's coordinate system.
            </summary><value>The X/Y offset of the element relative to its parent element's coordinate system.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Click"><summary>
            Occurs when the object is clicked.
            </summary></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.DoubleClick"><summary>
            Occurs when the object is double-clicked.
            </summary></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseDown"><summary>
            Occurs when the mouse pointer is over the object and a mouse button is pressed.
            </summary></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseEnter"><summary>
            Occurs when the mouse pointer enters the object.
            </summary></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseHover"><summary>
            Occurs when the mouse pointer hovers over the object.
            </summary></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseLeave"><summary>
            Occurs when the mouse pointer leaves the object.
            </summary></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseMove"><summary>
            Occurs when the mouse pointer is moved over the object.
            </summary></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseUp"><summary>
            Occurs when the mouse pointer is over the object and a mouse button is released.
            </summary></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseWheel"><summary>
            Occurs when the mouse wheel moves while the object has focus.
            </summary></member><member name="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.Resize"><summary>
            Occurs when the object is resized.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel"><summary>
            Represents a label that is capable of formatting simple HTML tags.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabel</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.ArrangeOverride(System.Drawing.Size)"><summary>
            Positions child elements and determines an arrange size.
            </summary><param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param><returns>The actual size used.</returns><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Arrange(System.Drawing.Rectangle)" /> on each visible child element and position each child element.
            It is required that a parent element calls <see cref="M:ActiproSoftware.UI.WinForms.Controls.IUIElement.Arrange(System.Drawing.Rectangle)" /> on each child or they won't be rendered.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.UI.WinForms.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.GetPreferredSize"><summary>
            Returns the preferred size of the control.
            </summary><returns>A <see cref="T:System.Drawing.Size" /> containing the perferred size of the control.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.OnDownloadImage(ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelDownloadImageEventArgs)"><summary>
            Raises the <c>DownloadImage</c> event.
            </summary><param name="e">An <c>MarkupLabelDownloadImageEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.OnFontChanged(System.EventArgs)"><summary>
            Raises the <c>FontChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.OnLinkClick(ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLinkClickEventArgs)"><summary>
            Raises the <c>LinkClick</c> event.
            </summary><param name="e">An <c>MarkupLabelLinkClickEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.OnResize(System.EventArgs)"><summary>
            Raises the <c>Resize</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.BackColor"><summary>
            Gets or sets the background color for the control.
            </summary><value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.BackgroundImage"><summary>
            Gets or sets the background image displayed in the control.
            </summary><value>An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.Font"><summary>
            Gets or sets the font of the text displayed by the control.
            </summary><value>The <see cref="T:System.Drawing.Font" /> object to apply to the text displayed by the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.ForeColor"><summary>
            Gets or sets the foreground color for the control.
            </summary><value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the control.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.MaxWidth"><summary>
            Gets or sets the maximum width of the element.
            </summary><value>The maximum width of the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.RootElement"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> that is the root element.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> that is the root element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.Text"><summary>
            Gets or sets the markup text to display in the label.
            </summary><value>The markup text to display in the label.</value></member><member name="E:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.DownloadImage"><summary>
            Occurs when an image needs to be downloaded for a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageElement" />.
            </summary><eventdata>
            The event handler receives an argument of type <c>MarkupLabelDownloadImageEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel.LinkClick"><summary>
            Occurs after a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelAnchorElement" /> is clicked.
            </summary><eventdata>
            The event handler receives an argument of type <c>MarkupLabelLinkClickEventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelAnchorElement"><summary>
            Represents a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> for an <c>a</c> element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelAnchorElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelAnchorElement</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelAnchorElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelAnchorElement.GetForeColor(ActiproSoftware.UI.WinForms.Controls.UIElementDrawState)"><summary>
            Gets the foreground <see cref="T:System.Drawing.Color" /> to use for drawing the element.
            </summary><param name="drawState">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> indicating the draw state.</param><returns>The foreground <see cref="T:System.Drawing.Color" /> to use for drawing the element.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelAnchorElement.HRef"><summary>
            Gets or sets the HREF to which the anchor is linked.
            </summary><value>The HREF to which the anchor is linked.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelBodyElement"><summary>
            Represents a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> for a <c>body</c> element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelBodyElement.#ctor(ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel)"><summary>
            Initializes a new instance of the <c>MarkupLabelBodyElement</c> class. 
            </summary><param name="markupLabel">The <see cref="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelBodyElement.MarkupLabel" /> that owns the element.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelBodyElement.GetBackColor(ActiproSoftware.UI.WinForms.Controls.UIElementDrawState)"><summary>
            Gets the background <see cref="T:System.Drawing.Color" /> to use for drawing the element.
            </summary><param name="drawState">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> indicating the draw state.</param><returns>The background <see cref="T:System.Drawing.Color" /> to use for drawing the element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelBodyElement.GetForeColor(ActiproSoftware.UI.WinForms.Controls.UIElementDrawState)"><summary>
            Gets the foreground <see cref="T:System.Drawing.Color" /> to use for drawing the element.
            </summary><param name="drawState">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> indicating the draw state.</param><returns>The foreground <see cref="T:System.Drawing.Color" /> to use for drawing the element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelBodyElement.GetFont(System.String,System.Single,ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontWeight,ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontStyle,ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextDecoration,ActiproSoftware.UI.WinForms.Controls.UIElementDrawState)"><summary>
            Gets the <see cref="T:System.Drawing.Font" /> to use for drawing text in the element.
            </summary><param name="fontFamily">The font family.</param><param name="fontSize">The font size.</param><param name="fontWeight">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontWeight" /> indicating the font weight.</param><param name="fontStyle">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontStyle" /> indicating the font style.</param><param name="textDecoration">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextDecoration" /> indicating the text decoration.</param><param name="drawState">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> indicating the draw state.</param><returns>The <see cref="T:System.Drawing.Font" /> to use for drawing text in the element.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelBodyElement.MarkupLabel"><summary>
            Gets the <see cref="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelBodyElement.MarkupLabel" /> that owns the element.
            </summary><value>The <see cref="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelBodyElement.MarkupLabel" /> that owns the element.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelBoldElement"><summary>
            Represents a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> for a <c>b</c> element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelBoldElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelBoldElement</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelBoldElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData"><summary>
            Provides a store for CSS data.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelCssData</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData.Parse(ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData,System.String)"><summary>
            Parses CSS data into a new <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> object.
            </summary><param name="cssData">A template <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" />.</param><param name="css">The css string of data.</param><returns>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> that was created.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData.BackgroundColor"><summary>
            Gets or sets the background <see cref="T:System.Drawing.Color" />.
            </summary><value>The background <see cref="T:System.Drawing.Color" />.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData.Color"><summary>
            Gets or sets the foreground <see cref="T:System.Drawing.Color" />.
            </summary><value>The foreground <see cref="T:System.Drawing.Color" />.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData.FontFamily"><summary>
            Gets or sets the name of the font family.
            </summary><value>The name of the font family.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData.FontSize"><summary>
            Gets or sets the font size.
            </summary><value>The font size.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData.FontStyle"><summary>
            Gets or sets a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontStyle" /> indicating the font style.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontStyle" /> indicating the font style.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData.FontWeight"><summary>
            Gets or sets a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontWeight" /> indicating the font weight.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontWeight" /> indicating the font weight.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData.TextDecoration"><summary>
            Gets or sets a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextDecoration" /> indicating the text decoration.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextDecoration" /> indicating the text decoration.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelDownloadImageEventArgs"><summary>
            Provides data for <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel" /> download image events.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelDownloadImageEventArgs.#ctor(ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageElement)"><summary>
            Initializes a new instance of the <c>MarkupLabelDownloadImageEventArgs</c> class.
            </summary><param name="element">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageElement" /> that is affected by this event.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelDownloadImageEventArgs.Element"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageElement" /> that is affected by this event.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageElement" /> that is affected by this event.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelDownloadImageEventArgs.Image"><summary>
            Gets or sets the <see cref="T:System.Drawing.Image" /> to display in the element.
            </summary><value>The <see cref="T:System.Drawing.Image" /> to display in the element.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelDownloadImageEventHandler"><summary>
            Represents the method that will handle <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel" /> download image events.
            </summary><param name="sender">Sender of the event.</param><param name="e">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelDownloadImageEventArgs" /> containing event data.</param><remarks>
            When you create a <c>MarkupLabelDownloadImageEventHandler</c> delegate, you identify the method that will handle the event. 
            To associate the event with your event handler, add an instance of the delegate to the event. 
            The event handler is called whenever the event occurs, unless you remove the delegate.
            </remarks></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement"><summary>
            Provides the base class for a <see cref="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.MarkupLabel" /> element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>MarkupLabelElement</c> class. 
            </summary><param name="elementName">The name of the element represented by this class.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.UI.WinForms.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.CreateUIElement(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Creates the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> tree from the element.
            </summary><param name="parentUIElement">The parent <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.GetBackColor(ActiproSoftware.UI.WinForms.Controls.UIElementDrawState)"><summary>
            Gets the background <see cref="T:System.Drawing.Color" /> to use for drawing the element.
            </summary><param name="drawState">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> indicating the draw state.</param><returns>The background <see cref="T:System.Drawing.Color" /> to use for drawing the element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.GetForeColor(ActiproSoftware.UI.WinForms.Controls.UIElementDrawState)"><summary>
            Gets the foreground <see cref="T:System.Drawing.Color" /> to use for drawing the element.
            </summary><param name="drawState">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> indicating the draw state.</param><returns>The foreground <see cref="T:System.Drawing.Color" /> to use for drawing the element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.GetFont(System.String,System.Single,ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontWeight,ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontStyle,ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextDecoration,ActiproSoftware.UI.WinForms.Controls.UIElementDrawState)"><summary>
            Gets the <see cref="T:System.Drawing.Font" /> to use for drawing text in the element.
            </summary><param name="fontFamily">The font family.</param><param name="fontSize">The font size.</param><param name="fontWeight">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontWeight" /> indicating the font weight.</param><param name="fontStyle">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontStyle" /> indicating the font style.</param><param name="textDecoration">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextDecoration" /> indicating the text decoration.</param><param name="drawState">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> indicating the draw state.</param><returns>The <see cref="T:System.Drawing.Font" /> to use for drawing text in the element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.GetFont"><summary>
            Gets the <see cref="T:System.Drawing.Font" /> to use for drawing text in the element.
            </summary><returns>The <see cref="T:System.Drawing.Font" /> to use for drawing text in the element.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.Children"><summary>
            Gets the collection of child objects.
            </summary><value>The collection of child objects.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.ClassName"><summary>
            Gets or sets the class name of the element.
            </summary><value>The class name of the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.CssData"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> specifying CSS data for the element.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> specifying CSS data for the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.ElementName"><summary>
            Gets the name of the element represented by this class.
            </summary><value>The name of the element represented by this class.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.Id"><summary>
            Gets or sets the id of the element.
            </summary><value>The id of the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.MarkupLabel"><summary>
            Gets the <see cref="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.MarkupLabel" /> that owns the element.
            </summary><value>The <see cref="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.MarkupLabel" /> that owns the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.Parent"><summary>
            Gets or sets the object that is parent to this object.
            </summary><value>The object that is parent to this object.</value><remarks>
            The setter of this property is reserved for internal use only.
            </remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.Style"><summary>
            Gets or sets the CSS style string for the element.
            </summary><value>The CSS style string for the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement.VerticalAlignment"><summary>
            Gets or sets a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElementVerticalAlignment" /> indicating the vertical alignment.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElementVerticalAlignment" /> indicating the vertical alignment.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElementVerticalAlignment"><summary>
            Specifies how an object or text in a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel" /> is vertically aligned.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElementVerticalAlignment.Top"><summary>
            The object or text is aligned to the top.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElementVerticalAlignment.Middle"><summary>
            The object or text is aligned in the middle.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElementVerticalAlignment.Bottom"><summary>
            The object or text is aligned to the bottom.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElementVerticalAlignment.Baseline"><summary>
            The object or text is aligned to the baseline.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelEmphasisElement"><summary>
            Represents a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> for an <c>em</c> element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelEmphasisElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelEmphasisElement</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelEmphasisElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontStyle"><summary>
            Specifies the font style.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontStyle.Inherit"><summary>
            Inherits the font style.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontStyle.Normal"><summary>
            Normal font style.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontStyle.Italic"><summary>
            Italic font style.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontWeight"><summary>
            Specifies the font weight.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontWeight.Inherit"><summary>
            Inherits the font weight.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontWeight.Normal"><summary>
            Normal font weight.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelFontWeight.Bold"><summary>
            Bold font weight.
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageElement"><summary>
            Represents a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> for an <c>img</c> element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelImageElement</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageElement.CreateUIElement(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Creates the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> tree from the element.
            </summary><param name="parentUIElement">The parent <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageElement.Align"><summary>
            Gets or sets the alignment of the image.
            </summary><value>The alignment of the image.</value><remarks>Only the <c>baseline</c> and <c>absbottom</c> values are supported.</remarks></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageElement.Src"><summary>
            Gets or sets the HREF for the source of the image.
            </summary><value>The HREF for the source of the image.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageUIElement"><summary>
            Provides a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement" /> for an image.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageUIElement.#ctor(ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement,System.Drawing.Image)"><summary>
            Initializes a new instance of the <c>MarkupLabelImageUIElement</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> that owns this element.</param><param name="image">The image of the element.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageUIElement.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the size in layout required for child elements and determines a size for the element itself. 
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that this element can give to child elements.
            Infinity can be specified as a value to indicate that the element will size to whatever content is available.
            </param><returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageUIElement.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageUIElement.Descent"><summary>
            Gets the descent from the baseline that the element has.
            </summary><value>The descent from the baseline that the element has.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelImageUIElement.Image"><summary>
            Gets the <see cref="T:System.Drawing.Image" /> represented by this element.
            </summary><value>The <see cref="T:System.Drawing.Image" /> represented by this element.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelItalicElement"><summary>
            Represents a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> for an <c>i</c> element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelItalicElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelItalicElement</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelItalicElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLineBreakElement"><summary>
            Represents a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> for a <c>br</c> element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLineBreakElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelLineBreakElement</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLineBreakElement.CreateUIElement(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Creates the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> tree from the element.
            </summary><param name="parentUIElement">The parent <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.</param></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLineBreakUIElement"><summary>
            Provides a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement" /> for line break.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLineBreakUIElement.#ctor(ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement)"><summary>
            Initializes a new instance of the <c>MarkupLabelLineBreakUIElement</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> that owns this element.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLineBreakUIElement.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the size in layout required for child elements and determines a size for the element itself. 
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that this element can give to child elements.
            Infinity can be specified as a value to indicate that the element will size to whatever content is available.
            </param><returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLineBreakUIElement.Descent"><summary>
            Gets the descent from the baseline that the element has.
            </summary><value>The descent from the baseline that the element has.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLineBreakUIElement.HardLineBreakBefore"><summary>
            Gets whether a hard line break should occur before the element.
            </summary><value><c>true</c> if a hard line break should occur before the element; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLinkClickEventArgs"><summary>
            Provides data for <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel" /> link click events.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLinkClickEventArgs.#ctor(ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelAnchorElement)"><summary>
            Initializes a new instance of the <c>MarkupLabelLinkClickEventArgs</c> class.
            </summary><param name="element">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelAnchorElement" /> that is affected by this event.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLinkClickEventArgs.Element"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelAnchorElement" /> that is affected by this event.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelAnchorElement" /> that is affected by this event.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLinkClickEventHandler"><summary>
            Represents the method that will handle <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel" /> link click events.
            </summary><param name="sender">Sender of the event.</param><param name="e">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelLinkClickEventArgs" /> containing event data.</param><remarks>
            When you create a <c>MarkupLabelLinkClickEventHandler</c> delegate, you identify the method that will handle the event. 
            To associate the event with your event handler, add an instance of the delegate to the event. 
            The event handler is called whenever the event occurs, unless you remove the delegate.
            </remarks></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelSpanElement"><summary>
            Represents a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> for a <c>span</c> element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelSpanElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelSpanElement</c> class. 
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelStrongElement"><summary>
            Represents a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> for a <c>strong</c> element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelStrongElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelStrongElement</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelStrongElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextDecoration"><summary>
            Specifies the text decoration.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextDecoration.Inherit"><summary>
            Inherits the text decoration.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextDecoration.None"><summary>
            Produces no text decoration.
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextDecoration.Underline"><summary>
            Each line of text is underlined. 
            </summary></member><member name="F:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextDecoration.LineThrough"><summary>
            Each line of text has a line through the middle. 
            </summary></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextElement"><summary>
            Represents a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> for raw text.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelTextElement</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextElement.CreateUIElement(ActiproSoftware.UI.WinForms.Controls.IUIElement)"><summary>
            Creates the <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" /> tree from the element.
            </summary><param name="parentUIElement">The parent <see cref="T:ActiproSoftware.UI.WinForms.Controls.IUIElement" />.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextElement.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextElement.Text"><summary>
            Gets or sets the text represented by the element.
            </summary><value>The text represented by the element.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextUIElement"><summary>
            Provides a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement" /> for text.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextUIElement.#ctor(ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement,System.String)"><summary>
            Initializes a new instance of the <c>MarkupLabelTextUIElement</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> that owns this element.</param><param name="text">The text of the element.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextUIElement.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the size in layout required for child elements and determines a size for the element itself. 
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that this element can give to child elements.
            Infinity can be specified as a value to indicate that the element will size to whatever content is available.
            </param><returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextUIElement.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextUIElement.ClipBounds"><summary>
            Gets a <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextUIElement.Descent"><summary>
            Gets the descent from the baseline that the element has.
            </summary><value>The descent from the baseline that the element has.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelTextUIElement.Text"><summary>
            Gets the text of the element.
            </summary><value>The text of the element.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement"><summary>
            Provides the base class for a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabel" /><see cref="T:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement" />.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement.#ctor(ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement)"><summary>
            Initializes a new instance of the <c>MarkupLabelUIElement</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> that owns this element.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement.GetCursor(System.Drawing.Point)"><summary>
            Gets the <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.
            </summary><value>The <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.</value></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement.GetDrawState"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> for the element.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.UIElementDrawState" /> for the element.</value></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement.MeasureOverride(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the size in layout required for child elements and determines a size for the element itself. 
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that this element can give to child elements.
            Infinity can be specified as a value to indicate that the element will size to whatever content is available.
            </param><returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.UI.WinForms.Controls.Primitives.UIElement.MouseUp" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement.CaptureMouseWhenPressed"><summary>
            Indicates whether to automatically capture the mouse when the element is pressed.
            </summary><value><c>true</c> if the mouse should automatically be captured when the element is pressed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement.Descent"><summary>
            Gets the descent from the baseline that the element has.
            </summary><value>The descent from the baseline that the element has.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement.Element"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> that owns this element.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> that owns this element.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement.InvalidateOnMouseEvents"><summary>
            Gets whether to invalidate the element when mouse events occur.
            </summary><value><c>true</c> if the element should be invalidated when mouse events occur.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement.HardLineBreakBefore"><summary>
            Gets whether a hard line break should occur before the element.
            </summary><value><c>true</c> if a hard line break should occur before the element; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUnderlineElement"><summary>
            Represents a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> for a <c>u</c> element.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUnderlineElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelUnderlineElement</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUnderlineElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelWhitespaceUIElement"><summary>
            Provides a <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelUIElement" /> for whitespace.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelWhitespaceUIElement.#ctor(ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement)"><summary>
            Initializes a new instance of the <c>MarkupLabelWhitespaceUIElement</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.MarkupLabel.MarkupLabelElement" /> that owns this element.</param></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command"><summary>
            Represents a command.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.Command.#ctor"><summary>
            Initializes a new instance of the <c>Command</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.Command.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>Command</c> class. 
            </summary><param name="name">The name of the command.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.Command.Name"><summary>
            Gets the name of the command.
            </summary><value>The name of the command.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandEventArgs"><summary>
            Provides data for <see cref="P:ActiproSoftware.UI.WinForms.Controls.Commands.CommandEventArgs.Command" /> events.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandEventArgs.#ctor(ActiproSoftware.UI.WinForms.Controls.Commands.Command)"><summary>
            Initializes a new instance of the <c>CommandEventArgs</c> class.
            </summary><param name="command">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> that is affected by this event.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.CommandEventArgs.Command"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> that is affected by this event.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> that is affected by this event.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandEventHandler"><summary>
            Represents the method that will handle <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> events.
            </summary><param name="sender">Sender of the event.</param><param name="e">A <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandEventArgs" /> containing event data.</param><remarks>
            When you create a <c>CommandEventHandler</c> delegate, you identify the method that will handle the event. 
            To associate the event with your event handler, add an instance of the delegate to the event. 
            The event handler is called whenever the event occurs, unless you remove the delegate.
            </remarks></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink"><summary>
            Represents a command link.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink.#ctor"><summary>
            Initializes a new instance of the <c>CommandLink</c> class. 
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink.#ctor(ActiproSoftware.UI.WinForms.Controls.Commands.Command)"><summary>
            Initializes a new instance of the <c>CommandLink</c> class. 
            </summary><param name="command">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> being linked.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink.#ctor(ActiproSoftware.UI.WinForms.Controls.Commands.Command,System.Windows.Forms.Keys,ActiproSoftware.UI.WinForms.Input.ModifierKeys)"><summary>
            Initializes a new instance of the <c>CommandLink</c> class. 
            </summary><param name="command">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> being linked.</param><param name="key">The key.</param><param name="modifiers">The modifier keys.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink.#ctor(ActiproSoftware.UI.WinForms.Controls.Commands.Command,ActiproSoftware.UI.WinForms.Controls.Commands.KeyBinding)"><summary>
            Initializes a new instance of the <c>CommandLink</c> class. 
            </summary><param name="command">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> being linked.</param><param name="keyBinding">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.KeyBinding" /> to use for the command link.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink.#ctor(ActiproSoftware.UI.WinForms.Controls.Commands.Command,ActiproSoftware.UI.WinForms.Controls.Commands.KeyBinding,ActiproSoftware.UI.WinForms.Controls.Commands.MouseBinding)"><summary>
            Initializes a new instance of the <c>CommandLink</c> class. 
            </summary><param name="command">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> being linked.</param><param name="keyBinding">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.KeyBinding" /> to use for the command link.</param><param name="mouseBinding">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.MouseBinding" /> to use for the command link.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink.Checked"><summary>
            Gets or sets whether the command link is in a checked state.
            </summary><value><c>true</c> if the command link is in a checked state; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink.Command"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> being linked.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> being linked.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink.Enabled"><summary>
            Gets or sets whether the command link is in an enabled state.
            </summary><value><c>true</c> if the command link is in an enabled state; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink.KeyBinding"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.KeyBinding" /> to use for the command link.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.KeyBinding" /> to use for the command link.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink.MouseBinding"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.MouseBinding" /> to use for the command link.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.MouseBinding" /> to use for the command link.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection"><summary>
            Encapsulates a collection of <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> items.
            </summary><remarks>
            This class is a zero-based indexed collection. 
            </remarks><seealso cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection.#ctor"><summary>
            Initializes a new instance of the <c>CommandLinkCollection</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection.Add(ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink)"><summary>
            Adds the specified <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> to the collection. 
            </summary><param name="commandLink">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> to add to the collection.</param><returns>
            The position into which the new item was inserted.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection.AddRange(ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink[])"><summary>
            Adds an array of <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> objects to the collection. 
            </summary><param name="commandLinks">The array of <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> objects to add to the collection.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection.Contains(ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink)"><summary>
            Returns whether the collection contains the specified <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" />.
            </summary><param name="commandLink">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> to look for in the collection.</param><returns><c>true</c> if the collection contains the specified <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" />; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection.FilterModifierKeys(System.Windows.Forms.Keys)"><summary>
            Filters out the CTRL, SHIFT, and ALT modifier keys from a <c>Keys</c> specification.
            </summary><param name="keyCode">The <c>Keys</c> to filter.</param><returns>The filtered <c>Keys</c>.</returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection.GetApplicableCommandLinks(System.Windows.Forms.Keys)"><summary>
            Returns an array of the applicable <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> objects for the specified criteria.
            </summary><param name="keyCode">The keyboard code of the key that is pressed.</param><returns>
            An array of the applicable <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> objects for the specified criteria.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection.GetCurrentModifierKeys"><summary>
            Returns the currently-pressed modifier keys.
            </summary><returns>
            A <see cref="T:ActiproSoftware.UI.WinForms.Input.ModifierKeys" /> containing the currently-pressed modifier keys.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection.GetModifierKeys(System.Windows.Forms.Keys)"><summary>
            Returns the modifier keys.
            </summary><param name="keyCode">The keyboard code of the key that is pressed.</param><returns>
            A <see cref="T:ActiproSoftware.UI.WinForms.Input.ModifierKeys" /> containing the modifier keys.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection.IndexOf(ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink)"><summary>
            Returns the index of the specified <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> in the collection.
            </summary><param name="commandLink">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> to look for.</param><returns>
            If found, the index where the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> is in the collection; otherwise, <c>-1</c>. 
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection.IndexOf(ActiproSoftware.UI.WinForms.Controls.Commands.Command)"><summary>
            Searches for a <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> for the specified <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> and returns 
            the zero-based index of the first occurrence within the entire collection.
            </summary><param name="command">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> to locate in the collection.</param><returns>
            The zero-based index of the first occurrence of a <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> for the specified <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" />
            within the entire collection, if found; otherwise, <c>-1</c>.
            </returns></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection.Insert(System.Int32,ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink)"><summary>
            Inserts a <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> into the collection at the specified index.
            </summary><param name="index">The zero-based index at which the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> should be inserted.</param><param name="commandLink">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> to insert into the collection.</param></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection.Remove(ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink)"><summary>
            Removes the specified <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> from the collection.
            </summary><param name="commandLink">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> to remove from the collection.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection.Item(System.Int32)"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> at the specified index. 
            <para>
            [C#] In C#, this property is the indexer for the <c>CommandLinkCollection</c> class. 
            </para></summary><param name="index">The index of the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> to return.</param><value>
            The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLink" /> at the specified index. 
            </value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Commands.ICommandTarget"><summary>
            Provides the base requirements for a command target.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.ICommandTarget.RaiseCommand(ActiproSoftware.UI.WinForms.Controls.Commands.Command)"><summary>
            Raises the specified <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" />.
            </summary><param name="command">The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> to raise.</param><returns><c>true</c> if the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.Command" /> was handled; otherwise, <c>false</c>.
            </returns></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.ICommandTarget.CommandLinks"><summary>
            Gets a <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection" /> containing the command links associated with the object.
            </summary><value>A <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.CommandLinkCollection" /> containing the command links associated with the object.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.ICommandTarget.ForwardCommandsTo"><summary>
            Gets the <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.ICommandTarget" /> to forward commands to.
            </summary><value>The <see cref="T:ActiproSoftware.UI.WinForms.Controls.Commands.ICommandTarget" /> to forward commands to.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Commands.KeyBinding"><summary>
            Represents a key binding.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.KeyBinding.#ctor(ActiproSoftware.UI.WinForms.Input.ModifierKeys,System.Windows.Forms.Keys)"><summary>
            Initializes a new instance of the <c>KeyBinding</c> class. 
            </summary><param name="modifiers">The modifier keys.</param><param name="key">The key.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.KeyBinding.Modifiers"><summary>
            Gets the modifier keys.
            </summary><value>The modifier keys.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.KeyBinding.Key"><summary>
            Gets the key.
            </summary><value>The key.</value></member><member name="T:ActiproSoftware.UI.WinForms.Controls.Commands.MouseBinding"><summary>
            Represents a mouse binding.
            </summary></member><member name="M:ActiproSoftware.UI.WinForms.Controls.Commands.MouseBinding.#ctor(ActiproSoftware.UI.WinForms.Input.ModifierKeys,ActiproSoftware.UI.WinForms.Input.MouseAction)"><summary>
            Initializes a new instance of the <c>MouseBinding</c> class. 
            </summary><param name="modifiers">The modifier keys.</param><param name="action">The mouse action.</param></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.MouseBinding.Action"><summary>
            Gets the mouse action.
            </summary><value>The mouse action.</value></member><member name="P:ActiproSoftware.UI.WinForms.Controls.Commands.MouseBinding.Modifiers"><summary>
            Gets the modifier keys.
            </summary><value>The modifier keys.</value></member><member name="T:ActiproSoftware.Products.ActiproLicense"><summary>
            Represents a license for Actipro Software components.
            </summary></member><member name="M:ActiproSoftware.Products.ActiproLicense.Finalize"><summary>
            Destroys the instance of the <c>ActiproLicense</c> class.
            </summary></member><member name="M:ActiproSoftware.Products.ActiproLicense.Dispose"><summary>
            Releases all resources used by the object.
            </summary></member><member name="M:ActiproSoftware.Products.ActiproLicense.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.Products.ActiproLicense.GetDetails"><summary>
            Returns details about the license.
            </summary><returns>Details about the license.</returns></member><member name="M:ActiproSoftware.Products.ActiproLicense.GetQuickInfo"><summary>
            Gets the license quick info string.
            </summary><returns>The license quick info string.</returns></member><member name="M:ActiproSoftware.Products.ActiproLicense.SetExceptionType(System.Int32)"><summary>
            Sets the specified exception type to the license.
            </summary><param name="value">The exception type to set.</param><remarks>
            This method allows for the setting of an exception after the license has been created.
            </remarks></member><member name="P:ActiproSoftware.Products.ActiproLicense.ExpirationDate"><summary>
            Gets the expiration date.
            </summary><value>The expiration date.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.ExpandedLicenseKey"><summary>
            Gets the expanded license key.
            </summary><value>The expanded license key.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.IsUnlicensedProduct"><summary>
            Gets whether the license is for an unlicensed product, but another related product is licensed.
            </summary><value><c>true</c> if the license is for an unlicensed product, but another related product is licensed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Products.ActiproLicense.IsValid"><summary>
            Gets whether the license is valid.
            </summary><value><c>true</c> if the license is valid; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Products.ActiproLicense.IsSiteLicense"><summary>
            Gets whether the license is a site license.
            </summary><value><c>true</c> if the license is a site license; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Products.ActiproLicense.LicenseCount"><summary>
            Gets the number of licenses provided by the license key.
            </summary><value>The number of licenses provided by the license key.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.Licensee"><summary>
            Gets the name of the licensee.
            </summary><value>The name of the licensee.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.LicenseKey"><summary>
            Gets the compacted license key.
            </summary><value>The compacted license key.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.LicenseType"><summary>
            Gets the type of license.
            </summary><value>The type of license.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.MajorVersion"><summary>
            Gets the major version for which the license applies.
            </summary><value>The major version for which the license applies.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.MinorVersion"><summary>
            Gets the minor version for which the license applies.
            </summary><value>The minor version for which the license applies.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.SourceLocation"><summary>
            Gets the location from where the license was obtained.
            </summary><value>The location from where the license was obtained.</value></member><member name="T:ActiproSoftware.Products.ActiproLicenseManager"><summary>
            Represents a license manager for Actipro Software components.
            </summary></member><member name="M:ActiproSoftware.Products.ActiproLicenseManager.AddHintAssemblyName(System.String)"><summary>
            Adds an assembly name to the hint list to check in the app domain for licensing.
            </summary><param name="assemblyName">The assembly name.</param><remarks>
            Hint assemblies are checked first in the event the entry assembly doesn't contain license information.
            </remarks></member><member name="M:ActiproSoftware.Products.ActiproLicenseManager.GetWatermarkText(ActiproSoftware.Products.AssemblyLicenseType)"><summary>
            This method is for internal use only.
            </summary><param name="licenseType">Parameter</param><returns>Return value.</returns></member><member name="M:ActiproSoftware.Products.ActiproLicenseManager.RegisterLicense(System.String,System.String)"><summary>
            Registers a licensee and license key.
            </summary><param name="licensee">The licensee.</param><param name="licenseKey">The license key.</param></member><member name="M:ActiproSoftware.Products.ActiproLicenseManager.RegisterLicense(ActiproSoftware.Products.AssemblyInfo,System.String,System.String)"><summary>
            Registers a licensee and license key for a specified product.
            </summary><param name="assemblyInfo">The <see cref="T:ActiproSoftware.Products.AssemblyInfo" /> indicating the target product for which the license information is being registered.</param><param name="licensee">The licensee.</param><param name="licenseKey">The license key.</param><remarks>
            Only call this method when you have a full license for the targeted product.
            </remarks></member><member name="M:ActiproSoftware.Products.ActiproLicenseManager.ValidateLicense(ActiproSoftware.Products.AssemblyInfo,System.Type,System.Object)"><summary>
            This method is for internal use only.
            </summary><param name="assemblyInfo">Parameter.</param><param name="type">Parameter.</param><param name="instance">Parameter.</param><returns>Return value.</returns></member><member name="T:ActiproSoftware.Products.ActiproLicenseProvider"><summary>
            Represents a license provider for Actipro Software components.
            </summary></member><member name="M:ActiproSoftware.Products.ActiproLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)"><summary>
            Returns a license for the instance of the component, if one is available.
            </summary><param name="context">A <see cref="T:System.ComponentModel.LicenseContext" /> that specifies where you can use the licensed object.</param><param name="type">A <see cref="T:System.Type" /> that represents the component requesting the license.</param><param name="instance">An object that is requesting the license.</param><param name="allowExceptions"><c>true</c> if a <see cref="T:ActiproSoftware.Products.LicenseException" /> should be thrown when the component cannot be granted a license; otherwise, <c>false</c>.</param><returns>
            A valid <see cref="T:System.ComponentModel.License" />. If this method cannot find a valid <see cref="T:System.ComponentModel.License" /> or a valid context parameter, 
            it returns <see langword="null" />.
            </returns></member><member name="T:ActiproSoftware.Products.ActiproLicenseSourceLocation"><summary>
            Specifies where a license was obtained.
            </summary></member><member name="F:ActiproSoftware.Products.ActiproLicenseSourceLocation.None"><summary>
            No license was obtained.
            </summary></member><member name="F:ActiproSoftware.Products.ActiproLicenseSourceLocation.Fixed"><summary>
            The license was set programmatically.
            </summary></member><member name="F:ActiproSoftware.Products.ActiproLicenseSourceLocation.Registry"><summary>
            The license was obtained from the registry.
            </summary></member><member name="F:ActiproSoftware.Products.ActiproLicenseSourceLocation.AssemblySavedContext"><summary>
            The license was obtained from an assembly saved context.
            </summary></member><member name="T:ActiproSoftware.Products.ActiproLicenseToken"><summary>
            Represents a license token class that needs to be referenced in Visual Studio licenses.licx files to license an assembly.
            </summary></member><member name="M:ActiproSoftware.Products.ActiproLicenseToken.#ctor"><summary>
            Initializes a new instance of the <c>ActiproLicenseToken</c> class.
            </summary></member><member name="T:ActiproSoftware.Products.ActiproLicenseValidator"><summary>
            Represents a license validator for Actipro Software components.
            </summary></member><member name="M:ActiproSoftware.Products.ActiproLicenseValidator.ValidateLicense(ActiproSoftware.Products.AssemblyInfo,System.Type,System.Object)"><summary>
            This method is for internal use only.
            </summary><param name="assemblyInfo">Parameter.</param><param name="type">Parameter.</param><param name="instance">Parameter.</param><returns>Return value.</returns></member><member name="T:ActiproSoftware.Products.AssemblyInfo"><summary>
            Provides a base class for retrieving information about an assembly.
            </summary></member><member name="M:ActiproSoftware.Products.AssemblyInfo.GetAssemblyVersion"><summary>
            Returns the <see cref="P:ActiproSoftware.Products.AssemblyInfo.Version" /> of the assembly.
            </summary><value>The <see cref="P:ActiproSoftware.Products.AssemblyInfo.Version" /> of the assembly.</value></member><member name="M:ActiproSoftware.Products.AssemblyInfo.GetCursor(System.String)"><summary>
            Gets a <see cref="T:System.Windows.Forms.Cursor" /> from the resources.
            </summary><param name="name">The name of the resource to get.</param><returns>The <see cref="T:System.Windows.Forms.Cursor" /> resource that was retrieved.</returns></member><member name="M:ActiproSoftware.Products.AssemblyInfo.GetIcon(System.String)"><summary>
            Gets an <see cref="T:System.Drawing.Icon" /> from the resources.
            </summary><param name="name">The name of the resource to get.</param><returns>The <see cref="T:System.Drawing.Icon" /> resource that was retrieved.</returns></member><member name="M:ActiproSoftware.Products.AssemblyInfo.GetImage(System.String)"><summary>
            Gets an <see cref="T:System.Drawing.Image" /> from the resources.
            </summary><param name="name">The name of the resource to get.</param><returns>The <see cref="T:System.Drawing.Image" /> resource that was retrieved.</returns></member><member name="M:ActiproSoftware.Products.AssemblyInfo.ShowLicenseWindow(ActiproSoftware.Products.ActiproLicense)"><summary>
            Shows the license window for the assembly.
            </summary><param name="license">The license for which the window should display information.</param><returns><c>true</c> if an evaluation was started; otherwise, <c>false</c>.
            </returns></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Assembly"><summary>
            Gets the assembly.
            </summary><value>The assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Copyright"><summary>
            Gets the copyright of the assembly.
            </summary><value>The copyright of the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Description"><summary>
            Gets the description of the assembly.
            </summary><value>The description of the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.LicenseType"><summary>
            Gets the type of license that is available for the assembly.
            </summary><value>A <see cref="T:ActiproSoftware.Products.AssemblyLicenseType" /> specifying the type of license that is available for the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Platform"><summary>
            Gets the target platform for the assembly.
            </summary><value>A <see cref="T:ActiproSoftware.Products.AssemblyPlatform" /> specifying the target platform for the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Product"><summary>
            Gets the product of the assembly.
            </summary><value>The product of the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.ProductCode"><summary>
            Gets the product code of the assembly.
            </summary><value>A three-letter product code of the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.ProductId"><summary>
            Gets the product ID of the assembly.
            </summary><value>The product ID of the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Title"><summary>
            Gets the title of the assembly.
            </summary><value>The title of the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Version"><summary>
            Gets the version of the assembly.
            </summary><value>The version of the assembly.</value></member><member name="T:ActiproSoftware.Products.AssemblyLicenseType"><summary>
            Specifies the kind of license for an assembly.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyLicenseType.Invalid"><summary>
            An invalid assembly license type.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyLicenseType.Beta"><summary>
            An assembly for beta testing.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyLicenseType.Prerelease"><summary>
            A pre-release version of an assembly.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyLicenseType.Evaluation"><summary>
            An evaluation copy of a release version.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyLicenseType.Full"><summary>
            A full copy of a release version that may be licensed.
            </summary></member><member name="T:ActiproSoftware.Products.AssemblyPlatform"><summary>
            Specifies the target platform for an assembly.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyPlatform.Invalid"><summary>
            An invalid platform.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyPlatform.WindowsForms"><summary>
            Windows Forms.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyPlatform.AspNet"><summary>
            ASP.NET.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyPlatform.Wpf"><summary>
            Windows Presentation Foundation.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyPlatform.Silverlight"><summary>
            Silverlight.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyPlatform.Universal"><summary>
            Universal Windows and WinRT.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyPlatform.Independent"><summary>
            Independent (not platform-specific).
            </summary></member><member name="T:ActiproSoftware.Products.LicenseException"><summary>
            An exception that is thrown when licensing is invalid.
            </summary></member><member name="M:ActiproSoftware.Products.LicenseException.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>LicenseException</c> class with a specified error message.
            </summary><param name="message">The error message that explains the reason for the exception.</param></member><member name="M:ActiproSoftware.Products.LicenseException.#ctor(System.Type,System.String)"><summary>
            Initializes a new instance of the <c>LicenseException</c> class with a specified licensed <c>Type</c> and error message.
            </summary><param name="type">The licensed <c>Type</c>.</param><param name="message">The error message that explains the reason for the exception.</param></member><member name="T:ActiproSoftware.Products.ProductData"><summary>
            Stores data about a product.
            </summary></member><member name="P:ActiproSoftware.Products.ProductData.Description"><summary>
            Gets or sets the description of the product.
            </summary><value>The description of the product.</value></member><member name="P:ActiproSoftware.Products.ProductData.ImageSource"><summary>
            Gets or sets the image source.
            </summary><value>The image source.</value></member><member name="P:ActiproSoftware.Products.ProductData.IsLicensed"><summary>
            Gets or sets whether the product is licensed.
            </summary><value><c>true</c> if the product is licensed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Products.ProductData.Name"><summary>
            Gets or sets the name of the product.
            </summary><value>The name of the product.</value></member><member name="P:ActiproSoftware.Products.ProductData.UseEmphasis"><summary>
            Gets or sets whether to use emphasis.
            </summary><value><c>true</c> if emphasis should be used; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.Products.SRBase"><summary>
            Provides an abstract base class for accessing the string resources of an assembly, along with customization capabilities.
            </summary></member><member name="M:ActiproSoftware.Products.SRBase.ClearCustomStringsCore"><summary>
            Removes all custom strings.
            </summary></member><member name="M:ActiproSoftware.Products.SRBase.ContainsCustomStringCore(System.String)"><summary>
            Returns whether a custom string is defined for the specified string resource.
            </summary><param name="name">The name of the resource for which to search.</param><returns><c>true</c> if a custom string is defined for the specified string resource; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Products.SRBase.GetCustomStringCore(System.String)"><summary>
            Returns custom string that is stored for the specified string resource, if any.
            </summary><param name="name">The name of the resource to get.</param><returns>The custom string that is stored for the specified string resource, if any.</returns></member><member name="M:ActiproSoftware.Products.SRBase.GetStringCore(System.String,System.Object[])"><summary>
            Returns the resolved value of the specified string resource, by calling <c>String.Format</c> using supplied arguments.
            </summary><param name="name">The name of the resource to get.</param><param name="args">The arguments to pass to <c>String.Format</c>.</param><returns>
            The value of the resource localized for the caller's current culture settings. 
            If a best match is not possible, <see langword="null" /> is returned.
            </returns></member><member name="M:ActiproSoftware.Products.SRBase.RemoveCustomStringCore(System.String)"><summary>
            Removes any custom string that is defined for the specified string resource.
            </summary><param name="name">The name of the resource to remove.</param></member><member name="M:ActiproSoftware.Products.SRBase.SetCustomStringCore(System.String,System.String)"><summary>
            Sets a custom string value for the specified string resource.
            </summary><param name="name">The name of the resource to set.</param><param name="value">The value of the resource to set.</param></member><member name="P:ActiproSoftware.Products.SRBase.ResourceManager"><summary>
            Gets the <see cref="P:ActiproSoftware.Products.SRBase.ResourceManager" /> that provides the default resources. 
            </summary><value>The <see cref="P:ActiproSoftware.Products.SRBase.ResourceManager" /> that provides the default resources.</value></member><member name="T:ActiproSoftware.Products.Shared.AssemblyInfo"><summary>
            Provides a class for retrieving information about the <c>ActiproSoftware.Shared</c> assembly.
            </summary></member><member name="M:ActiproSoftware.Products.Shared.AssemblyInfo.GetCursor(ActiproSoftware.Products.Shared.CursorResource)"><summary>
            Gets a <see cref="T:System.Windows.Forms.Cursor" /> from the resources.
            </summary><param name="cursor">The type of the cursor resource to get.</param><returns>The <see cref="T:System.Windows.Forms.Cursor" /> resource that was retrieved.</returns></member><member name="P:ActiproSoftware.Products.Shared.AssemblyInfo.Instance"><summary>
            Gets the instance of the <see cref="T:ActiproSoftware.Products.AssemblyInfo" /> class for this assembly.
            </summary><value>The instance of the <see cref="T:ActiproSoftware.Products.AssemblyInfo" /> class for this assembly.</value></member><member name="P:ActiproSoftware.Products.Shared.AssemblyInfo.LicenseType"><summary>
            Gets the type of license that is available for the assembly.
            </summary><value>A <see cref="T:ActiproSoftware.Products.AssemblyLicenseType" /> specifying the type of license that is available for the assembly.</value></member><member name="P:ActiproSoftware.Products.Shared.AssemblyInfo.Platform"><summary>
            Gets the target platform for the assembly.
            </summary><value>A <see cref="T:ActiproSoftware.Products.AssemblyPlatform" /> specifying the target platform for the assembly.</value></member><member name="P:ActiproSoftware.Products.Shared.AssemblyInfo.ProductCode"><summary>
            Gets the product code of the assembly.
            </summary><value>A three-letter product code of the assembly.</value></member><member name="P:ActiproSoftware.Products.Shared.AssemblyInfo.ProductId"><summary>
            Gets the product ID of the assembly.
            </summary><value>The product ID of the assembly.</value></member><member name="T:ActiproSoftware.Products.Shared.CursorResource"><summary>
            Specifies the type of cursor resource that may be retrieved.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.CursorResource.BarItemDragCopy"><summary>
            A bar item copy operation.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.CursorResource.BarItemDragDelete"><summary>
            A bar item delete operation.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.CursorResource.BarItemDragMove"><summary>
            A bar item move operation.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.CursorResource.DragCopy"><summary>
            A generic drag copy operation.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.CursorResource.DragMove"><summary>
            A generic drag move operation.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.CursorResource.DocumentDragMove"><summary>
            A document drag operation.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.CursorResource.DocumentDragNone"><summary>
            A document drag operation that cannot be completed.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.CursorResource.ReverseArrow"><summary>
            A reverse arrow.
            </summary></member><member name="T:ActiproSoftware.Products.Shared.DesignerTypeNames"><summary>
            Defines the names of types defined in the shared designer assembly.
            </summary><remarks>For internal use only.</remarks></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.BackgroundFillEditor"><summary>
            The <see cref="P:System.Type.FullName" /> of the type used as an editor for <see cref="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill" />.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.BorderEditor"><summary>
            The <see cref="P:System.Type.FullName" /> of the type used as an editor for <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Border" />.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.FlagEnumEditor"><summary>
            The <see cref="P:System.Type.FullName" /> of the type used as an editor for <see cref="T:System.Enum" /> when used as flags.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.ImageEditor"><summary>
            The <see cref="P:System.Type.FullName" /> of the type used as an editor for <see cref="T:System.Drawing.Image" />.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.ImageIndexEditor"><summary>
            The <see cref="P:System.Type.FullName" /> of the type used as an editor for the index of a <see cref="T:System.Drawing.Image" /> in a <see cref="T:System.Windows.Forms.ImageList" />.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.SimpleBorderStyleEditor"><summary>
            The <see cref="P:System.Type.FullName" /> of the type used as an editor for <see cref="T:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle" />.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.TwoColorLinearGradientStyleEditor"><summary>
            The <see cref="P:System.Type.FullName" /> of the type used as an editor for <see cref="T:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle" />.
            </summary></member><member name="T:ActiproSoftware.Products.Shared.DesignerTypeNames.AssemblyQualified"><summary>
            Gets the <see cref="P:System.Type.AssemblyQualifiedName" /> of types defined in the shared designer assembly.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.AssemblyQualified.BackgroundFillEditor"><summary>
            The <see cref="P:System.Type.AssemblyQualifiedName" /> of the type used as an editor for <see cref="T:ActiproSoftware.UI.WinForms.Drawing.BackgroundFill" />.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.AssemblyQualified.BorderEditor"><summary>
            The <see cref="P:System.Type.AssemblyQualifiedName" /> of the type used as an editor for <see cref="T:ActiproSoftware.UI.WinForms.Drawing.Border" />.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.AssemblyQualified.FlagEnumEditor"><summary>
            The <see cref="P:System.Type.AssemblyQualifiedName" /> of the type used as an editor for <see cref="T:System.Enum" /> when used as flags.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.AssemblyQualified.ImageEditor"><summary>
            The <see cref="P:System.Type.AssemblyQualifiedName" /> of the type used as an editor for <see cref="T:System.Drawing.Image" />.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.AssemblyQualified.ImageIndexEditor"><summary>
            The <see cref="P:System.Type.AssemblyQualifiedName" /> of the type used as an editor for the index of a <see cref="T:System.Drawing.Image" /> in a <see cref="T:System.Windows.Forms.ImageList" />.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.AssemblyQualified.SimpleBorderStyleEditor"><summary>
            The <see cref="P:System.Type.AssemblyQualifiedName" /> of the type used as an editor for <see cref="T:ActiproSoftware.UI.WinForms.Drawing.SimpleBorderStyle" />.
            </summary></member><member name="F:ActiproSoftware.Products.Shared.DesignerTypeNames.AssemblyQualified.TwoColorLinearGradientStyleEditor"><summary>
            The <see cref="P:System.Type.AssemblyQualifiedName" /> of the type used as an editor for <see cref="T:ActiproSoftware.UI.WinForms.Drawing.TwoColorLinearGradientStyle" />.
            </summary></member><member name="T:ActiproSoftware.Products.Shared.Resources"><summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ResourceManager"><summary>
              Returns the cached ResourceManager instance used by this class.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.Culture"><summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.BackgroundFillEditorForm_MessageBox_NoNullValues"><summary>
              Looks up a localized string similar to This BackgroundFill property does not permit null values..
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.BackgroundFillEditorForm_Text"><summary>
              Looks up a localized string similar to Background Fill Editor.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.BorderEditorForm_MessageBox_NoNullValues"><summary>
              Looks up a localized string similar to This Border property does not permit null values..
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.BorderEditorForm_Text"><summary>
              Looks up a localized string similar to Border Editor.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.DisposableObject_VerifyNotDisposed_Exception_Message"><summary>
              Looks up a localized string similar to The object of type '{0}' and value '{1}' has already been disposed and may no longer be used..
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.DrawingHelper_GetOppositeSides_InvalidArgumentException_Message"><summary>
              Looks up a localized string similar to GetOppositeSides() cannot accept a Sides value that contains all sides..
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.General_CancelButton_Text"><summary>
              Looks up a localized string similar to Cancel.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.General_CloseButton_Text"><summary>
              Looks up a localized string similar to Close.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.General_Error"><summary>
              Looks up a localized string similar to Error.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.General_OkButton_Text"><summary>
              Looks up a localized string similar to OK.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.GenericEditorForm_ChangeReferenceButton_Text"><summary>
              Looks up a localized string similar to Change Reference....
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.GenericEditorForm_DescriptionCaptionLabel_Text"><summary>
              Looks up a localized string similar to Description:.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.GenericEditorForm_NameCaptionLabel_Text"><summary>
              Looks up a localized string similar to Name:.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.GenericEditorForm_OwnerCaptionLabel_Text"><summary>
              Looks up a localized string similar to Owner:.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.GenericEditorForm_PopupMenu_ClearReferenceMenuItem_Text"><summary>
              Looks up a localized string similar to Clear Reference.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.GenericEditorForm_PopupMenu_CreateReferenceMenuItem_Text"><summary>
              Looks up a localized string similar to Create '{0}' Instance.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.GenericEditorForm_TypeCaptionLabel_Text"><summary>
              Looks up a localized string similar to Type:.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.GenericEditorForm_TypeLabel_Text"><summary>
              Looks up a localized string similar to (none).
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.KeyedLogicalTreeNodeCollection_DuplicateKeyException_Message"><summary>
              Looks up a localized string similar to The object '{0}' with key '{1}' cannot be added to the collection '{2}' because the collection already contains an object with the same Key property value..
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.KeyedLogicalTreeNodeCollection_EmptyKeyException_Message"><summary>
              Looks up a localized string similar to The object '{0}' cannot be added to the collection '{1}' if it has an empty Key value..
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.KeyedLogicalTreeNodeCollection_ImproperObjectException_Message"><summary>
              Looks up a localized string similar to The object '{0}' does not inherit from IKeyedLogicalTreeNode and cannot be added to the collection '{1}'..
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.LinearGradientColorPosition_Position_OutOfRangeException_Message"><summary>
              Looks up a localized string similar to The position must indicate a percentage by falling between 0.0f and 1.0f..
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.LogicalTreeNodeCollection_NotFoundException_Message"><summary>
              Looks up a localized string similar to The specified object '{0}' was not found in the collection..
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.LogicalTreeNodeCollection_OutOfRangeException_Message"><summary>
              Looks up a localized string similar to The specified index '{0}' was out of range for the collection..
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_Command_DecreaseLarge_Text"><summary>
              Looks up a localized string similar to Decrease Large.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_Command_DecreaseSmall_Text"><summary>
              Looks up a localized string similar to Decrease Small.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_Command_IncreaseLarge_Text"><summary>
              Looks up a localized string similar to Increase Large.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_Command_IncreaseSmall_Text"><summary>
              Looks up a localized string similar to Increase Small.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_ContextMenu_Bottom_Text"><summary>
              Looks up a localized string similar to Bottom.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_ContextMenu_LeftEdge_Text"><summary>
              Looks up a localized string similar to Left Edge.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_ContextMenu_PageDown_Text"><summary>
              Looks up a localized string similar to Page Down.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_ContextMenu_PageLeft_Text"><summary>
              Looks up a localized string similar to Page Left.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_ContextMenu_PageRight_Text"><summary>
              Looks up a localized string similar to Page Right.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_ContextMenu_PageUp_Text"><summary>
              Looks up a localized string similar to Page Up.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_ContextMenu_RightEdge_Text"><summary>
              Looks up a localized string similar to Right Edge.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_ContextMenu_ScrollDown_Text"><summary>
              Looks up a localized string similar to Scroll Down.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_ContextMenu_ScrollHere_Text"><summary>
              Looks up a localized string similar to Scroll Here.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_ContextMenu_ScrollLeft_Text"><summary>
              Looks up a localized string similar to Scroll Left.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_ContextMenu_ScrollRight_Text"><summary>
              Looks up a localized string similar to Scroll Right.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_ContextMenu_ScrollUp_Text"><summary>
              Looks up a localized string similar to Scroll Up.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.ScrollBar_ContextMenu_Top_Text"><summary>
              Looks up a localized string similar to Top.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.StandardColorPicker_CustomTabPage_Text"><summary>
              Looks up a localized string similar to Custom.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.StandardColorPicker_SystemTabPage_Text"><summary>
              Looks up a localized string similar to System.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.StandardColorPicker_WebTabPage_Text"><summary>
              Looks up a localized string similar to Web.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.TwoColorLinearGradient_Focus_OutOfRangeException_Message"><summary>
              Looks up a localized string similar to The focus must indicate a percentage by falling between 0.0f and 1.0f..
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.TwoColorLinearGradient_Scale_OutOfRangeException_Message"><summary>
              Looks up a localized string similar to The scale must indicate a percentage by falling between 0.0f and 1.0f..
            </summary></member><member name="P:ActiproSoftware.Products.Shared.Resources.UIColor_FromWebColor_ArgumentException_Message"><summary>
              Looks up a localized string similar to If a # is specified as the start of a web color, six hexadecimal digits must follow..
            </summary></member><member name="T:ActiproSoftware.Products.Shared.SR"><summary>
            Provides access to the string resources of this assembly, also allowing for their customization.
            </summary><remarks>
            Call the <see cref="M:ActiproSoftware.Products.Shared.SR.GetString(System.String)" /> method to return a resolved resource string.
            If a custom string has been set for a specified string resource name, it will be returned.
            Otherwise, the default string resource value is returned.
            <para>
            If any of the resource strings are customized via a call to <see cref="M:ActiproSoftware.Products.Shared.SR.SetCustomString(System.String,System.String)" />,
            it is best to do so before any other classes in this assembly are referenced,
            such as in the application startup.
            </para></remarks></member><member name="M:ActiproSoftware.Products.Shared.SR.ClearCustomStrings"><summary>
            Removes all custom strings.
            </summary></member><member name="M:ActiproSoftware.Products.Shared.SR.ContainsCustomString(System.String)"><summary>
            Returns whether a custom string is defined for the specified string resource.
            </summary><param name="name">The name of the resource for which to search.</param><returns><c>true</c> if a custom string is defined for the specified string resource; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Products.Shared.SR.GetCustomString(System.String)"><summary>
            Returns custom string that is stored for the specified string resource, if any.
            </summary><param name="name">The name of the resource to get.</param><returns>The custom string that is stored for the specified string resource, if any.</returns></member><member name="M:ActiproSoftware.Products.Shared.SR.GetString(System.String)"><summary>
            Returns the resolved value of the specified string resource.
            </summary><param name="name">The name of the resource to get.</param><returns>
            The value of the resource localized for the caller's current culture settings. 
            If a best match is not possible, <see langword="null" /> is returned.
            </returns></member><member name="M:ActiproSoftware.Products.Shared.SR.GetString(System.String,System.Object[])"><summary>
            Returns the resolved value of the specified string resource, by calling <c>String.Format</c> using supplied arguments.
            </summary><param name="name">The name of the resource to get.</param><param name="args">The arguments to pass to <c>String.Format</c>.</param><returns>
            The value of the resource localized for the caller's current culture settings. 
            If a best match is not possible, <see langword="null" /> is returned.
            </returns></member><member name="M:ActiproSoftware.Products.Shared.SR.RemoveCustomString(System.String)"><summary>
            Removes any custom string that is defined for the specified string resource.
            </summary><param name="name">The name of the resource to remove.</param></member><member name="M:ActiproSoftware.Products.Shared.SR.SetCustomString(System.String,System.String)"><summary>
            Sets a custom string value for the specified string resource.
            </summary><param name="name">The name of the resource to set.</param><param name="value">The value of the resource to set.</param></member><member name="P:ActiproSoftware.Products.Shared.SR.ResourceManager"><summary>
            Gets the <see cref="P:ActiproSoftware.Products.Shared.SR.ResourceManager" /> that provides the default resources. 
            </summary><value>The <see cref="P:ActiproSoftware.Products.Shared.SR.ResourceManager" /> that provides the default resources.</value></member></members></doc>