<?xml version="1.0" encoding="utf-8" ?>
<library xmlns="http://schemata.jklnet.org/Decompiler">
  <default>
	<signature convention="cdecl"></signature>
  </default>
  <Types>
    <typedef name="time_t">
      <prim domain="SignedInt" size="8" />
    </typedef>
  </Types>
  <procedure name="malloc">
	<signature>
    <return>
      <ptr>
        <void />
      </ptr>
      <reg>eax</reg>
    </return>
	  <arg>
      <type>size_t</type>
		  <stack size="4" />
	  </arg>
	</signature>
  </procedure>
  <procedure name="free">
	<signature>
    <arg>
      <ptr><void /></ptr>
      <stack size="4" />
    </arg>
	</signature>
  </procedure>
  <procedure name="_CIacos">
	<signature></signature>
  </procedure>
  <procedure name="_ltoa">
	<signature>
    <return>
      <ptr><prim domain="Character" size="1" /></ptr>
		  <reg>eax</reg>
	  </return>
 
	  <arg name="a">
      <prim domain="SignedInt" size="4" />
		  <stack size="4" />
	  </arg>
	  <arg name="b">
      <ptr><prim domain="Character" size="1" /></ptr>
		  <stack size="4" />
	  </arg>
    <arg name="c">
      <ptr><prim domain="SignedInt" size="4" /></ptr>
      <stack size="4" />
    </arg> 
	</signature>
  </procedure>
  <procedure name="rand">
	<signature>
	  <return>
      <prim domain="SignedInt" size="4" />
		<reg>eax</reg>
	  </return>
	</signature>
  </procedure>
  <procedure name="strncmp">
	<signature>
    <return>
      <prim domain="SignedInt" size="4" />
      <reg>eax</reg>
    </return>
    <arg name="dst">
      <ptr><prim domain="Character" size="1" /></ptr>
      <stack size="4" />
    </arg>
    <arg name="src">
      <ptr><prim domain="Character" size="1" /></ptr>
      <stack size="4" />
    </arg>
    <arg>
      <type>size_t</type>
      <stack size="4" />
    </arg>
	</signature>
  </procedure>
  <procedure name="calloc">
	<signature>
	  <return>
      <ptr><void /></ptr>
		<reg>eax</reg>
	  </return>
    <arg>
      <type>size_t</type>
      <stack size="4" />
    </arg>
    <arg>
      <type>size_t</type>
      <stack size="4" />
    </arg>
	</signature>
  </procedure>
  <procedure name="atol">
	<signature>
	  <return>
      <prim domain="SignedInt" size="4" />
		<reg>eax</reg>
	  </return>
    <arg>
      <ptr><prim domain="Character" size="1" /></ptr>
      <stack size="4" />
    </arg>
	</signature>
  </procedure>
  <procedure name="time">
	<signature>
	  <return>
      <type>time_t</type>
		  <reg>eax</reg>
	  </return>
	  <arg>
      <ptr><type>time_t</type></ptr>
		  <stack size="4" />
	  </arg>
	</signature>
  </procedure>
  <procedure name="srand">
	<signature>
	  <return>
      <void />
		  <reg>eax</reg>
	  </return>
	  <arg>
      <prim domain="UnsignedInt" size="4" />
		  <stack size="4" />
	  </arg>
	</signature>
  </procedure>
  <procedure name="_ftol">
	<signature>
	  <return>
      <prim domain="SignedInt" size="4" />
		  <reg>eax</reg>
	  </return>
	  <arg>
      <prim domain="Real" size="8" />
		  <fpustack />
	  </arg>
	</signature>
  </procedure>
  <procedure name="printf">
    <signature>
    <return><prim domain="SignedInt" size="4"/><reg>eax</reg></return>
    <arg>
      <ptr><prim domain="Character" size="1" /></ptr>
      <stack size="4"/>
    </arg>
    <!-- TODO: what about varargs? -->
    </signature>
  </procedure>
  <procedure name="sprintf">
	<signature>
	  <return>
      <prim domain="SignedInt" size="4" />
		  <reg>eax</reg>
	  </return>
	  <arg>
      <ptr><prim domain="Character" size="1" /></ptr>
		  <stack size="4" />
	  </arg>
	  <arg>
      <ptr><prim domain="Character" size="1" /></ptr>
		  <stack size="4" />
	  </arg>
	  <!-- // TODO: what about varargs functions -->
	</signature>
  </procedure>
  <procedure name="_CIpow">
	<signature>
    <return>
      <prim domain="Real" size="8" />
      <fpustack />
    </return>
    <arg>
      <prim domain="Real" size="8" />
      <fpustack />
    </arg>
    <arg>
      <prim domain="Real" size="8" />
      <fpustack />
    </arg>
  </signature>
  </procedure>
  <procedure name="strncpy">
	<signature>
	  <return>
      <ptr><prim domain="Character" size="1" /></ptr>
		  <reg>eax</reg>
	  </return>
	  <arg>
      <ptr><prim domain="Character" size="1" /></ptr>
  		<stack size="4" />
	  </arg>
	  <arg>
      <ptr><prim domain="Character" size="1" /></ptr>
  		<stack size="4" />
	  </arg>
    <arg>
      <type>size_t</type>
      <stack size="4" />
    </arg>
	</signature>
  </procedure>
  <procedure name="__set_app_type">
    <signature>
      <arg>
        <prim domain="SignedInt" size="4" />
        <stack />
      </arg>
    </signature>
  </procedure>
  <procedure name="__p__fmode">
    <signature>
      <return>
        <ptr><prim domain="SignedInt" size="4" /></ptr>
        <reg>eax</reg>
      </return>
    </signature>
  </procedure>
  <procedure name="__p__commode">
    <signature>
      <return>
        <ptr>
        <ptr><prim domain="SignedInt" size="4" /></ptr>
          <reg>eax</reg>
        </ptr>
      </return>
    </signature>
  </procedure>
  <procedure name="__getmainargs">
    <signature>
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg>
        <ptr><prim domain="SignedInt" size="4" /></ptr>
        <stack />
      </arg>
      <arg>
        <ptr><ptr><ptr><prim domain="Character" size="1" /></ptr></ptr></ptr>
        <stack />
      </arg>
      <arg>
        <ptr><ptr><ptr><prim domain="Character" size="1" /></ptr></ptr></ptr>
        <stack />
      </arg>
      <arg>
        <prim domain="SignedInt" size="4" />
        <stack />
      </arg>
      <arg>
        <ptr><void /></ptr>
        <stack />
      </arg>
    </signature>
  </procedure>

  <procedure name="exit">
    <signature>
      <return>
        <void />
      </return>
      <arg>
        <prim domain="SignedInt" size="4" />
      </arg>
    </signature>
  </procedure>

</library>
