<#@ template debug="false" hostspecific="false" language="C#" inherits="AbstraX.Generators.Base.TemplateBase"  #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Utils" #>
<#@ import namespace="AbstraX.Generators" #>
<#@ import namespace="AbstraX.Angular" #>
<#@ output extension=".html" #>
<#@ parameter type="System.EventHandler" name="DebugCallback" #>
<#@ parameter type="System.Collections.Generic.IEnumerable<ModuleImportDeclaration>" name="Imports" #>
<#@ parameter type="System.Collections.Generic.List<ESModule>" name="Exports" #>
<#@ parameter type="System.Collections.Generic.List<IDeclarable>" name="Declarations" #>
<#@ parameter type="AbstraX.DataAnnotations.UILoadKind" name="UILoadKind" #>
<#@ parameter type="System.String" name="PageName" #>
<#@ parameter type="System.String" name="Authorize" #>
<# 
    var pageName = this.PageName.ToCamelCase();
    var className = this.PageName + "Page";
    var component = new Page(className, this.UILoadKind);

    this.Declarations.Add(component);
    this.Exports.Add(component);

    foreach (var import in this.Imports)
    {
        this.WriteLine(import.DeclarationCode);
    }
#>

@IonicPage()
@Component({
  selector: 'page-<#= pageName #>',
  templateUrl: '<#= pageName #>.html'
})
export class <#= className #> {

  constructor(public navCtrl: NavController, public translateService: TranslateService) {
  }

  login() {
    this.navCtrl.push('LoginPage');
  }

  signup() {
    this.navCtrl.push('SignupPage');
  }
}
