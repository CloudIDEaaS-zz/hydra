// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AbstraX.Generators.Pages.EditPopupPage
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Utils;
    using AbstraX.Generators;
    using AbstraX.Angular;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class EditPopupPageTemplate : AbstraX.Generators.Base.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 14 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"

    var modelVariable = this.EntityName.ToCamelCase();

            
            #line default
            #line hidden
            this.Write("<ion-header>\r\n  <ion-navbar>\r\n    <ion-title>{{ userAction }}</ion-title>\r\n  </io" +
                    "n-navbar>\r\n</ion-header>\r\n<ion-content padding>\r\n\r\n  <form [formGroup]=\"");
            
            #line 24 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelVariable));
            
            #line default
            #line hidden
            this.Write("Form\" (ngSubmit)=\"submit(");
            
            #line 24 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelVariable));
            
            #line default
            #line hidden
            this.Write("Form)\">\r\n    <ion-list>\r\n");
            
            #line 26 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"

    foreach (var formField in this.FormFields.GetDisplayed())
    {
        var validationSet = formField.ValidationSet;
        var validationElement = validationSet.PreferredValidationElement;
        var validationMask = validationSet.PreferredValidationMask;
        var tagName = validationElement.TagName;
        var inputType = validationElement.InputType;
        var builder = new StringBuilder();

        if (validationMask != null)
        {
            validationElement.Attributes.Add(new KeyValuePair<string, string>("[textMask]", string.Format("{{mask: masks.{0}}}", validationMask.Name)));
        }

        foreach (var attributePair in validationElement.Attributes)
        {
            builder.AppendWithLeadingIfLength(", ", string.Format("{0}=\"{1}\"", attributePair.Key, attributePair.Value));
        }

            
            #line default
            #line hidden
            this.Write("      <ion-item>\r\n        <ion-label floating>{{ \'");
            
            #line 47 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(formField.TranslationKey));
            
            #line default
            #line hidden
            this.Write("\' | translate }}</ion-label>\r\n        <");
            
            #line 48 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tagName));
            
            #line default
            #line hidden
            this.Write(" formControlName=\"");
            
            #line 48 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MakeVariable(modelVariable, formField.Name)));
            
            #line default
            #line hidden
            this.Write("\" type=\"");
            
            #line 48 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inputType));
            
            #line default
            #line hidden
            this.Write("\"");
            
            #line 48 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(builder.ToString()));
            
            #line default
            #line hidden
            this.Write("></");
            
            #line 48 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tagName));
            
            #line default
            #line hidden
            this.Write(">\r\n      </ion-item>\r\n      <ion-item *ngIf=\"");
            
            #line 50 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelVariable));
            
            #line default
            #line hidden
            this.Write("Validator.hasValidationErrors(\'");
            
            #line 50 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MakeVariable(modelVariable, formField.Name)));
            
            #line default
            #line hidden
            this.Write("\')\">\r\n        <div class=\"error\" *ngFor=\"let error of ");
            
            #line 51 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelVariable));
            
            #line default
            #line hidden
            this.Write("Validator.getValidationErrors(\'");
            
            #line 51 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MakeVariable(modelVariable, formField.Name)));
            
            #line default
            #line hidden
            this.Write("\')\">\r\n          {{ error }}\r\n        </div>\r\n      </ion-item>\r\n");
            
            #line 55 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("      <ion-item>\r\n        <button ion-button item-right type=\"submit\" [disabled]=" +
                    "\"");
            
            #line 59 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelVariable));
            
            #line default
            #line hidden
            this.Write("Form.invalid\">Save</button>\r\n      </ion-item>\r\n    </ion-list>\r\n  </form>\r\n\r\n</i" +
                    "on-content>\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Pages\EditPopupPage\EditPopupPageTemplate.tt"

private global::System.EventHandler _DebugCallbackField;

/// <summary>
/// Access the DebugCallback parameter of the template.
/// </summary>
private global::System.EventHandler DebugCallback
{
    get
    {
        return this._DebugCallbackField;
    }
}

private global::System.Collections.Generic.List<FormField> _FormFieldsField;

/// <summary>
/// Access the FormFields parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<FormField> FormFields
{
    get
    {
        return this._FormFieldsField;
    }
}

private string _PageNameField;

/// <summary>
/// Access the PageName parameter of the template.
/// </summary>
private string PageName
{
    get
    {
        return this._PageNameField;
    }
}

private string _EntityNameField;

/// <summary>
/// Access the EntityName parameter of the template.
/// </summary>
private string EntityName
{
    get
    {
        return this._EntityNameField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool DebugCallbackValueAcquired = false;
if (this.Session.ContainsKey("DebugCallback"))
{
    this._DebugCallbackField = ((global::System.EventHandler)(this.Session["DebugCallback"]));
    DebugCallbackValueAcquired = true;
}
if ((DebugCallbackValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("DebugCallback");
    if ((data != null))
    {
        this._DebugCallbackField = ((global::System.EventHandler)(data));
    }
}
bool FormFieldsValueAcquired = false;
if (this.Session.ContainsKey("FormFields"))
{
    this._FormFieldsField = ((global::System.Collections.Generic.List<FormField>)(this.Session["FormFields"]));
    FormFieldsValueAcquired = true;
}
if ((FormFieldsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("FormFields");
    if ((data != null))
    {
        this._FormFieldsField = ((global::System.Collections.Generic.List<FormField>)(data));
    }
}
bool PageNameValueAcquired = false;
if (this.Session.ContainsKey("PageName"))
{
    this._PageNameField = ((string)(this.Session["PageName"]));
    PageNameValueAcquired = true;
}
if ((PageNameValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("PageName");
    if ((data != null))
    {
        this._PageNameField = ((string)(data));
    }
}
bool EntityNameValueAcquired = false;
if (this.Session.ContainsKey("EntityName"))
{
    this._EntityNameField = ((string)(this.Session["EntityName"]));
    EntityNameValueAcquired = true;
}
if ((EntityNameValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("EntityName");
    if ((data != null))
    {
        this._EntityNameField = ((string)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
