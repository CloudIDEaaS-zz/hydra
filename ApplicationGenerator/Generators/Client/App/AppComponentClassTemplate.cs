// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AbstraX.Generators.Client.App
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Utils;
    using AbstraX.Generators;
    using AbstraX.DataAnnotations;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\AppComponentClassTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class AppComponentClassTemplate : AbstraX.Generators.Base.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(@"import { Component, ViewChild, Injector, ComponentFactoryResolver, Input } from '@angular/core';
import { StatusBar } from '@ionic-native/status-bar';
import { SplashScreen } from '@ionic-native/splash-screen';
import { TranslateService } from '@ngx-translate/core';
import { Config, Nav, Platform, App, NavControllerBase, ViewController } from 'ionic-angular';
import { RootPage } from './pages';
import { UserProvider } from './providers/user.provider';
import { Settings } from './providers/settings/settings';
import { List, IEnumerable } from ""linq-javascript""
import { Guid } from ""guid-typescript"";
");
            
            #line 26 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\AppComponentClassTemplate.tt"
 
    foreach (var import in this.Imports)
    {
        this.WriteLine(import.DeclarationCode);
    }

            
            #line default
            #line hidden
            this.Write("const queryString = require(\'query-string\');\r\n\r\n@Component({\r\n  templateUrl: \'app" +
                    ".html\'\r\n})\r\nexport class ");
            
            #line 37 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\AppComponentClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.AppName));
            
            #line default
            #line hidden
            this.Write("App {\r\n  @Input() window: Window;\r\n  @ViewChild(Nav, {static: false}) nav: Nav;\r\n" +
                    "  n : any;\r\n\r\n  public static getRootPage() {\r\n\r\n    let parms = queryString.par" +
                    "se(window.location.search);\r\n    let rootPage: any;\r\n\r\n    switch (parms.root) {" +
                    "\r\n\r\n");
            
            #line 49 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\AppComponentClassTemplate.tt"

    foreach (var page in this.Pages)
    {
        if (page.UILoadKind == UILoadKind.RootPage)
        {

            
            #line default
            #line hidden
            this.Write("      default:\r\n        rootPage = RootPage;\r\n        break;\r\n");
            
            #line 58 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\AppComponentClassTemplate.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("      case \"");
            
            #line 63 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\AppComponentClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(page.Name));
            
            #line default
            #line hidden
            this.Write("\":\r\n        rootPage = ");
            
            #line 64 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\AppComponentClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(page.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n        break;\r\n");
            
            #line 66 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\AppComponentClassTemplate.tt"

        }
    }

            
            #line default
            #line hidden
            this.Write("    }\r\n\r\n    return rootPage;\r\n  }\r\n\r\n  GetRootPageInternal() {\r\n    return ");
            
            #line 76 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\AppComponentClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.AppName));
            
            #line default
            #line hidden
            this.Write(@"App.getRootPage();
  }

  constructor(private injector:Injector, private app: App, private translate: TranslateService, platform: Platform, settings: Settings, private config: Config, private statusBar: StatusBar, private splashScreen: SplashScreen) {

    platform.ready().then(() => {

      // Okay, so the platform is ready and our plugins are available.
      // Here you can do any higher level native things you might need.
      this.statusBar.styleDefault();
      this.splashScreen.hide();

    });

    this.initApp(app);
    this.initTranslate();
  }

  initApp(app: App) {
");
            
            #line 95 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\AppComponentClassTemplate.tt"
  if (this.IdentityProvider != null)
    {

            
            #line default
            #line hidden
            
            #line 98 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\AppComponentClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.InitApp));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 99 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\AppComponentClassTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write(@"  }

  initTranslate() {
    // Set the default language for translation strings, and the current language.
    this.translate.setDefaultLang('en');
    const browserLang = this.translate.getBrowserLang();

    if (browserLang) {
      if (browserLang === 'zh') {
        const browserCultureLang = this.translate.getBrowserCultureLang();

        if (browserCultureLang.match(/-CN|CHS|Hans/i)) {
          this.translate.use('zh-cmn-Hans');
        } else if (browserCultureLang.match(/-TW|CHT|Hant/i)) {
          this.translate.use('zh-cmn-Hant');
        }
      } else {
        this.translate.use(this.translate.getBrowserLang());
      }
    } else {
      this.translate.use('en'); // Set your language here
    }
  }

  getAllModules() {
    return new Promise((resolve) => {
      const id = Guid.create().toString();
      window['webpackJsonp'](
        [],
        {[id]: function(module, exports, __webpack_require__) {
          resolve(__webpack_require__.c);
        }},
        [id]
      );
    });
  }
}
");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\AppComponentClassTemplate.tt"

private global::System.EventHandler _DebugCallbackField;

/// <summary>
/// Access the DebugCallback parameter of the template.
/// </summary>
private global::System.EventHandler DebugCallback
{
    get
    {
        return this._DebugCallbackField;
    }
}

private global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration> _ImportsField;

/// <summary>
/// Access the Imports parameter of the template.
/// </summary>
private global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration> Imports
{
    get
    {
        return this._ImportsField;
    }
}

private global::System.Collections.Generic.IEnumerable<AbstraX.Angular.Page> _PagesField;

/// <summary>
/// Access the Pages parameter of the template.
/// </summary>
private global::System.Collections.Generic.IEnumerable<AbstraX.Angular.Page> Pages
{
    get
    {
        return this._PagesField;
    }
}

private string _AppNameField;

/// <summary>
/// Access the AppName parameter of the template.
/// </summary>
private string AppName
{
    get
    {
        return this._AppNameField;
    }
}

private string _IdentityProviderField;

/// <summary>
/// Access the IdentityProvider parameter of the template.
/// </summary>
private string IdentityProvider
{
    get
    {
        return this._IdentityProviderField;
    }
}

private string _InitAppField;

/// <summary>
/// Access the InitApp parameter of the template.
/// </summary>
private string InitApp
{
    get
    {
        return this._InitAppField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool DebugCallbackValueAcquired = false;
if (this.Session.ContainsKey("DebugCallback"))
{
    this._DebugCallbackField = ((global::System.EventHandler)(this.Session["DebugCallback"]));
    DebugCallbackValueAcquired = true;
}
if ((DebugCallbackValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("DebugCallback");
    if ((data != null))
    {
        this._DebugCallbackField = ((global::System.EventHandler)(data));
    }
}
bool ImportsValueAcquired = false;
if (this.Session.ContainsKey("Imports"))
{
    this._ImportsField = ((global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration>)(this.Session["Imports"]));
    ImportsValueAcquired = true;
}
if ((ImportsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Imports");
    if ((data != null))
    {
        this._ImportsField = ((global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration>)(data));
    }
}
bool PagesValueAcquired = false;
if (this.Session.ContainsKey("Pages"))
{
    this._PagesField = ((global::System.Collections.Generic.IEnumerable<AbstraX.Angular.Page>)(this.Session["Pages"]));
    PagesValueAcquired = true;
}
if ((PagesValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Pages");
    if ((data != null))
    {
        this._PagesField = ((global::System.Collections.Generic.IEnumerable<AbstraX.Angular.Page>)(data));
    }
}
bool AppNameValueAcquired = false;
if (this.Session.ContainsKey("AppName"))
{
    this._AppNameField = ((string)(this.Session["AppName"]));
    AppNameValueAcquired = true;
}
if ((AppNameValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("AppName");
    if ((data != null))
    {
        this._AppNameField = ((string)(data));
    }
}
bool IdentityProviderValueAcquired = false;
if (this.Session.ContainsKey("IdentityProvider"))
{
    this._IdentityProviderField = ((string)(this.Session["IdentityProvider"]));
    IdentityProviderValueAcquired = true;
}
if ((IdentityProviderValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("IdentityProvider");
    if ((data != null))
    {
        this._IdentityProviderField = ((string)(data));
    }
}
bool InitAppValueAcquired = false;
if (this.Session.ContainsKey("InitApp"))
{
    this._InitAppField = ((string)(this.Session["InitApp"]));
    InitAppValueAcquired = true;
}
if ((InitAppValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("InitApp");
    if ((data != null))
    {
        this._InitAppField = ((string)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
