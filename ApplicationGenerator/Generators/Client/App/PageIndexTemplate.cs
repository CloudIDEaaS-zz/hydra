// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AbstraX.Generators.Client.App
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Utils;
    using AbstraX.Generators;
    using AbstraX.DataAnnotations;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\PageIndexTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class PageIndexTemplate : AbstraX.Generators.Base.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("// The page the user lands on after opening the app and without a session\r\nexport" +
                    " const RootPage = \"");
            
            #line 15 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\PageIndexTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.RootPage.Name));
            
            #line default
            #line hidden
            this.Write("\";\r\n\r\n");
            
            #line 17 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\PageIndexTemplate.tt"
  if (this.MainPage != null)
    {

            
            #line default
            #line hidden
            this.Write("// The main page the user will see as they use the app over a long period of time" +
                    ".\r\nexport const MainPage = \"");
            
            #line 21 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\PageIndexTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MainPage.Name));
            
            #line default
            #line hidden
            this.Write("\";\r\n");
            
            #line 22 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\PageIndexTemplate.tt"

    }
    else
    {

            
            #line default
            #line hidden
            this.Write("// The main page the user will see as they use the app over a long period of time" +
                    ".\r\nexport const MainPage = \"");
            
            #line 28 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\PageIndexTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.RootPage.Name));
            
            #line default
            #line hidden
            this.Write("\";\r\n");
            
            #line 29 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\PageIndexTemplate.tt"

    }

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\MC\RazorViewsDesigner\ApplicationGenerator\Generators\Client\App\PageIndexTemplate.tt"

private global::System.EventHandler _DebugCallbackField;

/// <summary>
/// Access the DebugCallback parameter of the template.
/// </summary>
private global::System.EventHandler DebugCallback
{
    get
    {
        return this._DebugCallbackField;
    }
}

private global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration> _ImportsField;

/// <summary>
/// Access the Imports parameter of the template.
/// </summary>
private global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration> Imports
{
    get
    {
        return this._ImportsField;
    }
}

private global::AbstraX.Angular.Page _RootPageField;

/// <summary>
/// Access the RootPage parameter of the template.
/// </summary>
private global::AbstraX.Angular.Page RootPage
{
    get
    {
        return this._RootPageField;
    }
}

private global::AbstraX.Angular.Page _MainPageField;

/// <summary>
/// Access the MainPage parameter of the template.
/// </summary>
private global::AbstraX.Angular.Page MainPage
{
    get
    {
        return this._MainPageField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool DebugCallbackValueAcquired = false;
if (this.Session.ContainsKey("DebugCallback"))
{
    this._DebugCallbackField = ((global::System.EventHandler)(this.Session["DebugCallback"]));
    DebugCallbackValueAcquired = true;
}
if ((DebugCallbackValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("DebugCallback");
    if ((data != null))
    {
        this._DebugCallbackField = ((global::System.EventHandler)(data));
    }
}
bool ImportsValueAcquired = false;
if (this.Session.ContainsKey("Imports"))
{
    this._ImportsField = ((global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration>)(this.Session["Imports"]));
    ImportsValueAcquired = true;
}
if ((ImportsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Imports");
    if ((data != null))
    {
        this._ImportsField = ((global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration>)(data));
    }
}
bool RootPageValueAcquired = false;
if (this.Session.ContainsKey("RootPage"))
{
    this._RootPageField = ((global::AbstraX.Angular.Page)(this.Session["RootPage"]));
    RootPageValueAcquired = true;
}
if ((RootPageValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("RootPage");
    if ((data != null))
    {
        this._RootPageField = ((global::AbstraX.Angular.Page)(data));
    }
}
bool MainPageValueAcquired = false;
if (this.Session.ContainsKey("MainPage"))
{
    this._MainPageField = ((global::AbstraX.Angular.Page)(this.Session["MainPage"]));
    MainPageValueAcquired = true;
}
if ((MainPageValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("MainPage");
    if ((data != null))
    {
        this._MainPageField = ((global::AbstraX.Angular.Page)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
