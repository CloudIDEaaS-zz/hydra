// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AbstraX.Generators.Client.ClientModel
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Utils;
    using AbstraX.Generators;
    using AbstraX.Angular;
    using AbstraX;
    using AbstraX.DataAnnotations;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class ClientModelClassTemplate : AbstraX.Generators.Base.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 21 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
 
    var modelName = this.ModelName.ToCamelCase();
    var className = this.ModelName;
    var module = new ESModule(className);
    var modelVariable = this.EntityName.ToCamelCase();
    var builder = new StringBuilder();
    var lambdaParameter = modelVariable.Left(1);

    this.Modules.Add(module);

    foreach (var import in this.Imports)
    {
        this.WriteLine(import.DeclarationCode);
    }

            
            #line default
            #line hidden
            this.Write("\r\nexport class ");
            
            #line 37 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(" {\r\n");
            
            #line 38 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"

    foreach (var formField in this.FormFields)
    {
        if (!this.IsIdentityEntity || formField.IsClientIdentity())
        {
            var variableName = formField.Name;
            var name = formField.Name;
            var type = formField.ClientDataType;

            builder.AppendWithLeadingIfLength(", ", string.Format("{0}: {1}", variableName.ToCamelCase(), type));

            
            #line default
            #line hidden
            this.Write("  public ");
            
            #line 49 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MakeVariable(modelVariable, variableName)));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 49 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 50 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"

        }
    }

            
            #line default
            #line hidden
            this.Write("\r\n  constructor(options: { ");
            
            #line 55 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(builder.ToString()));
            
            #line default
            #line hidden
            this.Write(" })\r\n  constructor(");
            
            #line 56 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lambdaParameter));
            
            #line default
            #line hidden
            this.Write(": any)\r\n  {\r\n");
            
            #line 58 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"

    builder = new StringBuilder();

    foreach (var formField in this.FormFields)
    {
        if (!this.IsIdentityEntity || formField.IsClientIdentity())
        {
            string variableName;
            var name = formField.Name;
            var type = formField.ClientDataType;

            if (formField.IsKey)
            {
                variableName = "id";
            }
            else
            {
                variableName = formField.Name.ToCamelCase();
            }

            builder.AppendWithLeadingIfLength(" && ", string.Format("{0}.{1} !== undefined", lambdaParameter, variableName));
        }
    }

            
            #line default
            #line hidden
            this.Write("    if (");
            
            #line 82 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(builder.ToString()));
            
            #line default
            #line hidden
            this.Write(") {\r\n");
            
            #line 83 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"

    builder = new StringBuilder();

    foreach (var formField in this.FormFields)
    {
        if (!this.IsIdentityEntity || formField.IsClientIdentity())
        {
            var variableName = formField.Name;
            var name = formField.Name;
            var type = formField.ClientDataType;

            builder.AppendWithLeadingIfLength(", ", string.Format("{0}: {1}", variableName, type));

            
            #line default
            #line hidden
            this.Write("      this.");
            
            #line 96 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MakeVariable(modelVariable, variableName)));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 96 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lambdaParameter));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 96 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(variableName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 97 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"

        }
    }

            
            #line default
            #line hidden
            this.Write("    }\r\n    else if (");
            
            #line 102 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lambdaParameter));
            
            #line default
            #line hidden
            this.Write(" !== undefined) {\r\n      (<any>Object).assign(this, ");
            
            #line 103 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lambdaParameter));
            
            #line default
            #line hidden
            this.Write(");\r\n    } else {\r\n      throw new TypeError(\"Unexpected arguments to Course const" +
                    "ructor\")\r\n    }\r\n  }\r\n");
            
            #line 108 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"

    builder = new StringBuilder();

    foreach (var formField in this.FormFields)
    {
        if (!this.IsIdentityEntity || formField.IsClientIdentity())
        {
            var variableName = formField.Name;
            var name = formField.Name;
            var type = formField.ClientDataType;

            builder.AppendWithLeadingIfLength(", ", string.Format("{0}: this.{0}", this.MakeVariable(modelVariable, variableName)));
        }
    }

            
            #line default
            #line hidden
            this.Write("\r\n  public get ");
            
            #line 124 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelVariable));
            
            #line default
            #line hidden
            this.Write("Data() {\r\n    return { ");
            
            #line 125 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(builder.ToString()));
            
            #line default
            #line hidden
            this.Write(" };\r\n  }\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\ClientModel\ClientModelClassTemplate.tt"

private global::System.EventHandler _DebugCallbackField;

/// <summary>
/// Access the DebugCallback parameter of the template.
/// </summary>
private global::System.EventHandler DebugCallback
{
    get
    {
        return this._DebugCallbackField;
    }
}

private global::System.Collections.Generic.List<FormField> _FormFieldsField;

/// <summary>
/// Access the FormFields parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<FormField> FormFields
{
    get
    {
        return this._FormFieldsField;
    }
}

private global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration> _ImportsField;

/// <summary>
/// Access the Imports parameter of the template.
/// </summary>
private global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration> Imports
{
    get
    {
        return this._ImportsField;
    }
}

private global::System.Collections.Generic.List<ESModule> _ExportsField;

/// <summary>
/// Access the Exports parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<ESModule> Exports
{
    get
    {
        return this._ExportsField;
    }
}

private global::System.Collections.Generic.List<ESModule> _ModulesField;

/// <summary>
/// Access the Modules parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<ESModule> Modules
{
    get
    {
        return this._ModulesField;
    }
}

private global::System.Collections.Generic.List<IDeclarable> _DeclarationsField;

/// <summary>
/// Access the Declarations parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<IDeclarable> Declarations
{
    get
    {
        return this._DeclarationsField;
    }
}

private bool _IsIdentityEntityField;

/// <summary>
/// Access the IsIdentityEntity parameter of the template.
/// </summary>
private bool IsIdentityEntity
{
    get
    {
        return this._IsIdentityEntityField;
    }
}

private string _ModelNameField;

/// <summary>
/// Access the ModelName parameter of the template.
/// </summary>
private string ModelName
{
    get
    {
        return this._ModelNameField;
    }
}

private string _EntityNameField;

/// <summary>
/// Access the EntityName parameter of the template.
/// </summary>
private string EntityName
{
    get
    {
        return this._EntityNameField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool DebugCallbackValueAcquired = false;
if (this.Session.ContainsKey("DebugCallback"))
{
    this._DebugCallbackField = ((global::System.EventHandler)(this.Session["DebugCallback"]));
    DebugCallbackValueAcquired = true;
}
if ((DebugCallbackValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("DebugCallback");
    if ((data != null))
    {
        this._DebugCallbackField = ((global::System.EventHandler)(data));
    }
}
bool FormFieldsValueAcquired = false;
if (this.Session.ContainsKey("FormFields"))
{
    this._FormFieldsField = ((global::System.Collections.Generic.List<FormField>)(this.Session["FormFields"]));
    FormFieldsValueAcquired = true;
}
if ((FormFieldsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("FormFields");
    if ((data != null))
    {
        this._FormFieldsField = ((global::System.Collections.Generic.List<FormField>)(data));
    }
}
bool ImportsValueAcquired = false;
if (this.Session.ContainsKey("Imports"))
{
    this._ImportsField = ((global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration>)(this.Session["Imports"]));
    ImportsValueAcquired = true;
}
if ((ImportsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Imports");
    if ((data != null))
    {
        this._ImportsField = ((global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration>)(data));
    }
}
bool ExportsValueAcquired = false;
if (this.Session.ContainsKey("Exports"))
{
    this._ExportsField = ((global::System.Collections.Generic.List<ESModule>)(this.Session["Exports"]));
    ExportsValueAcquired = true;
}
if ((ExportsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Exports");
    if ((data != null))
    {
        this._ExportsField = ((global::System.Collections.Generic.List<ESModule>)(data));
    }
}
bool ModulesValueAcquired = false;
if (this.Session.ContainsKey("Modules"))
{
    this._ModulesField = ((global::System.Collections.Generic.List<ESModule>)(this.Session["Modules"]));
    ModulesValueAcquired = true;
}
if ((ModulesValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Modules");
    if ((data != null))
    {
        this._ModulesField = ((global::System.Collections.Generic.List<ESModule>)(data));
    }
}
bool DeclarationsValueAcquired = false;
if (this.Session.ContainsKey("Declarations"))
{
    this._DeclarationsField = ((global::System.Collections.Generic.List<IDeclarable>)(this.Session["Declarations"]));
    DeclarationsValueAcquired = true;
}
if ((DeclarationsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Declarations");
    if ((data != null))
    {
        this._DeclarationsField = ((global::System.Collections.Generic.List<IDeclarable>)(data));
    }
}
bool IsIdentityEntityValueAcquired = false;
if (this.Session.ContainsKey("IsIdentityEntity"))
{
    this._IsIdentityEntityField = ((bool)(this.Session["IsIdentityEntity"]));
    IsIdentityEntityValueAcquired = true;
}
if ((IsIdentityEntityValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("IsIdentityEntity");
    if ((data != null))
    {
        this._IsIdentityEntityField = ((bool)(data));
    }
}
bool ModelNameValueAcquired = false;
if (this.Session.ContainsKey("ModelName"))
{
    this._ModelNameField = ((string)(this.Session["ModelName"]));
    ModelNameValueAcquired = true;
}
if ((ModelNameValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ModelName");
    if ((data != null))
    {
        this._ModelNameField = ((string)(data));
    }
}
bool EntityNameValueAcquired = false;
if (this.Session.ContainsKey("EntityName"))
{
    this._EntityNameField = ((string)(this.Session["EntityName"]));
    EntityNameValueAcquired = true;
}
if ((EntityNameValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("EntityName");
    if ((data != null))
    {
        this._EntityNameField = ((string)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
