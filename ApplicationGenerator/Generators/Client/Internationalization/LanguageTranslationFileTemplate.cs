// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AbstraX.Generators.Client.Internationalization
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Utils;
    using AbstraX.Generators;
    using AbstraX.Angular;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\Internationalization\LanguageTranslationFileTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class LanguageTranslationFileTemplate : AbstraX.Generators.Base.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("{\r\n");
            
            #line 13 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\Internationalization\LanguageTranslationFileTemplate.tt"
 
    var builder = new StringBuilder();
    var startGroup = true;

    foreach (var groupPair in this.Dictionary.LanguageTranslationsGroups)
    {
        var groupName = groupPair.Key;
        var languageTranslations = groupPair.Value;

        builder.AppendWithLeadingIfLength(",\r\n", string.Empty);
        startGroup = true;

        foreach (var translationPair in languageTranslations)
        {
            var translationKey = translationPair.Key;
            var translationValue = translationPair.Value;

            if (startGroup)
            {
                builder.AppendWithLeadingIfLength("\r\n", "\t\"{0}\": \"{1}\"", translationKey, translationValue);
                startGroup = false;
            }
            else
            {
                builder.AppendWithLeadingIfLength(",\r\n", "\t\"{0}\": \"{1}\"", translationKey, translationValue);
            }

        }
    }

    this.WriteLine(builder.ToString());

            
            #line default
            #line hidden
            this.Write("}");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\MC\CloudIDEaaS\root\ApplicationGenerator\Generators\Client\Internationalization\LanguageTranslationFileTemplate.tt"

private global::System.EventHandler _DebugCallbackField;

/// <summary>
/// Access the DebugCallback parameter of the template.
/// </summary>
private global::System.EventHandler DebugCallback
{
    get
    {
        return this._DebugCallbackField;
    }
}

private global::AbstraX.LanguageSpecificDictionary _DictionaryField;

/// <summary>
/// Access the Dictionary parameter of the template.
/// </summary>
private global::AbstraX.LanguageSpecificDictionary Dictionary
{
    get
    {
        return this._DictionaryField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool DebugCallbackValueAcquired = false;
if (this.Session.ContainsKey("DebugCallback"))
{
    this._DebugCallbackField = ((global::System.EventHandler)(this.Session["DebugCallback"]));
    DebugCallbackValueAcquired = true;
}
if ((DebugCallbackValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("DebugCallback");
    if ((data != null))
    {
        this._DebugCallbackField = ((global::System.EventHandler)(data));
    }
}
bool DictionaryValueAcquired = false;
if (this.Session.ContainsKey("Dictionary"))
{
    this._DictionaryField = ((global::AbstraX.LanguageSpecificDictionary)(this.Session["Dictionary"]));
    DictionaryValueAcquired = true;
}
if ((DictionaryValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Dictionary");
    if ((data != null))
    {
        this._DictionaryField = ((global::AbstraX.LanguageSpecificDictionary)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
