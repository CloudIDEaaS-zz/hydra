// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AbstraX.Generators.Server.WebAPIRestConfigJson
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Utils;
    using AbstraX.Generators;
    using AbstraX.Angular;
    using AbstraX.DataAnnotations;
    using AbstraX;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Server\WebAPIRestConfigJson\WebAPIRestConfigJsonTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class WebAPIRestConfigJsonTemplate : AbstraX.Generators.Base.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("{\r\n");
            
            #line 15 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Server\WebAPIRestConfigJson\WebAPIRestConfigJsonTemplate.tt"

    var x = 0;
    var count = this.NameValues.Count;

    foreach (var pair in this.NameValues)
    {
        this.PushIndent(new string(' ', 2));

        if (x < count - 1)
        {
            this.WriteLine("\"{0}\": \"{1}\",", pair.Key, pair.Value);
        }
        else
        {
            this.WriteLine("\"{0}\": \"{1}\"", pair.Key, pair.Value);
        }

        this.PopIndent();

        x++;
    }

            
            #line default
            #line hidden
            this.Write("}\r\n\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Server\WebAPIRestConfigJson\WebAPIRestConfigJsonTemplate.tt"

private global::System.EventHandler _DebugCallbackField;

/// <summary>
/// Access the DebugCallback parameter of the template.
/// </summary>
private global::System.EventHandler DebugCallback
{
    get
    {
        return this._DebugCallbackField;
    }
}

private global::System.Collections.Generic.Dictionary<System.String, System.String> _NameValuesField;

/// <summary>
/// Access the NameValues parameter of the template.
/// </summary>
private global::System.Collections.Generic.Dictionary<System.String, System.String> NameValues
{
    get
    {
        return this._NameValuesField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool DebugCallbackValueAcquired = false;
if (this.Session.ContainsKey("DebugCallback"))
{
    this._DebugCallbackField = ((global::System.EventHandler)(this.Session["DebugCallback"]));
    DebugCallbackValueAcquired = true;
}
if ((DebugCallbackValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("DebugCallback");
    if ((data != null))
    {
        this._DebugCallbackField = ((global::System.EventHandler)(data));
    }
}
bool NameValuesValueAcquired = false;
if (this.Session.ContainsKey("NameValues"))
{
    this._NameValuesField = ((global::System.Collections.Generic.Dictionary<System.String, System.String>)(this.Session["NameValues"]));
    NameValuesValueAcquired = true;
}
if ((NameValuesValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("NameValues");
    if ((data != null))
    {
        this._NameValuesField = ((global::System.Collections.Generic.Dictionary<System.String, System.String>)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
