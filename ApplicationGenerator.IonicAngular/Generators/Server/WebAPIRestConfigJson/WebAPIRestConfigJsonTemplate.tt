<#@ template debug="false" hostspecific="false" language="C#" inherits="AbstraX.Generators.Base.TemplateBase"  #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Utils" #>
<#@ import namespace="AbstraX.Generators" #>
<#@ import namespace="AbstraX.Angular" #>
<#@ import namespace="AbstraX.DataAnnotations" #>
<#@ import namespace="AbstraX" #>
<#@ output extension=".cs" #>
<#@ parameter type="System.EventHandler" name="DebugCallback" #>
<#@ parameter type="System.Collections.Generic.Dictionary<System.String, System.String>" name="NameValues" #>
{
<#
    var x = 0;
    var count = this.NameValues.Count;

    foreach (var pair in this.NameValues)
    {
        this.PushIndent(new string(' ', 2));

        if (x < count - 1)
        {
            this.WriteLine("\"{0}\": \"{1}\",", pair.Key, pair.Value);
        }
        else
        {
            this.WriteLine("\"{0}\": \"{1}\"", pair.Key, pair.Value);
        }

        this.PopIndent();

        x++;
    }
#>
}


