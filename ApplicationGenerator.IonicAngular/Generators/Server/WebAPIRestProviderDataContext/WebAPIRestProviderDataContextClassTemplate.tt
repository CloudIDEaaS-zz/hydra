<#@ template debug="false" hostspecific="false" language="C#" inherits="AbstraX.Generators.Base.TemplateBase"  #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Utils" #>
<#@ import namespace="AbstraX.Generators" #>
<#@ import namespace="AbstraX.Models.Interfaces" #>
<#@ import namespace="AbstraX.Angular" #>
<#@ import namespace="AbstraX.DataAnnotations" #>
<#@ import namespace="AbstraX" #>
<#@ output extension=".cs" #>
<#@ parameter type="System.EventHandler" name="DebugCallback" #>
<#@ parameter type="System.String" name="Title" #>
<#@ parameter type="System.String" name="Name" #>
<#@ parameter type="System.String" name="RootNamespace" #>
<#@ parameter type="System.Collections.Generic.List<IEntitySet>" name="EntitySets" #>
using ApplicationGenerator.Data;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace <#= this.RootNamespace #>.Models.<#= this.Title #>Service
{
    public interface I<#= this.Name #>
    {
<#	
	foreach (var entitySet in this.EntitySets)
	{
#>
        public DbSet<<#= entitySet.Entities.Single().Name #>> <#= entitySet.Name #> { get; set; }
<#	
	}
#>
    }

    public class <#= this.Name #> : AbstraXProviderDataContext, I<#= this.Name #>
    {
<#	
	foreach (var entitySet in this.EntitySets)
	{
#>
        public DbSet<<#= entitySet.Entities.Single().Name #>> <#= entitySet.Name #> { get; set; }
<#	
	}
#>

        public <#= this.Name #>(DbContextOptions<<#= this.Name #>> options, IAbstraXProviderServices abstraXProviderServices) : base(options, abstraXProviderServices)
        {
        }
    }
}
