// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AbstraX.Generators.Pages.LoginPage
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Utils;
    using AbstraX.Generators;
    using AbstraX.Angular;
    using AbstraX.DataAnnotations;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Pages\LoginPage\LoginClassTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class LoginClassTemplate : AbstraX.Generators.Base.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 21 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Pages\LoginPage\LoginClassTemplate.tt"
 
    var pageName = this.PageName.ToCamelCase();
    var className = this.PageName + "Page";
    var component = new Page(className, this.UIKind);
    var modelVariable = this.EntityName.ToCamelCase();

    this.Declarations.Add(component);
    this.Exports.Add(component);

    foreach (var import in this.Imports)
    {
        this.WriteLine(import.DeclarationCode);
    }

            
            #line default
            #line hidden
            this.Write("\r\n@IonicPage()\r\n");
            
            #line 37 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Pages\LoginPage\LoginClassTemplate.tt"
 if (this.Authorize.Length > 0)
   {

            
            #line default
            #line hidden
            this.Write("@Authorize(\"");
            
            #line 40 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Pages\LoginPage\LoginClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Authorize));
            
            #line default
            #line hidden
            this.Write("\")\r\n");
            
            #line 41 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Pages\LoginPage\LoginClassTemplate.tt"
 
   }

            
            #line default
            #line hidden
            this.Write("@Component({\r\n  selector: \'component-");
            
            #line 45 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Pages\LoginPage\LoginClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pageName));
            
            #line default
            #line hidden
            this.Write("\',\r\n  templateUrl: \'");
            
            #line 46 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Pages\LoginPage\LoginClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pageName));
            
            #line default
            #line hidden
            this.Write(".html\',\r\n  styleUrls: [\'./");
            
            #line 47 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Pages\LoginPage\LoginClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pageName));
            
            #line default
            #line hidden
            this.Write(@".scss']
})
export class LoginPage {
  // The account fields for the login form.
  // If you're using the username field with or without email, make
  // sure to add it to the type
  account: { userName: string, password: string } = {
    userName: '',
    password: ''
  };

  // Our translated text strings
  private loginErrorString: string;

  constructor(public navCtrl: NavController,
    public ");
            
            #line 62 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Pages\LoginPage\LoginClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelVariable));
            
            #line default
            #line hidden
            this.Write("Provider: ");
            
            #line 62 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Pages\LoginPage\LoginClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.EntityName));
            
            #line default
            #line hidden
            this.Write(@"Provider,
    public toastCtrl: ToastController,
    public loadingController: LoadingController,
    public translateService: TranslateService) {
  }

  // Attempt to login in through our User service
  doLogin() {

      let loading = this.loadingController.create({content : ""Logging in, please wait...""});
      loading.present();

      console.log('logging in');

      this.");
            
            #line 76 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Pages\LoginPage\LoginClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelVariable));
            
            #line default
            #line hidden
            this.Write(@"Provider.login(this.account).subscribe((resp) => {
      this.navCtrl.push(MainPage);

      loading.dismissAll();

    }, (err) => {
      // Unable to log in
      let toast = this.toastCtrl.create({
        message: err.message,
        duration: 3000,
        position: 'top'
      });

      loading.dismissAll();
      toast.present();
    });
  }
}
");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Pages\LoginPage\LoginClassTemplate.tt"

private global::System.EventHandler _DebugCallbackField;

/// <summary>
/// Access the DebugCallback parameter of the template.
/// </summary>
private global::System.EventHandler DebugCallback
{
    get
    {
        return this._DebugCallbackField;
    }
}

private global::System.Collections.Generic.List<IdentityField> _IdentityFieldsField;

/// <summary>
/// Access the IdentityFields parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<IdentityField> IdentityFields
{
    get
    {
        return this._IdentityFieldsField;
    }
}

private global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration> _ImportsField;

/// <summary>
/// Access the Imports parameter of the template.
/// </summary>
private global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration> Imports
{
    get
    {
        return this._ImportsField;
    }
}

private global::System.Collections.Generic.IEnumerable<AbstraX.Angular.Component> _PagesField;

/// <summary>
/// Access the Pages parameter of the template.
/// </summary>
private global::System.Collections.Generic.IEnumerable<AbstraX.Angular.Component> Pages
{
    get
    {
        return this._PagesField;
    }
}

private global::System.Collections.Generic.List<ESModule> _ExportsField;

/// <summary>
/// Access the Exports parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<ESModule> Exports
{
    get
    {
        return this._ExportsField;
    }
}

private global::System.Collections.Generic.List<IDeclarable> _DeclarationsField;

/// <summary>
/// Access the Declarations parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<IDeclarable> Declarations
{
    get
    {
        return this._DeclarationsField;
    }
}

private string _PageNameField;

/// <summary>
/// Access the PageName parameter of the template.
/// </summary>
private string PageName
{
    get
    {
        return this._PageNameField;
    }
}

private string _AuthorizeField;

/// <summary>
/// Access the Authorize parameter of the template.
/// </summary>
private string Authorize
{
    get
    {
        return this._AuthorizeField;
    }
}

private string _EntityNameField;

/// <summary>
/// Access the EntityName parameter of the template.
/// </summary>
private string EntityName
{
    get
    {
        return this._EntityNameField;
    }
}

private global::AbstraX.DataAnnotations.UIKind _UIKindField;

/// <summary>
/// Access the UIKind parameter of the template.
/// </summary>
private global::AbstraX.DataAnnotations.UIKind UIKind
{
    get
    {
        return this._UIKindField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool DebugCallbackValueAcquired = false;
if (this.Session.ContainsKey("DebugCallback"))
{
    this._DebugCallbackField = ((global::System.EventHandler)(this.Session["DebugCallback"]));
    DebugCallbackValueAcquired = true;
}
if ((DebugCallbackValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("DebugCallback");
    if ((data != null))
    {
        this._DebugCallbackField = ((global::System.EventHandler)(data));
    }
}
bool IdentityFieldsValueAcquired = false;
if (this.Session.ContainsKey("IdentityFields"))
{
    this._IdentityFieldsField = ((global::System.Collections.Generic.List<IdentityField>)(this.Session["IdentityFields"]));
    IdentityFieldsValueAcquired = true;
}
if ((IdentityFieldsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("IdentityFields");
    if ((data != null))
    {
        this._IdentityFieldsField = ((global::System.Collections.Generic.List<IdentityField>)(data));
    }
}
bool ImportsValueAcquired = false;
if (this.Session.ContainsKey("Imports"))
{
    this._ImportsField = ((global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration>)(this.Session["Imports"]));
    ImportsValueAcquired = true;
}
if ((ImportsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Imports");
    if ((data != null))
    {
        this._ImportsField = ((global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration>)(data));
    }
}
bool PagesValueAcquired = false;
if (this.Session.ContainsKey("Pages"))
{
    this._PagesField = ((global::System.Collections.Generic.IEnumerable<AbstraX.Angular.Component>)(this.Session["Pages"]));
    PagesValueAcquired = true;
}
if ((PagesValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Pages");
    if ((data != null))
    {
        this._PagesField = ((global::System.Collections.Generic.IEnumerable<AbstraX.Angular.Component>)(data));
    }
}
bool ExportsValueAcquired = false;
if (this.Session.ContainsKey("Exports"))
{
    this._ExportsField = ((global::System.Collections.Generic.List<ESModule>)(this.Session["Exports"]));
    ExportsValueAcquired = true;
}
if ((ExportsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Exports");
    if ((data != null))
    {
        this._ExportsField = ((global::System.Collections.Generic.List<ESModule>)(data));
    }
}
bool DeclarationsValueAcquired = false;
if (this.Session.ContainsKey("Declarations"))
{
    this._DeclarationsField = ((global::System.Collections.Generic.List<IDeclarable>)(this.Session["Declarations"]));
    DeclarationsValueAcquired = true;
}
if ((DeclarationsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Declarations");
    if ((data != null))
    {
        this._DeclarationsField = ((global::System.Collections.Generic.List<IDeclarable>)(data));
    }
}
bool PageNameValueAcquired = false;
if (this.Session.ContainsKey("PageName"))
{
    this._PageNameField = ((string)(this.Session["PageName"]));
    PageNameValueAcquired = true;
}
if ((PageNameValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("PageName");
    if ((data != null))
    {
        this._PageNameField = ((string)(data));
    }
}
bool AuthorizeValueAcquired = false;
if (this.Session.ContainsKey("Authorize"))
{
    this._AuthorizeField = ((string)(this.Session["Authorize"]));
    AuthorizeValueAcquired = true;
}
if ((AuthorizeValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Authorize");
    if ((data != null))
    {
        this._AuthorizeField = ((string)(data));
    }
}
bool EntityNameValueAcquired = false;
if (this.Session.ContainsKey("EntityName"))
{
    this._EntityNameField = ((string)(this.Session["EntityName"]));
    EntityNameValueAcquired = true;
}
if ((EntityNameValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("EntityName");
    if ((data != null))
    {
        this._EntityNameField = ((string)(data));
    }
}
bool UIKindValueAcquired = false;
if (this.Session.ContainsKey("UIKind"))
{
    this._UIKindField = ((global::AbstraX.DataAnnotations.UIKind)(this.Session["UIKind"]));
    UIKindValueAcquired = true;
}
if ((UIKindValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("UIKind");
    if ((data != null))
    {
        this._UIKindField = ((global::AbstraX.DataAnnotations.UIKind)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
