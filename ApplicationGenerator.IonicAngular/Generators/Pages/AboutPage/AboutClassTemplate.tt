<#@ template debug="false" hostspecific="false" language="C#" inherits="AbstraX.Generators.Base.TemplateBase"  #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Utils" #>
<#@ import namespace="AbstraX.Generators" #>
<#@ import namespace="AbstraX.Angular" #>
<#@ output extension=".html" #>
<#@ parameter type="System.EventHandler" name="DebugCallback" #>
<#@ parameter type="System.Collections.Generic.List<object>" name="Input" #>
<#@ parameter type="System.Collections.Generic.IEnumerable<ModuleImportDeclaration>" name="Imports" #>
<#@ parameter type="System.Collections.Generic.List<ESModule>" name="Exports" #>
<#@ parameter type="System.Collections.Generic.List<IDeclarable>" name="Declarations" #>
<#@ parameter type="AbstraX.DataAnnotations.UILoadKind" name="UILoadKind" #>
<#@ parameter type="AbstraX.DataAnnotations.UIKind" name="UIKind" #>
<#@ parameter type="System.String" name="PageName" #>
<#@ parameter type="System.String" name="Authorize" #>
<#
    // gets info from the AppDataProvider (see Generators\Client\AppDataProvider\AppDataProviderClassTemplate.tt)

    var pageName = this.PageName.ToCamelCase();
    var className = this.PageName + "Page";
    var component = new Page(className, this.UILoadKind, this.UIKind);

    this.Declarations.Add(component);
    this.Exports.Add(component);

    foreach (var import in this.Imports)
    {
        this.WriteLine(import.DeclarationCode);
    }
#>
import { UserDataProvider } from '../../providers/userdata.provider';
import { AboutData, AppStore, AppDataProvider } from '../../providers/appdata.provider';
import { LaunchReview } from '@ionic-native/launch-review';
const { version } = require('../../../../package.json');

<#
    if (this.Authorize.Length > 0)
    {
#>
@Authorize("<#= this.Authorize #>")
<# 
    }
#>
@Component({
  selector: 'page-<#= pageName #>',
  templateUrl: '<#= pageName #>.html',
  styleUrls: ['./<#= pageName #>.scss']
})
export class <#= className #> implements OnInit {
  aboutData: AboutData;
  appStoreLinks: AppStore[];
  version: string;

  constructor(
    public router: Router,
    public routerOutlet: IonRouterOutlet,
    public toastCtrl: ToastController,
    public user: UserDataProvider,
    public app: AppDataProvider,
    public config: Config
  ) {
        this.version = version;
  }

  ionViewDidEnter() {
    this.app.getAboutData().subscribe((aboutData: AboutData) => {
      this.aboutData = aboutData;
      this.appStoreLinks = aboutData.details.appStoreLinks;
    });
  }

  async presentPopover(event: Event) {
  }
  
  ngOnInit() {
  }
}

