// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AbstraX.Generators.Pages.AboutPage
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Utils;
    using AbstraX.Generators;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Pages\AboutPage\AboutPageTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class AboutPageTemplate : AbstraX.Generators.Base.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(@"<ion-content>
  <ion-header class=""ion-no-border"">
    <ion-toolbar>
      <ion-buttons slot=""start"">
        <ion-menu-button></ion-menu-button>
      </ion-buttons>
      <ion-buttons slot=""end"">
        <ion-button (click)=""presentPopover($event)"">
          <ion-icon slot=""icon-only"" ios=""ellipsis-horizontal"" md=""ellipsis-vertical""></ion-icon>
        </ion-button>
      </ion-buttons>
    </ion-toolbar>
  </ion-header>

  <div class=""about-header"">
");
            
            #line 28 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Pages\AboutPage\AboutPageTemplate.tt"

    if (this.UsesAboutThisImage)
    {

            
            #line default
            #line hidden
            this.Write("    <a href=\"");
            
            #line 32 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Pages\AboutPage\AboutPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.AnchorHref));
            
            #line default
            #line hidden
            this.Write("\" title=\"");
            
            #line 32 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Pages\AboutPage\AboutPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.AnchorTitle));
            
            #line default
            #line hidden
            this.Write("\">\r\n      <div class=\"about-image main\"></div>\r\n    </a>\r\n");
            
            #line 35 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Pages\AboutPage\AboutPageTemplate.tt"

    }
    else
    {

            
            #line default
            #line hidden
            this.Write("    <div class=\"about-image main\"></div>\r\n");
            
            #line 41 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Pages\AboutPage\AboutPageTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("  </div>\r\n\r\n  <div class=\"about-info\" *ngIf=\"aboutData != null\">\r\n    <h3 class=\"" +
                    "ion-padding-top ion-padding-start\">About</h3>\r\n\r\n    <p class=\"ion-padding-start" +
                    " ion-padding-end\">\r\n      {{ aboutData.details.header.description }}\r\n    </p>\r\n" +
                    "\r\n    <div class=\"list-panel\">\r\n      <ion-list lines=\"full\">\r\n        <ion-item" +
                    ">\r\n        </ion-item>\r\n        <ion-item>\r\n            <label>Version {{ versio" +
                    "n }}</label>\r\n        </ion-item>\r\n        <ion-item *ngFor=\"let mainPageLink of" +
                    " aboutData.details.mainPageLinks\">\r\n          <a class=\"button\" [title]=\"mainPag" +
                    "eLink.title\" [href]=\"mainPageLink.url\" target=\"_blank\">{{ mainPageLink.text }}</" +
                    "a>\r\n        </ion-item>\r\n        <ion-item *ngFor=\"let socialLink of aboutData.d" +
                    "etails.socialLinks\">\r\n          <a class=\"button\" [title]=\"socialLink.visitTitle" +
                    "\" [href]=\"socialLink.accountUrl\" target=\"_blank\">\r\n            <img class=\"butto" +
                    "n-logo\" [src]=\"socialLink.smallLogo\" [alt]=\"socialLink.logoAlt\" />\r\n          </" +
                    "a>\r\n          <a class=\"button\" [href]=\"socialLink.accountUrl\" target=\"_blank\">\r" +
                    "\n            <ion-label>{{ socialLink.visitText }}</ion-label>\r\n          </a>\r\n" +
                    "        </ion-item>\r\n        <ion-item *ngFor=\"let appStoreLink of appStoreLinks" +
                    "\">\r\n          <a class=\"button\" [title]=\"appStoreLink.visitTitle\" [href]=\"appSto" +
                    "reLink.accountUrl\" target=\"_blank\">\r\n            <img class=\"button-logo\" [src]=" +
                    "\"appStoreLink.smallLogo\" [alt]=\"appStoreLink.logoAlt\" />\r\n          </a>\r\n      " +
                    "    <a class=\"button\" [href]=\"appStoreLink.accountUrl\" target=\"_blank\">\r\n       " +
                    "     <ion-label>{{ appStoreLink.text }}</ion-label>\r\n          </a>\r\n        </i" +
                    "on-item>\r\n        <ion-item *ngFor=\"let socialLink of aboutData.details.tellOthe" +
                    "rs\">\r\n          <a class=\"button\" [title]=\"socialLink.visitTitle\" [href]=\"social" +
                    "Link.accountUrl\" target=\"_blank\">\r\n            <img class=\"button-logo\" [src]=\"s" +
                    "ocialLink.smallLogo\" [alt]=\"socialLink.logoAlt\" />\r\n          </a>\r\n          <a" +
                    " class=\"button\" [href]=\"socialLink.accountUrl\" target=\"_blank\">\r\n            <io" +
                    "n-label>{{ socialLink.visitText }}</ion-label>\r\n          </a>\r\n        </ion-it" +
                    "em>\r\n      </ion-list>\r\n    </div>\r\n  </div>\r\n</ion-content>\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Pages\AboutPage\AboutPageTemplate.tt"

private global::System.EventHandler _DebugCallbackField;

/// <summary>
/// Access the DebugCallback parameter of the template.
/// </summary>
private global::System.EventHandler DebugCallback
{
    get
    {
        return this._DebugCallbackField;
    }
}

private bool _UsesAboutThisImageField;

/// <summary>
/// Access the UsesAboutThisImage parameter of the template.
/// </summary>
private bool UsesAboutThisImage
{
    get
    {
        return this._UsesAboutThisImageField;
    }
}

private string _AnchorHrefField;

/// <summary>
/// Access the AnchorHref parameter of the template.
/// </summary>
private string AnchorHref
{
    get
    {
        return this._AnchorHrefField;
    }
}

private string _AnchorTitleField;

/// <summary>
/// Access the AnchorTitle parameter of the template.
/// </summary>
private string AnchorTitle
{
    get
    {
        return this._AnchorTitleField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool DebugCallbackValueAcquired = false;
if (this.Session.ContainsKey("DebugCallback"))
{
    this._DebugCallbackField = ((global::System.EventHandler)(this.Session["DebugCallback"]));
    DebugCallbackValueAcquired = true;
}
if ((DebugCallbackValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("DebugCallback");
    if ((data != null))
    {
        this._DebugCallbackField = ((global::System.EventHandler)(data));
    }
}
bool UsesAboutThisImageValueAcquired = false;
if (this.Session.ContainsKey("UsesAboutThisImage"))
{
    this._UsesAboutThisImageField = ((bool)(this.Session["UsesAboutThisImage"]));
    UsesAboutThisImageValueAcquired = true;
}
if ((UsesAboutThisImageValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("UsesAboutThisImage");
    if ((data != null))
    {
        this._UsesAboutThisImageField = ((bool)(data));
    }
}
bool AnchorHrefValueAcquired = false;
if (this.Session.ContainsKey("AnchorHref"))
{
    this._AnchorHrefField = ((string)(this.Session["AnchorHref"]));
    AnchorHrefValueAcquired = true;
}
if ((AnchorHrefValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("AnchorHref");
    if ((data != null))
    {
        this._AnchorHrefField = ((string)(data));
    }
}
bool AnchorTitleValueAcquired = false;
if (this.Session.ContainsKey("AnchorTitle"))
{
    this._AnchorTitleField = ((string)(this.Session["AnchorTitle"]));
    AnchorTitleValueAcquired = true;
}
if ((AnchorTitleValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("AnchorTitle");
    if ((data != null))
    {
        this._AnchorTitleField = ((string)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
