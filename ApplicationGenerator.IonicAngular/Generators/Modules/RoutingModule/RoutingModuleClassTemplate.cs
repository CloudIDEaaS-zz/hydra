// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AbstraX.Generators.Modules.RoutingModule
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Utils;
    using AbstraX.Generators;
    using AbstraX.Angular;
    using AbstraX;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Modules\RoutingModule\RoutingModuleClassTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class RoutingModuleClassTemplate : AbstraX.Generators.Base.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("import { NgModule } from \'@angular/core\';\r\nimport { PreloadAllModules, RouterModu" +
                    "le, Routes } from \'@angular/router\';\r\n");
            
            #line 18 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Modules\RoutingModule\RoutingModuleClassTemplate.tt"

    foreach (var import in this.Imports)
    {
        this.WriteLine(import.DeclarationCode);
    }

            
            #line default
            #line hidden
            this.Write("\r\nconst routes: Routes = ");
            
            #line 25 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Modules\RoutingModule\RoutingModuleClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Routes.GetRoutesArrayCode()));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.for");
            
            #line 29 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Modules\RoutingModule\RoutingModuleClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.IsRoot ? "Root" : "Child"));
            
            #line default
            #line hidden
            this.Write("(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class ");
            
            #line 33 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Modules\RoutingModule\RoutingModuleClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.ModuleName));
            
            #line default
            #line hidden
            this.Write(" { }\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\MC\CloudIDEaaS\root\ApplicationGenerator.IonicAngular\Generators\Modules\RoutingModule\RoutingModuleClassTemplate.tt"

private global::System.EventHandler _DebugCallbackField;

/// <summary>
/// Access the DebugCallback parameter of the template.
/// </summary>
private global::System.EventHandler DebugCallback
{
    get
    {
        return this._DebugCallbackField;
    }
}

private global::System.Collections.Generic.List<Angular.Routes.Route> _RoutesField;

/// <summary>
/// Access the Routes parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<Angular.Routes.Route> Routes
{
    get
    {
        return this._RoutesField;
    }
}

private global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration> _ImportsField;

/// <summary>
/// Access the Imports parameter of the template.
/// </summary>
private global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration> Imports
{
    get
    {
        return this._ImportsField;
    }
}

private bool _IsRootField;

/// <summary>
/// Access the IsRoot parameter of the template.
/// </summary>
private bool IsRoot
{
    get
    {
        return this._IsRootField;
    }
}

private string _ModuleNameField;

/// <summary>
/// Access the ModuleName parameter of the template.
/// </summary>
private string ModuleName
{
    get
    {
        return this._ModuleNameField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool DebugCallbackValueAcquired = false;
if (this.Session.ContainsKey("DebugCallback"))
{
    this._DebugCallbackField = ((global::System.EventHandler)(this.Session["DebugCallback"]));
    DebugCallbackValueAcquired = true;
}
if ((DebugCallbackValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("DebugCallback");
    if ((data != null))
    {
        this._DebugCallbackField = ((global::System.EventHandler)(data));
    }
}
bool RoutesValueAcquired = false;
if (this.Session.ContainsKey("Routes"))
{
    this._RoutesField = ((global::System.Collections.Generic.List<Angular.Routes.Route>)(this.Session["Routes"]));
    RoutesValueAcquired = true;
}
if ((RoutesValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Routes");
    if ((data != null))
    {
        this._RoutesField = ((global::System.Collections.Generic.List<Angular.Routes.Route>)(data));
    }
}
bool ImportsValueAcquired = false;
if (this.Session.ContainsKey("Imports"))
{
    this._ImportsField = ((global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration>)(this.Session["Imports"]));
    ImportsValueAcquired = true;
}
if ((ImportsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Imports");
    if ((data != null))
    {
        this._ImportsField = ((global::System.Collections.Generic.IEnumerable<ModuleImportDeclaration>)(data));
    }
}
bool IsRootValueAcquired = false;
if (this.Session.ContainsKey("IsRoot"))
{
    this._IsRootField = ((bool)(this.Session["IsRoot"]));
    IsRootValueAcquired = true;
}
if ((IsRootValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("IsRoot");
    if ((data != null))
    {
        this._IsRootField = ((bool)(data));
    }
}
bool ModuleNameValueAcquired = false;
if (this.Session.ContainsKey("ModuleName"))
{
    this._ModuleNameField = ((string)(this.Session["ModuleName"]));
    ModuleNameValueAcquired = true;
}
if ((ModuleNameValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ModuleName");
    if ((data != null))
    {
        this._ModuleNameField = ((string)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
