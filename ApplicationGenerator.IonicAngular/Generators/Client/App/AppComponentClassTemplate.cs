// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AbstraX.Generators.Client.App
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Utils;
    using AbstraX.Generators;
    using AbstraX.DataAnnotations;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Client\App\AppComponentClassTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class AppComponentClassTemplate : AbstraX.Generators.Base.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(@"import { Component, Injector, OnInit, ViewEncapsulation } from '@angular/core';
import { MenuController, Platform, ToastController } from '@ionic/angular';
import { Storage } from '@ionic/storage';
import { UserDataProvider } from './providers/userdata.provider';
import { Guid } from ""guid-typescript"";
import { List } from 'linq-collections';
import { Router } from '@angular/router';
import { UserProvider } from './providers/user.provider';
");
            
            #line 25 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Client\App\AppComponentClassTemplate.tt"
 
    foreach (var import in this.Imports)
    {
        this.WriteLine(import.DeclarationCode);
    }

            
            #line default
            #line hidden
            this.Write(@"
@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss'],
  encapsulation: ViewEncapsulation.None
})
export class AppComponent implements OnInit {
  menuTreeConfiguration = {
    childNodesMember : ""subMenus"",
    titleProperty: ""title"",
    iconProperty: ""icon"",
    isExpandedProperty: ""isExpanded""
  };
  applicationMenuNodes = [];
  loggedIn = false;
  dark = false;
  getNodeContentFunction: (node: any) => string;

  constructor(
    private injector: Injector,
    private menu: MenuController,
    private platform: Platform,
    private router: Router,
    private storage: Storage,
    private userData: UserDataProvider,
    private toastCtrl: ToastController
  ) {
    this.initializeApp();
    this.getNodeContentFunction = (node: any) => this.getNodeContent(node);
  }

  getNodeContent(node: any): string {
    return `<hyper-link class=""menuitem item sc-ion-label-md-h"" route=""/app/main/about"">
      ${ node.title }
    </hyper-link>`;
  }

  async ngOnInit() {
    this.checkLoginStatus();
    this.listenForLoginEvents();
  }

  initializeApp() {
    this.platform.ready().then(() => {
    });

    this.initApp();
  }

  initApp() {
");
            
            #line 82 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Client\App\AppComponentClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.InitApp));
            
            #line default
            #line hidden
            this.Write("\r\n  }\r\n\r\n  initUser() {\r\n");
            
            #line 86 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Client\App\AppComponentClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.InitUser));
            
            #line default
            #line hidden
            this.Write(@"
  }

  checkLoginStatus() {
    return this.userData.isLoggedIn().then(loggedIn => {
      return this.updateLoggedInStatus(loggedIn);
    });
  }

  updateLoggedInStatus(loggedIn: boolean) {
    setTimeout(() => {
      this.loggedIn = loggedIn;
    }, 300);
    this.initUser();
  }

  listenForLoginEvents() {
    window.addEventListener('user:login', () => {
      this.updateLoggedInStatus(true);
    });

    window.addEventListener('user:signup', () => {
      this.updateLoggedInStatus(true);
    });

    window.addEventListener('user:logout', () => {
      this.updateLoggedInStatus(false);
    });
  }

  logout() {
    this.userData.logout().then(() => {
      return this.router.navigateByUrl('/login');
    });
  }

  openHomePage() {
    this.menu.enable(false);
    this.storage.set('ion_did_homepage', false);
    this.router.navigateByUrl('/welcome');
  }

  getAllModules() {
    return new Promise((resolve) => {
      const id = Guid.create().toString();
      window['webpackJsonp'](
        [],
        {[id]: function(module, exports, __webpack_require__) {
          resolve(__webpack_require__.c);
        }},
        [id]
      );
    });
  }
}
");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Client\App\AppComponentClassTemplate.tt"

private global::System.EventHandler _DebugCallbackField;

/// <summary>
/// Access the DebugCallback parameter of the template.
/// </summary>
private global::System.EventHandler DebugCallback
{
    get
    {
        return this._DebugCallbackField;
    }
}

private global::System.Collections.Generic.IEnumerable<AbstraX.ModuleImportDeclaration> _ImportsField;

/// <summary>
/// Access the Imports parameter of the template.
/// </summary>
private global::System.Collections.Generic.IEnumerable<AbstraX.ModuleImportDeclaration> Imports
{
    get
    {
        return this._ImportsField;
    }
}

private global::System.Collections.Generic.IEnumerable<AbstraX.Angular.Page> _PagesField;

/// <summary>
/// Access the Pages parameter of the template.
/// </summary>
private global::System.Collections.Generic.IEnumerable<AbstraX.Angular.Page> Pages
{
    get
    {
        return this._PagesField;
    }
}

private string _AppNameField;

/// <summary>
/// Access the AppName parameter of the template.
/// </summary>
private string AppName
{
    get
    {
        return this._AppNameField;
    }
}

private string _IdentityProviderField;

/// <summary>
/// Access the IdentityProvider parameter of the template.
/// </summary>
private string IdentityProvider
{
    get
    {
        return this._IdentityProviderField;
    }
}

private string _InitAppField;

/// <summary>
/// Access the InitApp parameter of the template.
/// </summary>
private string InitApp
{
    get
    {
        return this._InitAppField;
    }
}

private string _InitUserField;

/// <summary>
/// Access the InitUser parameter of the template.
/// </summary>
private string InitUser
{
    get
    {
        return this._InitUserField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool DebugCallbackValueAcquired = false;
if (this.Session.ContainsKey("DebugCallback"))
{
    this._DebugCallbackField = ((global::System.EventHandler)(this.Session["DebugCallback"]));
    DebugCallbackValueAcquired = true;
}
if ((DebugCallbackValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("DebugCallback");
    if ((data != null))
    {
        this._DebugCallbackField = ((global::System.EventHandler)(data));
    }
}
bool ImportsValueAcquired = false;
if (this.Session.ContainsKey("Imports"))
{
    this._ImportsField = ((global::System.Collections.Generic.IEnumerable<AbstraX.ModuleImportDeclaration>)(this.Session["Imports"]));
    ImportsValueAcquired = true;
}
if ((ImportsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Imports");
    if ((data != null))
    {
        this._ImportsField = ((global::System.Collections.Generic.IEnumerable<AbstraX.ModuleImportDeclaration>)(data));
    }
}
bool PagesValueAcquired = false;
if (this.Session.ContainsKey("Pages"))
{
    this._PagesField = ((global::System.Collections.Generic.IEnumerable<AbstraX.Angular.Page>)(this.Session["Pages"]));
    PagesValueAcquired = true;
}
if ((PagesValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Pages");
    if ((data != null))
    {
        this._PagesField = ((global::System.Collections.Generic.IEnumerable<AbstraX.Angular.Page>)(data));
    }
}
bool AppNameValueAcquired = false;
if (this.Session.ContainsKey("AppName"))
{
    this._AppNameField = ((string)(this.Session["AppName"]));
    AppNameValueAcquired = true;
}
if ((AppNameValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("AppName");
    if ((data != null))
    {
        this._AppNameField = ((string)(data));
    }
}
bool IdentityProviderValueAcquired = false;
if (this.Session.ContainsKey("IdentityProvider"))
{
    this._IdentityProviderField = ((string)(this.Session["IdentityProvider"]));
    IdentityProviderValueAcquired = true;
}
if ((IdentityProviderValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("IdentityProvider");
    if ((data != null))
    {
        this._IdentityProviderField = ((string)(data));
    }
}
bool InitAppValueAcquired = false;
if (this.Session.ContainsKey("InitApp"))
{
    this._InitAppField = ((string)(this.Session["InitApp"]));
    InitAppValueAcquired = true;
}
if ((InitAppValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("InitApp");
    if ((data != null))
    {
        this._InitAppField = ((string)(data));
    }
}
bool InitUserValueAcquired = false;
if (this.Session.ContainsKey("InitUser"))
{
    this._InitUserField = ((string)(this.Session["InitUser"]));
    InitUserValueAcquired = true;
}
if ((InitUserValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("InitUser");
    if ((data != null))
    {
        this._InitUserField = ((string)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
