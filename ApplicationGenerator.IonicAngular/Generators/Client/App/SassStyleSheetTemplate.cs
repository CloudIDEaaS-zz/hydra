// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AbstraX.Generators.Client.App
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Utils;
    using AbstraX.Generators;
    using AbstraX.Angular;
    using AbstraX;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Client\App\SassStyleSheetTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class SassStyleSheetTemplate : AbstraX.Generators.Base.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("@import \"~@ionic/angular/css/typography.css\";\r\n\r\n.tree-view > div {\r\n  border-bot" +
                    "tom: 1px solid lightgray;\r\n}\r\n\r\nion-menu ion-content {\r\n  --padding-top: 20px;\r\n" +
                    "  --padding-bottom: 20px;\r\n\r\n  --background: var(--ion-item-background, var(--io" +
                    "n-background-color, #fff));\r\n}\r\n\r\n/* Remove background transitions for switching" +
                    " themes */\r\nion-menu ion-item {\r\n  --transition: none;\r\n}\r\n\r\nion-item.selected {" +
                    "\r\n  --color: var(--ion-color-primary);\r\n}\r\n\r\n/*\r\n * Material Design Menu\r\n*/\r\nio" +
                    "n-menu.md ion-list {\r\n  padding: 20px 0;\r\n}\r\n\r\nion-menu.md ion-list-header {\r\n  " +
                    "padding-left: 18px;\r\n  padding-right: 18px;\r\n\r\n  text-transform: uppercase;\r\n  l" +
                    "etter-spacing: .1em;\r\n  font-weight: 450;\r\n}\r\n\r\nion-menu.md ion-item {\r\n  --padd" +
                    "ing-start: 18px;\r\n\r\n  margin-right: 10px;\r\n\r\n  border-radius: 0 50px 50px 0;\r\n\r\n" +
                    "  font-weight: 500;\r\n}\r\n\r\nion-menu.md ion-item.selected {\r\n  --background: rgba(" +
                    "var(--ion-color-primary-rgb), 0.14);\r\n}\r\n\r\nion-menu.md ion-item.selected ion-ico" +
                    "n {\r\n  color: var(--ion-color-primary);\r\n}\r\n\r\nion-menu.md ion-list-header,\r\nion-" +
                    "menu.md ion-item ion-icon {\r\n  color: var(--ion-color-step-650, #5f6368);\r\n}\r\n\r\n" +
                    "ion-menu.md ion-list:not(:last-of-type) {\r\n  border-bottom: 1px solid var(--ion-" +
                    "color-step-150, #d7d8da);\r\n}\r\n\r\n\r\n/*\r\n * iOS Menu\r\n*/\r\nion-menu.ios ion-list-hea" +
                    "der {\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  margin-bottom: 8px;\r\n}" +
                    "\r\n\r\nion-menu.ios ion-list {\r\n  padding: 20px 0 0;\r\n}\r\n\r\nion-menu.ios ion-item {\r" +
                    "\n  --padding-start: 16px;\r\n  --min-height: 50px;\r\n}\r\n\r\nion-menu.ios ion-item ion" +
                    "-icon {\r\n  font-size: 24px;\r\n  color: #73849a;\r\n}\r\n\r\nion-menu.ios ion-item.selec" +
                    "ted ion-icon {\r\n  color: var(--ion-color-primary);\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\MC\CloudIDEaaS\develop\ApplicationGenerator.IonicAngular\Generators\Client\App\SassStyleSheetTemplate.tt"

private global::System.EventHandler _DebugCallbackField;

/// <summary>
/// Access the DebugCallback parameter of the template.
/// </summary>
private global::System.EventHandler DebugCallback
{
    get
    {
        return this._DebugCallbackField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool DebugCallbackValueAcquired = false;
if (this.Session.ContainsKey("DebugCallback"))
{
    this._DebugCallbackField = ((global::System.EventHandler)(this.Session["DebugCallback"]));
    DebugCallbackValueAcquired = true;
}
if ((DebugCallbackValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("DebugCallback");
    if ((data != null))
    {
        this._DebugCallbackField = ((global::System.EventHandler)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
