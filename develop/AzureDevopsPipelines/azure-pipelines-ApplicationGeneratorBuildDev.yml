trigger:
  paths:
    include:
     - ApplicationGenerator
     - ApplicationGenerator.sln
     - AzureDevopsPipelines
     - ApplicationGenerator.Interfaces
     - Utils
     - CodeInterfaces
     - VisualStudioProvider
     - ApplicationGenerator.Overrides
     - Hydra.Installer
     - Hydra.Extension
     - Hydra.InstallerStandalone
     - UtilsProjects
     - ColorMine
     - CppParser
     - ProcessDiagnosticsLibrary
     - SDKInterfaceLibrary.Entities
     - SharpSerializer.Library
     - Rtf2Html
     - ConverterHtml2010
     - Interpreter2010
     - Parser2010
     - Rtf2Html2010
     - Sys2010
     - ApplicationGenerator.Data
     - Utils.Core
     - Binaries
     - XPathParser
     - TypeScriptAST
     - ModuleImportsHelper
     - PackageCacheStatus
     - ApplicationGeneratorBuildTasks
     - TestApplicationGeneratorBuildTasks
     - Hydra.Interfaces
     - NetCoreReflectionShim.Service
     - NetCoreReflectionShim.Agent
     - XPathParser.Core
     - NetCoreReflectionShim.CodeGen
     - NetCoreReflectionShim.Test
     - NetCoreReflectionShim.TestProxy
     - ApplicationGenerator.IonicAngular
     - SassParser
     - DynamicTemplateEngine
     - NamedPipeWrapper
     - RunCommandElevated
     - HydraCrashAnalyzer
     - CLIBuilderProcessor
     - Hydra.Scanner
     - DllExport.Metadata
     - DllExport.MSBuild
     - DllExport
     - SharpSerializer
     - Mailslot
     - HydraDebugAssistant
     - VU_MeterLibrary
     - Wizard
     - HydraResourceTracer
     - AppStoreInterfaces
     - SqlLocalDb
     - HydraAppStore
     - ApplicationGenerator.Tests
     - Hydra.ReleaseManagement
     - ReleaseAgent
     - Hydra.ProdReleaseBuildTarget
  branches:
    include:
    - feature/*

variables:

  component: 'ApplicationGenerator'
  system.debug: true
  vmImageName: 'windows-latest'
  buildConfiguration: 'Debug'
  solution: '$(component).sln'
  HYDRASOLUTIONPATH: $(Build.SourcesDirectory)

pool:
  vmImage: $(vmImageName)

stages:
- stage: DevBuild
  condition: and(succeeded(), true)
  jobs:
    - template: "./azure-pipelines-ApplicationGeneratorEnvironmentTemplate.yml"
      parameters:
        environment: dev
        buildConfiguration: $(buildConfiguration)
        solution: $(solution)
        HYDRASOLUTIONPATH: $(HYDRASOLUTIONPATH)
- stage: FinishDevBuild
  condition: and(true, succeeded()) 
  jobs:
    - job: ReportTriggerRemaining
      displayName: Report trigger deploy
      steps:
      - checkout: none
      - task: CmdLine@2
        displayName: Report trigger deploy
        inputs:
          script: |
            echo Should trigger deploy