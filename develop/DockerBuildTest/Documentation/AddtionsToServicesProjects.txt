Dockerfile
PublishProfiles
launchSettings
UserSecrets (see: https://blog.matjanowski.pl/2017/11/18/managing-options-and-secrets-in-net-core-and-docker/)
appsettings.shared.json
DockerBuildTest.wpp.targets
Project file:

    <ProjectName>DockerBuildTest</ProjectName>
    <UserSecretsId>87250b8e-7d55-488e-81da-85f393cc791b</UserSecretsId>
    <DockerDefaultTargetOS>Windows</DockerDefaultTargetOS>
    <DockerfileContext>.</DockerfileContext>
    <DockerfileRunArguments>--volume $(HYDRASOLUTIONPATH)\DockerVolume\$(ProjectName)\config:C:\app\config --volume $(HYDRASOLUTIONPATH)\DockerVolume\$(ProjectName)\logs:C:\app\logs --volume $(HYDRASOLUTIONPATH)\DockerVolume\Shared\usersecrets\$(UserSecretsId):c:\Users\ContainerUser\AppData\Roaming\Microsoft\usersecrets\$(UserSecretsId) --env ASPNETCORE_ENVIRONMENT=Development</DockerfileRunArguments>

    <# notes:

        <ProjectName>               # this was deprecated with new VS versions, we use it in <DockerDefaultTargetOS>
        <UserSecretsId>             # must be the same in each project that uses the same secrets.json
        <DockerDefaultTargetOS>     # default
        <DockerfileContext>         # causes docker build at project level, not solution
        <DockerfileRunArguments>    # DockerVolume directories must be created first, including usersecrets. --env ASPNETCORE_ENVIRONMENT=Development does not seem to have impact, must be used along with DOTNET_ENVIRONMENT in launchSettings.json
    #>

  <ItemGroup>
    <None Update="appsettings.shared.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="Dockerfile">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <Copy SourceFiles="..\SharedFiles\ServerAppSettings\appsettings.shared.json" DestinationFolder="$(ProjectDir)" />
  </Target>

  # allows publish on build

  <Import Project="$(ProjectDir)$(ProjectName).wpp.targets" />

launchSettings.json:

{
  "profiles": {
    "Docker": {
      "commandName": "Docker",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development",
        "DOTNET_ENVIRONMENT": "Development"
      }
    },
    "Project": {
      "commandName": "Project",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    }
  }
}

Example of how docker run should work:

docker run -dt -v "C:\Users\Ken\onecoremsvsmon\16.5.0102.0:C:\remote_debugger:ro" -v "D:\MC\CloudIDEaaS\root\DockerBuildTest:C:\app" -v "D:\MC\CloudIDEaaS\root:c:\src" -v "C:\Users\Ken\AppData\Roaming\Microsoft\UserSecrets:C:\Users\ContainerUser\AppData\Roaming\Microsoft\UserSecrets:ro" -v "C:\Users\Ken\.nuget\packages\:c:\.nuget\fallbackpackages2" -v "C:\Program Files\dotnet\sdk\NuGetFallbackFolder:c:\.nuget\fallbackpackages" -e "DOTNET_USE_POLLING_FILE_WATCHER=1" -e "NUGET_PACKAGES=c:\.nuget\fallbackpackages2" -e "NUGET_FALLBACK_PACKAGES=c:\.nuget\fallbackpackages;c:\.nuget\fallbackpackages2" --name DockerBuildTest --volume D:\MC\CloudIDEaaS\root\DockerVolume\DockerBuildTest\config:C:\app\config --volume D:\MC\CloudIDEaaS\root\DockerVolume\DockerBuildTest\logs:C:\app\logs --env ASPNETCORE_ENVIRONMENT=Development --entrypoint C:\remote_debugger\x64\msvsmon.exe dockerbuildtest:dev /noauth /anyuser /silent /nostatus /noclrwarn /nosecuritywarn /nofirewallwarn /nowowwarn /fallbackloadremotemanagedpdbs /timeout:2147483646 /LogDebuggeeOutputToStdOut
docker run -dt -v "C:\Users\Ken\onecoremsvsmon\16.5.0102.0:C:\remote_debugger:ro" -v "D:\MC\CloudIDEaaS\root\DockerBuildTest:C:\app" -v "D:\MC\CloudIDEaaS\root:c:\src" -v "C:\Users\Ken\AppData\Roaming\Microsoft\UserSecrets:C:\Users\ContainerUser\AppData\Roaming\Microsoft\UserSecrets:ro" -v "C:\Users\Ken\.nuget\packages\:c:\.nuget\fallbackpackages2" -v "C:\Program Files\dotnet\sdk\NuGetFallbackFolder:c:\.nuget\fallbackpackages" -e "DOTNET_USE_POLLING_FILE_WATCHER=1" -e "NUGET_PACKAGES=c:\.nuget\fallbackpackages2" -e "NUGET_FALLBACK_PACKAGES=c:\.nuget\fallbackpackages;c:\.nuget\fallbackpackages2" --name DockerBuildTest --volume D:\MC\CloudIDEaaS\root\DockerVolume\DockerBuildTest\config:C:\app\config --volume D:\MC\CloudIDEaaS\root\DockerVolume\DockerBuildTest\logs:C:\app\logs --env ASPNETCORE_ENVIRONMENT=Development --entrypoint C:\remote_debugger\x64\msvsmon.exe dockerbuildtest:dev /noauth /anyuser /silent /nostatus /noclrwarn /nosecuritywarn /nofirewallwarn /nowowwarn /fallbackloadremotemanagedpdbs /timeout:2147483646 /LogDebuggeeOutputToStdOut

