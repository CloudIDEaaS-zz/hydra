function services() {

	function initService($http, $rootScope, merchantService, transactionService) {

		var service = this;

		service.init = function() {
			console.log("Running init");
		};

		var getMerchantList = function() {
			merchantService.getWS().then(function(response) {
				console.log(response);
				service.merchantList = response.data.merchants;

			});
		};

		return service;

	}

	function paymentService($log, $http) {

		var service = this;
		var selectedPaymentInfoModel = {};
		var paymentError = {};
		// var isEditPaymentInformation=true;

		service.checkMerchantEnablement = function(purchaseId) {
			var req = {
				method : 'GET',
				url : 'rest/paymentInfo/isEnabled/' + purchaseId
			};

			return $http(req);

		}

		service.cancelPayment = function() {
			var req = {
				method : 'GET',
				url : 'rest/paymentInfo/cancelPayment'
			};
			return $http(req);

		}
		
		service.processPayment = function(paymentInfoModel) {
			var req = {
				method : 'POST',
				url : 'rest/paymentInfo/processPayment',
				headers : {
					'Content-Type' : 'application/json'
				},
				data : paymentInfoModel
			};
			console.log("Service: PaymentInfoModel json object")
			console.log(paymentInfoModel);
			return $http(req);

		}

		service.getStateList = function() {
			var req = {
				method : 'GET',
				url : 'rest/paymentInfo/getStateList/',
				headers : {
					'Content-Type' : 'application/json'
				},
			// data : paymentInfoModel
			};

			return $http(req);

		}

		service.getYearList = function() {
			var req = {
				method : 'GET',
				url : 'rest/yearBean/getYearList/',
				headers : {
					'Content-Type' : 'application/json'
				},
			};

			return $http(req);

		}

		service.validatePaymentInfo = function(paymentInfoModel) {

			var req = {
				method : 'POST',
				url : 'rest/paymentInfo/validate',
				headers : {
					'Content-Type' : 'application/json'
				},
				data : paymentInfoModel
			};

			return $http(req);

		}

		service.getReturnCode = function() {

			var req = {
				method : 'GET',
				url : 'rest/paymentInfo/returnCodeVar/',
				headers : {
					'Content-Type' : 'application/json'
				},

			};
			return $http(req);

		}

		service.getFormattedPaymentInfo = function() {

			var req = {
				method : 'GET',
				url : 'rest/paymentInfo/paymentModel/',
			};
			return $http(req);

		}

		service.getPdfReceipt = function() {

			var req = {
				method : 'GET',
				url : 'rest/paymentInfo/receiptPdf/',
				responseType : 'arraybuffer'
			};
			return $http(req);

		}

		service.getPaymentXML = function() {
			var req = {
				method : 'GET',
				url : 'rest/paymentInfo/paymentXMLModel'
			};

			return $http(req);

		}

		service.getPurchaseSummaryList = function() {
			var req = {
				method : 'GET',
				url : 'rest/paymentInfo/purchaseSummaryList'
			};
			return $http(req);
		}

		service.getCardTypeList = function() {
			var req = {
				method : 'GET',
				url : 'rest/paymentInfo/cardTypeList'
			};

			return $http(req);

		}

		service.setPaymentInfoModel = function(paymentInfoModel) {
			selectedPaymentInfoModel = paymentInfoModel;
		}
		service.getPaymentInfoModel = function() {
			return selectedPaymentInfoModel;
		}
		service.getReturnURL = function() {
			var req = {
				method : 'GET',
				url : 'rest/paymentInfo/returnUrl'
			};
			return $http(req);
		}

		service.setErrorType = function(paymentInfoModel) {
		}

		service.setPaymentError = function(error) {
			console.log(error);
			paymentError = error;
			//console.log(paymentError);
		}
		service.getPaymentError = function() {
			return paymentError;
		}
		service.endConversation = function() {
			var req = {
				method : 'GET',
				url : 'rest/paymentInfo/endConversation'
			};
			return $http(req);
		}
		service.clearPurchasePaymentInfo = function(purchaseId) {
			var req = {
				method : 'GET',
				url : 'rest/paymentInfo/clearPurchasePaymentInfo/' + purchaseId
			};
			return $http(req);
		}
		return service;

	}
	;

	function merchantService($log, $http) {
		var service = this;

		service.addMerchant = function(merchantModel) {
			var req = {
				method : 'POST',
				url : 'rest/merchant',
				headers : {
					'Content-Type' : 'application/json'
				},
				data : merchantModel

			};

			return $http(req);

		}
		service.updateMerchant = function(merchantModel) {
			var req = {
				method : 'POST',
				url : 'rest/merchant/update',
				headers : {
					'Content-Type' : 'application/json'
				},
				data : merchantModel

			};

			return $http(req);

		}

		service.getMerchantById = function(id) {
			var req = {
				method : 'GET',
				url : 'rest/merchant/' + id
			};
			return $http(req);
		}

		service.getMerchantByMerchantId = function(merchantId) {
			var req = {
				method : 'GET',
				url : 'rest/merchant/merchantId/' + merchantId
			};
			return $http(req);
		}

		service.getMerchantList = function() {
			var req = {
				method : 'GET',
				url : 'rest/merchant'
			};
			return $http(req);
		}
		service.getWS = function() {
			var path = 'rest/merchant';
			return $http.get(path, function(response) {
				console.log(JSON.stringify(response));
				return response.data;
			});
		}

		/*
		 * service.getMerchantNamesList= function() { var req = { method :
		 * 'GET', url : 'rest/merchant/names' }; return $http(req); }
		 */
		service.search = function(merchantSearchModel, orderBy, orderType) {

			if (orderBy == undefined) {
				orderBy = "NAN";
				orderType = "NAN";
			}
			var req = {
				method : 'POST',
				url : 'rest/merchant/search/' + orderBy + '/' + orderType,
				headers : {
					'Content-Type' : 'application/json'
				},
				data : merchantSearchModel
			};

			return $http(req);

		};

		service.getAllCardTypeList = function() {
			var req = {
				method : 'GET',
				url : 'rest/merchant/cardTypeList'
			};
			return $http(req);
		}

		return service;

	}
	;

	function transactionService($log, $http) {
		var service = this;
		var selectedTransaction = {};
		var searchTransactionModel = {};
		// var transactionList = [];
		var transactionList = null;
		var fromDate = null;
		var toDate = null;
		var currentPage = 1;

		service.search = function(transactionSearchModel, orderBy, orderType) {

			if (orderBy == undefined) {
				orderBy = "NAN";
				orderType = "NAN";
			}
			var req = {
				method : 'POST',
				url : 'rest/transaction/search/' + orderBy + '/' + orderType,
				headers : {
					'Content-Type' : 'application/json'
				},
				data : transactionSearchModel
			};

			return $http(req);

		};

		service.getPdfReceipt = function(transactionId) {

			var req = {
				method : 'GET',
				url : 'rest/transaction/receiptPdf/' + transactionId,
				responseType : 'arraybuffer'
			};
			return $http(req);

		};
		service.getExcelTransactions = function(transactionSearchModel) {

			var req = {
				method : 'POST',
				url : 'rest/transaction/exportExcel',
				responseType : 'arraybuffer',
				headers : {
					'Content-Type' : 'application/json'
				},
				data : transactionSearchModel
			};
			return $http(req);
		}

		service.sendReceiptEmail = function(transactionId) {
			var req = {
				method : 'GET',
				url : 'rest/transaction/email/' + transactionId,
			};
			return $http(req);

		};

		service.setTransactionHistory = function(transaction) {
			selectedTransaction = transaction;
		};
		service.getTransactionHistory = function() {
			return selectedTransaction;
		};
		service.clearSearchCriterias = function () {
			searchTransactionModel = {};
			fromDate = null;
			toDate = null;
		};
		service.setBackSearchTransactionCriteria = function(searchModel) {
			console.log(searchTransactionModel);
			searchTransactionModel = searchModel;
		};
		service.getBackSearchTransactionCriteria = function() {
			return searchTransactionModel;
		};
		service.setBackFromDate = function(fDate) {
			fromDate = fDate;
		};
		service.getBackFromDate = function() {
			return fromDate;
		};

		service.setBackToDate = function(tDate) {
			toDate = tDate;
		};
		service.getBackToDate = function() {
			return toDate;
		};

		service.setBackTransactionList = function(list) {
			transactionList = list;
		};
		service.getBackTransactionList = function() {
			return transactionList;
		};

		service.setBackCurrentPage = function(page) {
			currentPage = page;
		};
		service.getBackCurrentPage = function() {
			return currentPage;
		};

		return service;

	}
	;

	angular.module("AZ_PORTAL")
			.service("initService", initService)
			.service("paymentService",paymentService)
			.service("merchantService", merchantService)
			.service("transactionService", transactionService);

}